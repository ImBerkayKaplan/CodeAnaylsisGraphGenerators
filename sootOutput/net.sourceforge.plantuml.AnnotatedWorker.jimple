public class net.sourceforge.plantuml.AnnotatedWorker extends java.lang.Object
{
    private final net.sourceforge.plantuml.Annotated annotated;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;

    public void <init>(net.sourceforge.plantuml.Annotated, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.Annotated r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        r1 := @parameter0: net.sourceforge.plantuml.Annotated;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.Annotated annotated> = r1;

        r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam> = r2;

        r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = r3;

        return;
    }

    public net.sourceforge.plantuml.svek.TextBlockBackcolored addAdd(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.svek.TextBlockBackcolored $r1;
        net.sourceforge.plantuml.graphic.TextBlock r2, r3, r4, r5, r6, r7;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.TextBlock addFrame(net.sourceforge.plantuml.graphic.TextBlock)>(r2);

        r4 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.TextBlock addLegend(net.sourceforge.plantuml.graphic.TextBlock)>(r3);

        r5 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.TextBlock addTitle(net.sourceforge.plantuml.graphic.TextBlock)>(r4);

        r6 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.TextBlock addCaption(net.sourceforge.plantuml.graphic.TextBlock)>(r5);

        r7 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.TextBlock addHeaderAndFooter(net.sourceforge.plantuml.graphic.TextBlock)>(r6);

        $r1 = (net.sourceforge.plantuml.svek.TextBlockBackcolored) r7;

        return $r1;
    }

    public boolean hasMainFrame()
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.Annotated $r1;
        net.sourceforge.plantuml.cucadiagram.Display $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        $r1 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.Annotated annotated>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.Annotated: net.sourceforge.plantuml.cucadiagram.Display getMainFrame()>();

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock addFrame(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.Annotated $r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ISkinParam $r3, $r5, $r18, $r23, $r26, $r28, $r40, $r45;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4, $r22, r31;
        net.sourceforge.plantuml.FontParam $r6;
        net.sourceforge.plantuml.ugraphic.UStroke $r7, r32;
        net.sourceforge.plantuml.graphic.TextBlock r8, r10, r12, $r44;
        net.sourceforge.plantuml.ugraphic.MinMax r9;
        net.sourceforge.plantuml.awt.geom.Dimension2D r11;
        double d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        net.sourceforge.plantuml.style.SName[] $r13;
        net.sourceforge.plantuml.style.SName $r14, $r15, $r16;
        net.sourceforge.plantuml.style.StyleSignature $r17;
        net.sourceforge.plantuml.style.StyleBuilder $r19;
        net.sourceforge.plantuml.style.PName $r20, $r24;
        net.sourceforge.plantuml.style.Value $r21, $r25;
        net.sourceforge.plantuml.api.ThemeStyle $r27;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r29;
        net.sourceforge.plantuml.style.Style r30;
        net.sourceforge.plantuml.ugraphic.color.HColor r33, $r35;
        net.sourceforge.plantuml.graphic.SymbolContext $r34, $r36, r37;
        net.sourceforge.plantuml.graphic.StringBounder $r38, $r41;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r39, $r43, $r46;
        net.sourceforge.plantuml.graphic.USymbol $r42;
        net.sourceforge.plantuml.AnnotatedWorker$1 $r47;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        r8 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r1 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.Annotated annotated>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.Annotated: net.sourceforge.plantuml.cucadiagram.Display getMainFrame()>();

        if r2 != null goto label1;

        return r8;

     label1:
        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label2;

        $r13 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r14 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r13[0] = $r14;

        $r15 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName document>;

        $r13[1] = $r15;

        $r16 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName frame>;

        $r13[2] = $r16;

        $r17 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r13);

        $r18 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r30 = virtualinvoke $r17.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r19);

        $r20 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r21 = virtualinvoke r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r20);

        d6 = interfaceinvoke $r21.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        $r22 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r23 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r22.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>($r23, r30);

        r31 = $r22;

        r32 = virtualinvoke r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r24 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r25 = virtualinvoke r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r24);

        $r26 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r27 = interfaceinvoke $r26.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r28 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r29 = interfaceinvoke $r28.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r33 = interfaceinvoke $r25.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r27, $r29);

        goto label5;

     label2:
        $r3 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $z1 = interfaceinvoke $r3.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(null);

        if $z1 == 0 goto label3;

        $d7 = 3.0;

        goto label4;

     label3:
        $d7 = 0.0;

     label4:
        d6 = $d7;

        $r4 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r6 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam CAPTION>;

        specialinvoke $r4.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r5, $r6, null);

        r31 = $r4;

        $r7 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r32 = $r7;

        r33 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

     label5:
        $r34 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r35 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ugraphic.color.HColor getBackgroundColor()>();

        specialinvoke $r34.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r35, r33);

        $r36 = virtualinvoke $r34.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withShadow(double)>(d6);

        r37 = virtualinvoke $r36.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>(r32);

        $r38 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r9 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.UDrawable,net.sourceforge.plantuml.graphic.StringBounder,boolean)>(r8, $r38, 0);

        $r39 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r40 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r10 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r31, $r39, $r40);

        $r41 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r11 = interfaceinvoke r10.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r41);

        $d8 = virtualinvoke r9.<net.sourceforge.plantuml.ugraphic.MinMax: double getWidth()>();

        $d9 = virtualinvoke r11.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d10 = staticinvoke <java.lang.Math: double max(double,double)>($d8, $d9);

        $d11 = 5.0 + $d10;

        d4 = $d11 + 7.0;

        $d12 = virtualinvoke r11.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d13 = $d12 + 10.0;

        $d14 = virtualinvoke r9.<net.sourceforge.plantuml.ugraphic.MinMax: double getHeight()>();

        $d15 = $d13 + $d14;

        d5 = $d15 + 10.0;

        $r42 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol FRAME>;

        $r43 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r44 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $r45 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r46 = interfaceinvoke $r45.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getStereotypeAlignment()>();

        r12 = virtualinvoke $r42.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock,double,double,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r10, $r43, $r44, d4, d5, r37, $r46);

        $r47 = new net.sourceforge.plantuml.AnnotatedWorker$1;

        specialinvoke $r47.<net.sourceforge.plantuml.AnnotatedWorker$1: void <init>(net.sourceforge.plantuml.AnnotatedWorker,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ugraphic.MinMax,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.graphic.SymbolContext)>(r0, r12, r9, r8, r11, r37);

        return $r47;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getBackgroundColor()
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.ISkinParam $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackgroundColor()>();

        return $r2;
    }

    private net.sourceforge.plantuml.graphic.TextBlock addLegend(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.Annotated $r1;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned r2;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Display $r3;
        net.sourceforge.plantuml.ISkinParam $r4;
        net.sourceforge.plantuml.graphic.TextBlock r5, r6, $r9;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r7;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r8;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r1 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.Annotated annotated>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.Annotated: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: boolean isNull()>();

        if $z0 == 0 goto label1;

        return r6;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.EntityImageLegend: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinParam)>($r3, $r4);

        $r7 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $r8 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.graphic.VerticalAlignment getVerticalAlignment()>();

        $r9 = staticinvoke <net.sourceforge.plantuml.svek.DecorateEntityImage: net.sourceforge.plantuml.graphic.TextBlock add(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.VerticalAlignment)>(r6, r5, $r7, $r8);

        return $r9;
    }

    private net.sourceforge.plantuml.ISkinParam getSkinParam()
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.ISkinParam $r1;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        $r1 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        return $r1;
    }

    private net.sourceforge.plantuml.graphic.TextBlock addCaption(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.Annotated $r1;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned r2;
        boolean $z0;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, $r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r1 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.Annotated annotated>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.Annotated: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getCaption()>();

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: boolean isNull()>();

        if $z0 == 0 goto label1;

        return r4;

     label1:
        r3 = virtualinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.TextBlock getCaption()>();

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r6 = staticinvoke <net.sourceforge.plantuml.svek.DecorateEntityImage: net.sourceforge.plantuml.graphic.TextBlock addBottom(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r4, r3, $r5);

        return $r6;
    }

    public net.sourceforge.plantuml.graphic.TextBlock getCaption()
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.Annotated $r1;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned r2;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Display $r3, $r18;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        net.sourceforge.plantuml.ISkinParam $r5, $r8, $r15, $r19, $r21;
        net.sourceforge.plantuml.FontParam $r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r9, $r22, $r23;
        net.sourceforge.plantuml.style.SName[] $r10;
        net.sourceforge.plantuml.style.SName $r11, $r12, $r13;
        net.sourceforge.plantuml.style.StyleSignature $r14;
        net.sourceforge.plantuml.style.StyleBuilder $r16;
        net.sourceforge.plantuml.style.Style r17;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r20;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        $r1 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.Annotated annotated>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.Annotated: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getCaption()>();

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: boolean isNull()>();

        if $z0 == 0 goto label1;

        $r23 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        return $r23;

     label1:
        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label2;

        $r10 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r11 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r10[0] = $r11;

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName document>;

        $r10[1] = $r12;

        $r13 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName caption>;

        $r10[2] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r10);

        $r15 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r17 = virtualinvoke $r14.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r16);

        $r18 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r19 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r21 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r22 = virtualinvoke r17.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.TextBlock createTextBlockBordered(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.ISkinSimple)>($r18, $r20, $r21);

        return $r22;

     label2:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r4 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r6 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam CAPTION>;

        specialinvoke $r4.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r5, $r6, null);

        $r7 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r9 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r4, $r7, $r8);

        return $r9;
    }

    private net.sourceforge.plantuml.graphic.TextBlock addTitle(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.Annotated $r1;
        net.sourceforge.plantuml.cucadiagram.DisplayPositionned $r2;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned r3;
        boolean $z0, $z1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        net.sourceforge.plantuml.FontParam $r5;
        net.sourceforge.plantuml.cucadiagram.Display $r7, $r18;
        net.sourceforge.plantuml.graphic.TextBlock r8, $r10, r23;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r9;
        net.sourceforge.plantuml.style.SName[] $r11;
        net.sourceforge.plantuml.style.SName $r12, $r13, $r14;
        net.sourceforge.plantuml.style.StyleSignature $r15;
        net.sourceforge.plantuml.ISkinParam $r16, $r19, $r21, r24;
        net.sourceforge.plantuml.style.StyleBuilder $r17;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r20;
        net.sourceforge.plantuml.style.Style r22;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        r8 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r1 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.Annotated annotated>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.Annotated: net.sourceforge.plantuml.cucadiagram.DisplayPositionned getTitle()>();

        r3 = (net.sourceforge.plantuml.cucadiagram.DisplayPositioned) $r2;

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: boolean isNull()>();

        if $z0 == 0 goto label1;

        return r8;

     label1:
        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label2;

        $r11 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r11[0] = $r12;

        $r13 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName document>;

        $r11[1] = $r13;

        $r14 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName title>;

        $r11[2] = $r14;

        $r15 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r11);

        $r16 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r22 = virtualinvoke $r15.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r17);

        $r18 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r19 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r21 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        r23 = virtualinvoke r22.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.TextBlock createTextBlockBordered(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.ISkinSimple)>($r18, $r20, $r21);

        goto label3;

     label2:
        r24 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r4 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r5 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam TITLE>;

        specialinvoke $r4.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r24, $r5, null);

        $r7 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        r23 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock title(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinParam)>($r4, $r7, r24);

     label3:
        $r9 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r10 = staticinvoke <net.sourceforge.plantuml.svek.DecorateEntityImage: net.sourceforge.plantuml.graphic.TextBlock addTop(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r8, r23, $r9);

        return $r10;
    }

    private net.sourceforge.plantuml.graphic.TextBlock addHeaderAndFooter(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.AnnotatedWorker r0;
        net.sourceforge.plantuml.Annotated $r1, $r3;
        net.sourceforge.plantuml.cucadiagram.DisplaySection r2, r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.sourceforge.plantuml.graphic.TextBlock r5, r28, r30, $r34;
        net.sourceforge.plantuml.graphic.FontConfiguration $r6, $r17;
        net.sourceforge.plantuml.ISkinParam $r7, $r9, $r15, $r18, $r20, $r26;
        net.sourceforge.plantuml.FontParam $r8, $r19;
        net.sourceforge.plantuml.style.SName[] $r10, $r21;
        net.sourceforge.plantuml.style.SName $r11, $r12, $r13, $r22, $r23, $r24;
        net.sourceforge.plantuml.style.StyleSignature $r14, $r25;
        net.sourceforge.plantuml.style.StyleBuilder $r16, $r27;
        net.sourceforge.plantuml.style.Style r29, r31;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r32, $r33;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r1 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.Annotated annotated>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.Annotated: net.sourceforge.plantuml.cucadiagram.DisplaySection getFooter()>();

        $r3 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.Annotated annotated>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.Annotated: net.sourceforge.plantuml.cucadiagram.DisplaySection getHeader()>();

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplaySection: boolean isNull()>();

        if $z0 == 0 goto label1;

        $z4 = virtualinvoke r4.<net.sourceforge.plantuml.cucadiagram.DisplaySection: boolean isNull()>();

        if $z4 == 0 goto label1;

        return r5;

     label1:
        r28 = null;

        $z1 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplaySection: boolean isNull()>();

        if $z1 != 0 goto label3;

        r29 = null;

        $z3 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z3 == 0 goto label2;

        $r21 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r22 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r21[0] = $r22;

        $r23 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName document>;

        $r21[1] = $r23;

        $r24 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName footer>;

        $r21[2] = $r24;

        $r25 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r21);

        $r26 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r27 = interfaceinvoke $r26.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r29 = virtualinvoke $r25.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r27);

     label2:
        $r17 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r18 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r19 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam FOOTER>;

        specialinvoke $r17.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r18, $r19, null);

        $r20 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r28 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.graphic.TextBlock createRibbon(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.style.Style)>($r17, $r20, r29);

     label3:
        r30 = null;

        $z5 = virtualinvoke r4.<net.sourceforge.plantuml.cucadiagram.DisplaySection: boolean isNull()>();

        if $z5 != 0 goto label5;

        r31 = null;

        $z2 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z2 == 0 goto label4;

        $r10 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r11 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r10[0] = $r11;

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName document>;

        $r10[1] = $r12;

        $r13 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName header>;

        $r10[2] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r10);

        $r15 = r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r31 = virtualinvoke $r14.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r16);

     label4:
        $r6 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r8 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam HEADER>;

        specialinvoke $r6.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r7, $r8, null);

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r30 = virtualinvoke r4.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.graphic.TextBlock createRibbon(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.style.Style)>($r6, $r9, r31);

     label5:
        $r32 = virtualinvoke r4.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $r33 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $r34 = staticinvoke <net.sourceforge.plantuml.svek.DecorateEntityImage: net.sourceforge.plantuml.graphic.TextBlock addTopAndBottom(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r5, r30, $r32, r28, $r33);

        return $r34;
    }
}
