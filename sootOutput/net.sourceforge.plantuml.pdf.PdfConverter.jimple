public class net.sourceforge.plantuml.pdf.PdfConverter extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.pdf.PdfConverter r0;

        r0 := @this: net.sourceforge.plantuml.pdf.PdfConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void convert(java.io.File, java.io.File)
    {
        java.io.File r0, r1;
        boolean $z0, $z2, $z3;
        java.lang.Object r3, r6;
        java.lang.Class r4, $r15, $r20, r33;
        java.lang.reflect.Field $r5;
        java.lang.Class[] $r7, $r14, $r19, $r24;
        java.lang.reflect.Method r8, r16, r21, r25;
        java.lang.Object[] $r9, $r17, $r22, $r26;
        java.lang.String[] $r11;
        java.lang.String $r12;
        java.lang.IllegalStateException $r28, $r29;
        java.lang.IllegalArgumentException $r30;
        java.lang.Exception $r31;
        java.lang.UnsupportedOperationException $r32;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r30 = new java.lang.IllegalArgumentException;

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r30;

     label1:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        $z2 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label2;

        $r29 = new java.lang.IllegalStateException;

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>()>();

        throw $r29;

     label2:
        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("log4j.debug", "false");

        r33 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.batik.apps.rasterizer.SVGConverter");

        r3 = virtualinvoke r33.<java.lang.Class: java.lang.Object newInstance()>();

        r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.batik.apps.rasterizer.DestinationType");

        $r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("PDF");

        r6 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r7 = newarray (java.lang.Class)[1];

        $r7[0] = r4;

        r8 = virtualinvoke r33.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setDestinationType", $r7);

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r6;

        virtualinvoke r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r9);

        $r11 = newarray (java.lang.String)[1];

        $r12 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r11[0] = $r12;

        $r14 = newarray (java.lang.Class)[1];

        $r15 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r14[0] = $r15;

        r16 = virtualinvoke r33.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setSources", $r14);

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = $r11;

        virtualinvoke r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r17);

        $r19 = newarray (java.lang.Class)[1];

        $r20 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r19[0] = $r20;

        r21 = virtualinvoke r33.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setDst", $r19);

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r1;

        virtualinvoke r21.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r22);

        $r24 = newarray (java.lang.Class)[0];

        r25 = virtualinvoke r33.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("execute", $r24);

        $r26 = newarray (java.lang.Object)[0];

        virtualinvoke r25.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r26);

     label3:
        goto label5;

     label4:
        $r31 := @caughtexception;

        virtualinvoke $r31.<java.lang.Exception: void printStackTrace()>();

        $r32 = new java.lang.UnsupportedOperationException;

        specialinvoke $r32.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r32;

     label5:
        $z3 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label6;

        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>()>();

        throw $r28;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
