public class net.sourceforge.plantuml.sequencediagram.teoz.TileBuilder extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileBuilder r0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List buildSeveral(java.util.Iterator, net.sourceforge.plantuml.sequencediagram.teoz.TileArguments, net.sourceforge.plantuml.sequencediagram.teoz.Tile)
    {
        java.util.ArrayList $r0;
        java.util.Iterator r2, r9;
        boolean $z0, $z1;
        java.util.List $r3, $r8;
        java.lang.Object $r4, $r10;
        net.sourceforge.plantuml.sequencediagram.Event r5;
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r6;
        net.sourceforge.plantuml.sequencediagram.teoz.Tile r7, r11;

        r2 := @parameter0: java.util.Iterator;

        r6 := @parameter1: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        r7 := @parameter2: net.sourceforge.plantuml.sequencediagram.teoz.Tile;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.sequencediagram.Event) $r4;

        $r8 = staticinvoke <net.sourceforge.plantuml.sequencediagram.teoz.TileBuilder: java.util.List buildOne(java.util.Iterator,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments,net.sourceforge.plantuml.sequencediagram.Event,net.sourceforge.plantuml.sequencediagram.teoz.Tile)>(r2, r6, r5, r7);

        r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (net.sourceforge.plantuml.sequencediagram.teoz.Tile) $r10;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r11);

        interfaceinvoke r11.<net.sourceforge.plantuml.sequencediagram.teoz.Tile: net.sourceforge.plantuml.real.Real getMaxX()>();

        goto label2;

     label3:
        goto label1;

     label4:
        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r3;
    }

    public static java.util.List buildOne(java.util.Iterator, net.sourceforge.plantuml.sequencediagram.teoz.TileArguments, net.sourceforge.plantuml.sequencediagram.Event, net.sourceforge.plantuml.sequencediagram.teoz.Tile)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0, $r20, $r30;
        net.sourceforge.plantuml.graphic.StringBounder r1, $r35, $r53, $r79, $r98;
        net.sourceforge.plantuml.skin.rose.Rose r2;
        net.sourceforge.plantuml.ISkinParam r3;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces r4;
        java.util.ArrayList $r5;
        net.sourceforge.plantuml.sequencediagram.Event r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, $z16;
        java.lang.StringBuilder $r8, $r10, $r12;
        java.io.PrintStream $r9;
        java.lang.Class $r11;
        java.lang.String $r13;
        net.sourceforge.plantuml.sequencediagram.teoz.NewpageTile $r14;
        net.sourceforge.plantuml.sequencediagram.Participant $r15, $r36, $r37, $r38, $r39, $r50, $r51;
        net.sourceforge.plantuml.sequencediagram.teoz.LifeEventTile $r16;
        net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile $r17;
        net.sourceforge.plantuml.sequencediagram.teoz.DelayTile $r18;
        net.sourceforge.plantuml.sequencediagram.teoz.ReferenceTile $r19;
        net.sourceforge.plantuml.sequencediagram.GroupingLeaf $r21, r103;
        net.sourceforge.plantuml.sequencediagram.GroupingType $r22, $r23;
        net.sourceforge.plantuml.sequencediagram.teoz.ElseTile $r24;
        net.sourceforge.plantuml.sequencediagram.teoz.Tile r25;
        net.sourceforge.plantuml.sequencediagram.teoz.GroupingTile $r26;
        java.util.Iterator r27, r84, r90;
        net.sourceforge.plantuml.ugraphic.color.HColor $r28, $r29;
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile $r31, $r32;
        net.sourceforge.plantuml.sequencediagram.teoz.DividerTile $r33;
        net.sourceforge.plantuml.sequencediagram.teoz.NotesTile $r34;
        net.sourceforge.plantuml.sequencediagram.teoz.CommunicationExoTile $r40;
        java.util.List $r41, $r43, $r55;
        java.lang.Object $r42, $r44, $r56;
        net.sourceforge.plantuml.sequencediagram.Note $r45, r57, r91, r93;
        net.sourceforge.plantuml.sequencediagram.NotePosition $r46, $r47, r58, $r59, $r60, $r61, $r62, $r63, r92;
        net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteRight $r48, $r66;
        net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteLeft $r49, $r73;
        net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTile $r52, $r54;
        net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteTop $r64;
        net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteBottom $r65;
        net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile $r67, $r74, r83, r89;
        net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileSelfNoteRight $r71;
        net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileSelf $r72, $r78;
        net.sourceforge.plantuml.sequencediagram.Message r80;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace r81, r82, $r85, $r86, r88, r94, $r95, r96, r108;
        net.sourceforge.plantuml.sequencediagram.MessageExo r87;
        net.sourceforge.plantuml.sequencediagram.teoz.NoteTile $r97;
        net.sourceforge.plantuml.sequencediagram.Notes r99;
        net.sourceforge.plantuml.sequencediagram.Divider r100;
        net.sourceforge.plantuml.sequencediagram.GroupingStart r101;
        net.sourceforge.plantuml.sequencediagram.Reference r104;
        net.sourceforge.plantuml.sequencediagram.Delay r105;
        net.sourceforge.plantuml.sequencediagram.HSpace r106;
        net.sourceforge.plantuml.sequencediagram.LifeEvent r107;
        net.sourceforge.plantuml.sequencediagram.Newpage r109;

        r27 := @parameter0: java.util.Iterator;

        r0 := @parameter1: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        r7 := @parameter2: net.sourceforge.plantuml.sequencediagram.Event;

        r25 := @parameter3: net.sourceforge.plantuml.sequencediagram.teoz.Tile;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces getLivingSpaces()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $z0 = r7 instanceof net.sourceforge.plantuml.sequencediagram.Message;

        if $z0 == 0 goto label14;

        r80 = (net.sourceforge.plantuml.sequencediagram.Message) r7;

        $r50 = virtualinvoke r80.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant getParticipant1()>();

        r81 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace get(net.sourceforge.plantuml.sequencediagram.Participant)>($r50);

        $r51 = virtualinvoke r80.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant getParticipant2()>();

        r82 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace get(net.sourceforge.plantuml.sequencediagram.Participant)>($r51);

        z15 = 0;

        $z13 = virtualinvoke r80.<net.sourceforge.plantuml.sequencediagram.Message: boolean isSelfMessage()>();

        if $z13 == 0 goto label01;

        $r78 = new net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileSelf;

        $r79 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r78.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileSelf: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace,net.sourceforge.plantuml.sequencediagram.Message,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces)>($r79, r81, r80, r2, r3, r4);

        r83 = $r78;

        goto label02;

     label01:
        $r52 = new net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTile;

        $r53 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r52.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTile: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces,net.sourceforge.plantuml.sequencediagram.Message,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam)>($r53, r4, r80, r2, r3);

        r83 = $r52;

        $r54 = (net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTile) $r52;

        z15 = virtualinvoke $r54.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTile: boolean isReverse(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

     label02:
        $r55 = virtualinvoke r80.<net.sourceforge.plantuml.sequencediagram.Message: java.util.List getNoteOnMessages()>();

        r84 = interfaceinvoke $r55.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z16 = interfaceinvoke r84.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label13;

        $r56 = interfaceinvoke r84.<java.util.Iterator: java.lang.Object next()>();

        r57 = (net.sourceforge.plantuml.sequencediagram.Note) $r56;

        r58 = virtualinvoke r57.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NotePosition getPosition()>();

        $r59 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition LEFT>;

        if r58 != $r59 goto label06;

        $r73 = new net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteLeft;

        $r74 = r83;

        if z15 == 0 goto label04;

        $r85 = r82;

        goto label05;

     label04:
        $r85 = r81;

     label05:
        specialinvoke $r73.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteLeft: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.Tile,net.sourceforge.plantuml.sequencediagram.AbstractMessage,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace,net.sourceforge.plantuml.sequencediagram.Note)>($r74, r80, r2, r3, $r85, r57);

        r83 = $r73;

        goto label12;

     label06:
        $r60 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition RIGHT>;

        if r58 != $r60 goto label07;

        $z14 = virtualinvoke r80.<net.sourceforge.plantuml.sequencediagram.Message: boolean isSelfMessage()>();

        if $z14 == 0 goto label07;

        $r71 = new net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileSelfNoteRight;

        $r72 = (net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileSelf) r83;

        specialinvoke $r71.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileSelfNoteRight: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileSelf,net.sourceforge.plantuml.sequencediagram.Message,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.sequencediagram.Note)>($r72, r80, r2, r3, r57);

        r83 = $r71;

        goto label12;

     label07:
        $r61 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition RIGHT>;

        if r58 != $r61 goto label10;

        $r66 = new net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteRight;

        $r67 = r83;

        if z15 == 0 goto label08;

        $r86 = r81;

        goto label09;

     label08:
        $r86 = r82;

     label09:
        specialinvoke $r66.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteRight: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.Tile,net.sourceforge.plantuml.sequencediagram.AbstractMessage,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace,net.sourceforge.plantuml.sequencediagram.Note)>($r67, r80, r2, r3, $r86, r57);

        r83 = $r66;

        goto label12;

     label10:
        $r62 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition BOTTOM>;

        if r58 != $r62 goto label11;

        $r65 = new net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteBottom;

        specialinvoke $r65.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteBottom: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.Tile,net.sourceforge.plantuml.sequencediagram.AbstractMessage,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.sequencediagram.Note)>(r83, r80, r2, r3, r57);

        r83 = $r65;

        goto label12;

     label11:
        $r63 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition TOP>;

        if r58 != $r63 goto label12;

        $r64 = new net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteTop;

        specialinvoke $r64.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteTop: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.Tile,net.sourceforge.plantuml.sequencediagram.AbstractMessage,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.sequencediagram.Note)>(r83, r80, r2, r3, r57);

        r83 = $r64;

     label12:
        goto label03;

     label13:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r83);

        goto label33;

     label14:
        $z1 = r7 instanceof net.sourceforge.plantuml.sequencediagram.MessageExo;

        if $z1 == 0 goto label19;

        r87 = (net.sourceforge.plantuml.sequencediagram.MessageExo) r7;

        $r39 = virtualinvoke r87.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.sequencediagram.Participant getParticipant()>();

        r88 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace get(net.sourceforge.plantuml.sequencediagram.Participant)>($r39);

        $r40 = new net.sourceforge.plantuml.sequencediagram.teoz.CommunicationExoTile;

        specialinvoke $r40.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationExoTile: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace,net.sourceforge.plantuml.sequencediagram.MessageExo,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments)>(r88, r87, r2, r3, r0);

        r89 = $r40;

        $r41 = virtualinvoke r87.<net.sourceforge.plantuml.sequencediagram.MessageExo: java.util.List getNoteOnMessages()>();

        r90 = interfaceinvoke $r41.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z12 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label18;

        $r42 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>();

        r91 = (net.sourceforge.plantuml.sequencediagram.Note) $r42;

        $r43 = virtualinvoke r87.<net.sourceforge.plantuml.sequencediagram.MessageExo: java.util.List getNoteOnMessages()>();

        $r44 = interfaceinvoke $r43.<java.util.List: java.lang.Object get(int)>(0);

        $r45 = (net.sourceforge.plantuml.sequencediagram.Note) $r44;

        r92 = virtualinvoke $r45.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NotePosition getPosition()>();

        $r46 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition LEFT>;

        if r92 != $r46 goto label16;

        $r49 = new net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteLeft;

        specialinvoke $r49.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteLeft: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.Tile,net.sourceforge.plantuml.sequencediagram.AbstractMessage,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace,net.sourceforge.plantuml.sequencediagram.Note)>(r89, r87, r2, r3, r88, r91);

        r89 = $r49;

        goto label17;

     label16:
        $r47 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition RIGHT>;

        if r92 != $r47 goto label17;

        $r48 = new net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteRight;

        specialinvoke $r48.<net.sourceforge.plantuml.sequencediagram.teoz.CommunicationTileNoteRight: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.Tile,net.sourceforge.plantuml.sequencediagram.AbstractMessage,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace,net.sourceforge.plantuml.sequencediagram.Note)>(r89, r87, r2, r3, r88, r91);

        r89 = $r48;

     label17:
        goto label15;

     label18:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r89);

        goto label33;

     label19:
        $z2 = r7 instanceof net.sourceforge.plantuml.sequencediagram.Note;

        if $z2 == 0 goto label23;

        r93 = (net.sourceforge.plantuml.sequencediagram.Note) r7;

        $r36 = virtualinvoke r93.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant getParticipant()>();

        r94 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace get(net.sourceforge.plantuml.sequencediagram.Participant)>($r36);

        $r37 = virtualinvoke r93.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant getParticipant2()>();

        if $r37 != null goto label20;

        $r95 = null;

        goto label21;

     label20:
        $r38 = virtualinvoke r93.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant getParticipant2()>();

        $r95 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace get(net.sourceforge.plantuml.sequencediagram.Participant)>($r38);

     label21:
        r96 = $r95;

        if r94 != null goto label22;

        if $r95 != null goto label22;

        r94 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace getFirstLivingSpace()>();

        r96 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace getLastLivingSpace()>();

     label22:
        $r97 = new net.sourceforge.plantuml.sequencediagram.teoz.NoteTile;

        $r98 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r97.<net.sourceforge.plantuml.sequencediagram.teoz.NoteTile: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace,net.sourceforge.plantuml.sequencediagram.Note,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam)>($r98, r94, r96, r93, r2, r3);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r97);

        goto label33;

     label23:
        $z3 = r7 instanceof net.sourceforge.plantuml.sequencediagram.Notes;

        if $z3 == 0 goto label24;

        r99 = (net.sourceforge.plantuml.sequencediagram.Notes) r7;

        $r34 = new net.sourceforge.plantuml.sequencediagram.teoz.NotesTile;

        $r35 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r34.<net.sourceforge.plantuml.sequencediagram.teoz.NotesTile: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces,net.sourceforge.plantuml.sequencediagram.Notes,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam)>($r35, r4, r99, r2, r3);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r34);

        goto label33;

     label24:
        $z4 = r7 instanceof net.sourceforge.plantuml.sequencediagram.Divider;

        if $z4 == 0 goto label25;

        r100 = (net.sourceforge.plantuml.sequencediagram.Divider) r7;

        $r33 = new net.sourceforge.plantuml.sequencediagram.teoz.DividerTile;

        specialinvoke $r33.<net.sourceforge.plantuml.sequencediagram.teoz.DividerTile: void <init>(net.sourceforge.plantuml.sequencediagram.Divider,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments)>(r100, r0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r33);

        goto label33;

     label25:
        $z5 = r7 instanceof net.sourceforge.plantuml.sequencediagram.GroupingStart;

        if $z5 == 0 goto label26;

        r101 = (net.sourceforge.plantuml.sequencediagram.GroupingStart) r7;

        $r26 = new net.sourceforge.plantuml.sequencediagram.teoz.GroupingTile;

        $r28 = virtualinvoke r101.<net.sourceforge.plantuml.sequencediagram.GroupingStart: net.sourceforge.plantuml.ugraphic.color.HColor getBackColorElement()>();

        $r29 = virtualinvoke r101.<net.sourceforge.plantuml.sequencediagram.GroupingStart: net.sourceforge.plantuml.ugraphic.color.HColor getBackColorGeneral()>();

        $r30 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments withBackColorGeneral(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r28, $r29);

        specialinvoke $r26.<net.sourceforge.plantuml.sequencediagram.teoz.GroupingTile: void <init>(java.util.Iterator,net.sourceforge.plantuml.sequencediagram.GroupingStart,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments)>(r27, r101, $r30, r0);

        $r31 = new net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile;

        specialinvoke $r31.<net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile: void <init>(double,net.sourceforge.plantuml.sequencediagram.teoz.Tile)>(4.0, $r26);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r31);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r32 = new net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile;

        specialinvoke $r32.<net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile: void <init>(double,net.sourceforge.plantuml.sequencediagram.teoz.Tile)>(4.0, $r26);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r32);

        goto label33;

     label26:
        $z6 = r7 instanceof net.sourceforge.plantuml.sequencediagram.GroupingLeaf;

        if $z6 == 0 goto label27;

        $r21 = (net.sourceforge.plantuml.sequencediagram.GroupingLeaf) r7;

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.sequencediagram.GroupingLeaf: net.sourceforge.plantuml.sequencediagram.GroupingType getType()>();

        $r23 = <net.sourceforge.plantuml.sequencediagram.GroupingType: net.sourceforge.plantuml.sequencediagram.GroupingType ELSE>;

        if $r22 != $r23 goto label27;

        r103 = (net.sourceforge.plantuml.sequencediagram.GroupingLeaf) r7;

        $r24 = new net.sourceforge.plantuml.sequencediagram.teoz.ElseTile;

        specialinvoke $r24.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: void <init>(net.sourceforge.plantuml.sequencediagram.GroupingLeaf,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.sequencediagram.teoz.Tile)>(r103, r2, r3, r25);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r24);

        goto label33;

     label27:
        $z7 = r7 instanceof net.sourceforge.plantuml.sequencediagram.Reference;

        if $z7 == 0 goto label28;

        r104 = (net.sourceforge.plantuml.sequencediagram.Reference) r7;

        $r19 = new net.sourceforge.plantuml.sequencediagram.teoz.ReferenceTile;

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments withBackColor(net.sourceforge.plantuml.sequencediagram.Reference)>(r104);

        specialinvoke $r19.<net.sourceforge.plantuml.sequencediagram.teoz.ReferenceTile: void <init>(net.sourceforge.plantuml.sequencediagram.Reference,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments)>(r104, $r20);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r19);

        goto label33;

     label28:
        $z8 = r7 instanceof net.sourceforge.plantuml.sequencediagram.Delay;

        if $z8 == 0 goto label29;

        r105 = (net.sourceforge.plantuml.sequencediagram.Delay) r7;

        $r18 = new net.sourceforge.plantuml.sequencediagram.teoz.DelayTile;

        specialinvoke $r18.<net.sourceforge.plantuml.sequencediagram.teoz.DelayTile: void <init>(net.sourceforge.plantuml.sequencediagram.Delay,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments)>(r105, r0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label33;

     label29:
        $z9 = r7 instanceof net.sourceforge.plantuml.sequencediagram.HSpace;

        if $z9 == 0 goto label30;

        r106 = (net.sourceforge.plantuml.sequencediagram.HSpace) r7;

        $r17 = new net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile;

        specialinvoke $r17.<net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile: void <init>(net.sourceforge.plantuml.sequencediagram.HSpace,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments)>(r106, r0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label33;

     label30:
        $z10 = r7 instanceof net.sourceforge.plantuml.sequencediagram.LifeEvent;

        if $z10 == 0 goto label31;

        r107 = (net.sourceforge.plantuml.sequencediagram.LifeEvent) r7;

        $r15 = virtualinvoke r107.<net.sourceforge.plantuml.sequencediagram.LifeEvent: net.sourceforge.plantuml.sequencediagram.Participant getParticipant()>();

        r108 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace get(net.sourceforge.plantuml.sequencediagram.Participant)>($r15);

        $r16 = new net.sourceforge.plantuml.sequencediagram.teoz.LifeEventTile;

        specialinvoke $r16.<net.sourceforge.plantuml.sequencediagram.teoz.LifeEventTile: void <init>(net.sourceforge.plantuml.sequencediagram.LifeEvent,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam)>(r107, r0, r108, r2, r3);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label33;

     label31:
        $z11 = r7 instanceof net.sourceforge.plantuml.sequencediagram.Newpage;

        if $z11 == 0 goto label32;

        r109 = (net.sourceforge.plantuml.sequencediagram.Newpage) r7;

        $r14 = new net.sourceforge.plantuml.sequencediagram.teoz.NewpageTile;

        specialinvoke $r14.<net.sourceforge.plantuml.sequencediagram.teoz.NewpageTile: void <init>(net.sourceforge.plantuml.sequencediagram.Newpage,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments)>(r109, r0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label33;

     label32:
        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TileBuilder::Ignoring ");

        $r11 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label33:
        return $r5;
    }
}
