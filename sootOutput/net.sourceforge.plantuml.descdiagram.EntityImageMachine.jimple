public class net.sourceforge.plantuml.descdiagram.EntityImageMachine extends net.sourceforge.plantuml.svek.AbstractEntityImage
{
    private final net.sourceforge.plantuml.graphic.TextBlock name;
    private final net.sourceforge.plantuml.graphic.TextBlock stereo;
    private final net.sourceforge.plantuml.Url url;

    public void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.descdiagram.EntityImageMachine r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.ISkinParam r2, $r6, $r18;
        net.sourceforge.plantuml.cucadiagram.Stereotype r3;
        net.sourceforge.plantuml.cucadiagram.Display $r4, $r16;
        net.sourceforge.plantuml.graphic.FontConfiguration $r5, $r17;
        net.sourceforge.plantuml.FontParam $r7, $r19;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r8, $r20;
        net.sourceforge.plantuml.graphic.TextBlock $r9, $r10, $r21;
        net.sourceforge.plantuml.Url $r11;
        net.sourceforge.plantuml.Guillemet $r12, $r14;
        java.lang.String $r13;
        java.util.List $r15;

        r0 := @this: net.sourceforge.plantuml.descdiagram.EntityImageMachine;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.svek.AbstractEntityImage: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ISkinParam)>(r1, r2);

        r3 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r5 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam MACHINE>;

        specialinvoke $r5.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r6, $r7, r3);

        $r8 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r9 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r5, $r8, r2);

        $r10 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double)>($r9, 2.0, 2.0);

        r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.graphic.TextBlock name> = $r10;

        if r3 == null goto label1;

        $r12 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet DOUBLE_COMPARATOR>;

        $r13 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String getLabel(net.sourceforge.plantuml.Guillemet)>($r12);

        if $r13 != null goto label2;

     label1:
        r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.graphic.TextBlock stereo> = null;

        goto label3;

     label2:
        $r14 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.Guillemet guillemet()>();

        $r15 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getLabels(net.sourceforge.plantuml.Guillemet)>($r14);

        $r16 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>($r15);

        $r17 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r19 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam MACHINE_STEREOTYPE>;

        specialinvoke $r17.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r18, $r19, r3);

        $r20 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r21 = virtualinvoke $r16.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r17, $r20, r2);

        r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.graphic.TextBlock stereo> = $r21;

     label3:
        $r11 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.Url getUrl99()>();

        r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.Url url> = $r11;

        return;
    }

    private net.sourceforge.plantuml.ugraphic.UStroke getStroke()
    {
        net.sourceforge.plantuml.descdiagram.EntityImageMachine r0;
        net.sourceforge.plantuml.ISkinParam $r1;
        net.sourceforge.plantuml.LineParam $r2;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r3;
        net.sourceforge.plantuml.ugraphic.UStroke $r4, r5;

        r0 := @this: net.sourceforge.plantuml.descdiagram.EntityImageMachine;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r2 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam machineBorder>;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        r5 = interfaceinvoke $r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.LineParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r2, $r3);

        if r5 != null goto label1;

        $r4 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        r5 = $r4;

     label1:
        return r5;
    }

    private net.sourceforge.plantuml.awt.geom.Dimension2D getTitleDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.descdiagram.EntityImageMachine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2;

        r0 := @this: net.sourceforge.plantuml.descdiagram.EntityImageMachine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.awt.geom.Dimension2D getNameAndSteretypeDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    private net.sourceforge.plantuml.awt.geom.Dimension2D getNameAndSteretypeDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.descdiagram.EntityImageMachine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r4, $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, $r9;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.Dimension2DDouble $r10, $r11;

        r0 := @this: net.sourceforge.plantuml.descdiagram.EntityImageMachine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.graphic.TextBlock name>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.graphic.TextBlock stereo>;

        if $r4 != null goto label1;

        $r10 = new net.sourceforge.plantuml.Dimension2DDouble;

        $r9 = $r10;

        specialinvoke $r10.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(0.0, 0.0);

        goto label2;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.graphic.TextBlock stereo>;

        $r9 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

     label2:
        $r11 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke $r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        $d3 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d4 = virtualinvoke $r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = $d3 + $d4;

        specialinvoke $r11.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d2, $d5);

        return $r11;
    }

    public double getStartingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.descdiagram.EntityImageMachine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.descdiagram.EntityImageMachine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        return 0.0;
    }

    public double getEndingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.descdiagram.EntityImageMachine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.descdiagram.EntityImageMachine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 := @parameter1: double;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        return $d0;
    }

    public final void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0, $r25;
        net.sourceforge.plantuml.descdiagram.EntityImageMachine r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, r3;
        double d0, d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.URectangle $r4, $r6;
        net.sourceforge.plantuml.ISkinParam $r8, $r32;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r9, $r33;
        net.sourceforge.plantuml.ColorParam[] $r10, $r34;
        net.sourceforge.plantuml.ColorParam $r11, $r35;
        net.sourceforge.plantuml.ugraphic.color.HColor $r12, r38;
        net.sourceforge.plantuml.cucadiagram.IEntity $r13;
        net.sourceforge.plantuml.graphic.color.Colors $r14;
        net.sourceforge.plantuml.graphic.color.ColorType $r15;
        net.sourceforge.plantuml.ugraphic.UBackground $r16;
        net.sourceforge.plantuml.Url $r17, $r30, $r31;
        net.sourceforge.plantuml.ugraphic.UStroke r18;
        net.sourceforge.plantuml.ugraphic.UGraphic $r19, $r21, $r22, $r29, r36, r37, r39;
        net.sourceforge.plantuml.ugraphic.UTranslate $r20, $r28;
        net.sourceforge.plantuml.ugraphic.ULayoutGroup $r23;
        net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2 $r24;
        net.sourceforge.plantuml.graphic.TextBlock $r27;

        r1 := @this: net.sourceforge.plantuml.descdiagram.EntityImageMachine;

        r36 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 = interfaceinvoke r36.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r2 = virtualinvoke r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        r3 = specialinvoke r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.awt.geom.Dimension2D getTitleDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r4 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(d0, d1);

        $r6 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(4.0, d1);

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r9 = virtualinvoke r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r10 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r11 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam machineBorder>;

        $r10[0] = $r11;

        $r12 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r8, $r9, $r10);

        r37 = interfaceinvoke r36.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r13 = virtualinvoke r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r15 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        r38 = virtualinvoke $r14.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r15);

        if r38 != null goto label1;

        $r32 = virtualinvoke r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r33 = virtualinvoke r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r34 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r35 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam machineBackground>;

        $r34[0] = $r35;

        r38 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r32, $r33, $r34);

     label1:
        $r16 = interfaceinvoke r38.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r39 = interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        $r17 = r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.Url url>;

        if $r17 == null goto label2;

        $r31 = r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.Url url>;

        interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: void startUrl(net.sourceforge.plantuml.Url)>($r31);

     label2:
        r18 = specialinvoke r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r19 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r18);

        interfaceinvoke $r19.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        $r20 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(4.0);

        $r21 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        $r22 = interfaceinvoke $r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r18);

        interfaceinvoke $r22.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        $r23 = new net.sourceforge.plantuml.ugraphic.ULayoutGroup;

        $r24 = new net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2;

        $r25 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r24.<net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>($r25);

        specialinvoke $r23.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: void <init>(net.sourceforge.plantuml.ugraphic.PlacementStrategy)>($r24);

        $r27 = r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.graphic.TextBlock name>;

        virtualinvoke $r23.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: void add(net.sourceforge.plantuml.graphic.TextBlock)>($r27);

        $r28 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(5.0);

        $r29 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r28);

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        virtualinvoke $r23.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,double,double)>($r29, $d2, $d3);

        $r30 = r1.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.Url url>;

        if $r30 == null goto label3;

        interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: void closeUrl()>();

     label3:
        return;
    }

    public net.sourceforge.plantuml.svek.ShapeType getShapeType()
    {
        net.sourceforge.plantuml.svek.ShapeType $r0;
        net.sourceforge.plantuml.descdiagram.EntityImageMachine r1;

        r1 := @this: net.sourceforge.plantuml.descdiagram.EntityImageMachine;

        $r0 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE>;

        return $r0;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.descdiagram.EntityImageMachine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        double d0, d1, $d2;
        net.sourceforge.plantuml.Dimension2DDouble $r3;

        r0 := @this: net.sourceforge.plantuml.descdiagram.EntityImageMachine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageMachine: net.sourceforge.plantuml.awt.geom.Dimension2D getTitleDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r3 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d2 = d0 + 10.0;

        specialinvoke $r3.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d2, d1);

        return $r3;
    }
}
