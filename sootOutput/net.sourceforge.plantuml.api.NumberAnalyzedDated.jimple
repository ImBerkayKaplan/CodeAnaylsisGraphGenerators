public class net.sourceforge.plantuml.api.NumberAnalyzedDated extends net.sourceforge.plantuml.api.NumberAnalyzed
{
    private final java.util.concurrent.atomic.AtomicLong created;
    private final java.util.concurrent.atomic.AtomicLong modified;
    private java.lang.String comment;

    private void <init>(java.lang.String, long, long, long, long, long, long, long, long, java.lang.String)
    {
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;
        java.lang.String r1, r6;
        long l0, l1, l2, l3, l4, l5, l6, l7;
        java.util.concurrent.atomic.AtomicLong $r2, $r3, $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        l4 := @parameter5: long;

        l5 := @parameter6: long;

        l6 := @parameter7: long;

        l7 := @parameter8: long;

        r6 := @parameter9: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.api.NumberAnalyzed: void <init>(java.lang.String,long,long,long,long,long,long)>(r1, l0, l1, l2, l3, l4, l5);

        $r2 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong created> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong modified> = $r3;

        $r4 = r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong created>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLong: void set(long)>(l6);

        $r5 = r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong modified>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicLong: void set(long)>(l7);

        r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.lang.String comment> = r6;

        return;
    }

    public synchronized void reset()
    {
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        specialinvoke r0.<net.sourceforge.plantuml.api.NumberAnalyzed: void reset()>();

        specialinvoke r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: void resetCreatedModifiedComment()>();

        return;
    }

    public void <init>()
    {
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;
        java.util.concurrent.atomic.AtomicLong $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        specialinvoke r0.<net.sourceforge.plantuml.api.NumberAnalyzed: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong created> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong modified> = $r2;

        specialinvoke r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: void resetCreatedModifiedComment()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;
        java.lang.String r1;
        java.util.concurrent.atomic.AtomicLong $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.api.NumberAnalyzed: void <init>(java.lang.String)>(r1);

        $r2 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong created> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong modified> = $r3;

        specialinvoke r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: void resetCreatedModifiedComment()>();

        return;
    }

    private void resetCreatedModifiedComment()
    {
        long l0;
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;
        java.util.concurrent.atomic.AtomicLong $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong created>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void set(long)>(l0);

        $r2 = r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong modified>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: void set(long)>(l0);

        r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.lang.String comment> = " ";

        return;
    }

    public void addValue(long)
    {
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;
        long l0, $l1;
        java.util.concurrent.atomic.AtomicLong $r1;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        l0 := @parameter0: long;

        specialinvoke r0.<net.sourceforge.plantuml.api.NumberAnalyzed: void addValue(long)>(l0);

        $r1 = r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong modified>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l1);

        return;
    }

    public void add(net.sourceforge.plantuml.api.NumberAnalyzed)
    {
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;
        net.sourceforge.plantuml.api.NumberAnalyzed r1;
        java.util.concurrent.atomic.AtomicLong $r2;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        r1 := @parameter0: net.sourceforge.plantuml.api.NumberAnalyzed;

        specialinvoke r0.<net.sourceforge.plantuml.api.NumberAnalyzed: void add(net.sourceforge.plantuml.api.NumberAnalyzed)>(r1);

        $r2 = r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong modified>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l0);

        return;
    }

    protected java.lang.String getSavedSupplementatyData()
    {
        java.lang.StringBuilder $r0, $r4, $r5, $r8, $r9, $r11;
        net.sourceforge.plantuml.api.NumberAnalyzedDated r1;
        java.util.concurrent.atomic.AtomicLong $r2, $r6;
        long $l0, $l1;
        java.lang.String $r3, $r7, $r10, $r12;

        r1 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong created>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.lang.String longToString(long)>($l0);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r6 = r1.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong modified>;

        $l1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.lang.String longToString(long)>($l1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r10 = r1.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.lang.String comment>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static net.sourceforge.plantuml.api.NumberAnalyzedDated load(java.lang.String, java.util.prefs.Preferences)
    {
        java.util.prefs.Preferences r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r18, $r19, $r20, $r23, $r24, $r25;
        java.lang.String r2, $r5, r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r21, $r26;
        int $i0;
        java.util.StringTokenizer $r7;
        net.sourceforge.plantuml.api.NumberAnalyzedDated $r8;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8;
        java.lang.Exception $r22;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.prefs.Preferences;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".saved");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke r0.<java.util.prefs.Preferences: java.lang.String get(java.lang.String,java.lang.String)>($r5, "");

        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot load ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r21);

        return null;

     label1:
        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r6, ";");

        $r8 = new net.sourceforge.plantuml.api.NumberAnalyzedDated;

        $r9 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r9, 36);

        $r10 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r10, 36);

        $r11 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r11, 36);

        $r12 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r12, 36);

        $r13 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r13, 36);

        $r14 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r14, 36);

        $r15 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r15, 36);

        $r16 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r16, 36);

        $r17 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        specialinvoke $r8.<net.sourceforge.plantuml.api.NumberAnalyzedDated: void <init>(java.lang.String,long,long,long,long,long,long,long,long,java.lang.String)>(r2, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $r17);

     label2:
        return $r8;

     label3:
        $r22 := @caughtexception;

        virtualinvoke $r22.<java.lang.Exception: void printStackTrace()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r26);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final long getCreationTime()
    {
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        $r1 = r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong created>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public final long getModificationTime()
    {
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        $r1 = r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.util.concurrent.atomic.AtomicLong modified>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public final synchronized java.lang.String getComment()
    {
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        $r1 = r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.lang.String comment>;

        return $r1;
    }

    public final synchronized void setComment(java.lang.String)
    {
        net.sourceforge.plantuml.api.NumberAnalyzedDated r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.api.NumberAnalyzedDated;

        r1 := @parameter0: java.lang.String;

        r0.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.lang.String comment> = r1;

        return;
    }
}
