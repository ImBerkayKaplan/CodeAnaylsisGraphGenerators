class net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final net.sourceforge.plantuml.graphic.TextBlock val$label;
    final net.sourceforge.plantuml.graphic.TextBlock val$stereotype;
    final net.sourceforge.plantuml.graphic.TextBlock val$stickman;
    final net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext;
    final net.sourceforge.plantuml.graphic.USymbolSimpleAbstract this$0;

    void <init>(net.sourceforge.plantuml.graphic.USymbolSimpleAbstract, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1 r0;
        net.sourceforge.plantuml.graphic.USymbolSimpleAbstract r1;
        net.sourceforge.plantuml.graphic.TextBlock r2, r3, r4;
        net.sourceforge.plantuml.graphic.SymbolContext r5;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.USymbolSimpleAbstract;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter4: net.sourceforge.plantuml.graphic.SymbolContext;

        r0.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.USymbolSimpleAbstract this$0> = r1;

        r0.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$label> = r2;

        r0.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$stereotype> = r3;

        r0.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$stickman> = r4;

        r0.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext> = r5;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1 r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r4, $r6, $r11, $r15, $r17;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r5, r7, r8;
        double $d0, $d1, $d2, d3, d4, $d5, $d6, $d7, d8, $d9, $d10, d11, $d12, $d13, $d14, d15;
        net.sourceforge.plantuml.graphic.SymbolContext $r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10, $r14, $r18;
        net.sourceforge.plantuml.ugraphic.UGraphic $r12, r13, $r16, $r19, r20, r21;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1;

        r20 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r2 = r1.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$label>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r4 = r1.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$stereotype>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r6 = r1.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$stickman>;

        r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        r8 = virtualinvoke r1.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $d0 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d0 - $d1;

        d3 = $d2 / 2.0;

        d4 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r9 = r1.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext>;

        r21 = virtualinvoke $r9.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r20);

        $r11 = r1.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$stickman>;

        $r10 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d4);

        $r12 = interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        interfaceinvoke $r11.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r12);

        $d5 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d7 = $d5 - $d6;

        d8 = $d7 / 2.0;

        $d9 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d10 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d11 = $d9 + $d10;

        r13 = staticinvoke <net.sourceforge.plantuml.ugraphic.UGraphicStencil: net.sourceforge.plantuml.ugraphic.UGraphic create(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r21, r3);

        $r15 = r1.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$label>;

        $r14 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d8, d11);

        $r16 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        interfaceinvoke $r15.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r16);

        $d12 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d13 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d14 = $d12 - $d13;

        d15 = $d14 / 2.0;

        $r17 = r1.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$stereotype>;

        $r18 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d15);

        $r19 = interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        interfaceinvoke $r17.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r19);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r4, $r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r5, r7, $r8;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$label>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$stereotype>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = r0.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract$1: net.sourceforge.plantuml.graphic.TextBlock val$stickman>;

        r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r8 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D mergeLayoutT12B3(net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r5, r7, r3);

        return $r8;
    }
}
