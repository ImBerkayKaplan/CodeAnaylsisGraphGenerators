public class net.sourceforge.plantuml.sequencediagram.teoz.Step extends java.lang.Object
{
    private final double value;
    private final boolean destroy;
    private final int indent;
    private final net.sourceforge.plantuml.graphic.SymbolContext color;

    public void <init>(double, boolean, int, net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.Step r0;
        int i0;
        net.sourceforge.plantuml.graphic.SymbolContext r1;
        double d0;
        boolean z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.Step;

        d0 := @parameter0: double;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<net.sourceforge.plantuml.sequencediagram.teoz.Step: int indent> = i0;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.Step: net.sourceforge.plantuml.graphic.SymbolContext color> = r1;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.Step: double value> = d0;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.Step: boolean destroy> = z0;

        return;
    }

    public double getValue()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.Step r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.Step;

        $d0 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.Step: double value>;

        return $d0;
    }

    public boolean isDestroy()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.Step r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.Step;

        $z0 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.Step: boolean destroy>;

        return $z0;
    }

    public int getIndent()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.Step r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.Step;

        $i0 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.Step: int indent>;

        return $i0;
    }

    public net.sourceforge.plantuml.graphic.SymbolContext getColors()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.Step r0;
        net.sourceforge.plantuml.graphic.SymbolContext $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.Step;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.Step: net.sourceforge.plantuml.graphic.SymbolContext color>;

        return $r1;
    }
}
