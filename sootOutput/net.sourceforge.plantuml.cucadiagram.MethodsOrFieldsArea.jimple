public class net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.svek.WithPorts
{
    private final net.sourceforge.plantuml.FontParam fontParam;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.skin.rose.Rose rose;
    private final net.sourceforge.plantuml.cucadiagram.Display members;
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment align;
    private final net.sourceforge.plantuml.cucadiagram.Stereotype stereotype;
    private final net.sourceforge.plantuml.cucadiagram.ILeaf leaf;
    private final net.sourceforge.plantuml.style.Style style;

    public net.sourceforge.plantuml.graphic.TextBlock asBlockMemberImpl()
    {
        net.sourceforge.plantuml.graphic.TextBlockLineBefore $r0;
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r1;
        net.sourceforge.plantuml.style.PName $r2;
        net.sourceforge.plantuml.style.Style $r3;
        net.sourceforge.plantuml.style.Value $r4;
        double $d0;
        net.sourceforge.plantuml.graphic.TextBlock $r5;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockLineBefore;

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.style.Style style>;

        $r2 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r2);

        $d0 = interfaceinvoke $r4.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double)>(r1, 6.0, 4.0);

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockLineBefore: void <init>(double,net.sourceforge.plantuml.graphic.TextBlock)>($d0, $r5);

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.FontParam, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Stereotype, net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.style.Style)
    {
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.FontParam r2;
        net.sourceforge.plantuml.ISkinParam r3;
        net.sourceforge.plantuml.cucadiagram.Stereotype r4;
        net.sourceforge.plantuml.cucadiagram.ILeaf r5;
        net.sourceforge.plantuml.style.Style r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r7;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter1: net.sourceforge.plantuml.FontParam;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r4 := @parameter3: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r5 := @parameter4: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r6 := @parameter5: net.sourceforge.plantuml.style.Style;

        $r7 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.cucadiagram.ILeaf,net.sourceforge.plantuml.style.Style)>(r1, r2, r3, $r7, r4, r5, r6);

        return;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.FontParam, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.cucadiagram.Stereotype, net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.style.Style)
    {
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r0;
        net.sourceforge.plantuml.skin.rose.Rose $r1;
        net.sourceforge.plantuml.style.Style r2;
        net.sourceforge.plantuml.cucadiagram.ILeaf r3;
        net.sourceforge.plantuml.cucadiagram.Stereotype r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5;
        net.sourceforge.plantuml.ISkinParam r6;
        net.sourceforge.plantuml.FontParam r7;
        net.sourceforge.plantuml.cucadiagram.Display r8;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r8 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r7 := @parameter1: net.sourceforge.plantuml.FontParam;

        r6 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r5 := @parameter3: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r4 := @parameter4: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r3 := @parameter5: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter6: net.sourceforge.plantuml.style.Style;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r1 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r1.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.skin.rose.Rose rose> = $r1;

        r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.style.Style style> = r2;

        r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.ILeaf leaf> = r3;

        r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype> = r4;

        r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.HorizontalAlignment align> = r5;

        r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam> = r6;

        r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.FontParam fontParam> = r7;

        r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.Display members> = r8;

        return;
    }

    private boolean hasSmallIcon()
    {
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r0;
        net.sourceforge.plantuml.ISkinParam $r1;
        int $i0;
        net.sourceforge.plantuml.cucadiagram.Display $r2;
        java.util.ListIterator r3;
        java.lang.Object $r4;
        java.lang.CharSequence r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Member r6;
        net.sourceforge.plantuml.skin.VisibilityModifier $r7;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $i0 = interfaceinvoke $r1.<net.sourceforge.plantuml.ISkinParam: int classAttributeIconSize()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.Display members>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.CharSequence) $r4;

        $z0 = r5 instanceof net.sourceforge.plantuml.cucadiagram.Member;

        if $z0 != 0 goto label3;

        goto label2;

     label3:
        r6 = (net.sourceforge.plantuml.cucadiagram.Member) r5;

        $r7 = virtualinvoke r6.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifier()>();

        if $r7 == null goto label4;

        return 1;

     label4:
        goto label2;

     label5:
        return 0;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        java.util.ListIterator r2;
        net.sourceforge.plantuml.Dimension2DDouble $r3;
        java.lang.Object $r4;
        java.lang.CharSequence r5;
        net.sourceforge.plantuml.graphic.TextBlock r6;
        net.sourceforge.plantuml.graphic.StringBounder r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D r8;
        double $d0, $d1, d2, d3, d4, d5;
        net.sourceforge.plantuml.ISkinParam $r9;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r7 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d2 = 0.0;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: boolean hasSmallIcon()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $i0 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: int getCircledCharacterRadius()>();

        $i1 = $i0 + 3;

        d2 = (double) $i1;

     label1:
        d3 = 0.0;

        d4 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.Display members>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.CharSequence) $r4;

        r6 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.TextBlock createTextBlock(java.lang.CharSequence)>(r5);

        r8 = interfaceinvoke r6.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        $d0 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d3 = staticinvoke <java.lang.Math: double max(double,double)>($d0, d3);

        $d1 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d4 = d4 + $d1;

        goto label2;

     label3:
        d5 = d3 + d2;

        $r3 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r3.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d5, d4);

        return $r3;
    }

    public net.sourceforge.plantuml.svek.Ports getPorts(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.Ports $r0;
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r2;
        net.sourceforge.plantuml.cucadiagram.Display $r3;
        java.util.ListIterator r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.CharSequence r6;
        net.sourceforge.plantuml.graphic.TextBlock r7;
        net.sourceforge.plantuml.graphic.StringBounder r8;
        net.sourceforge.plantuml.awt.geom.Dimension2D r9;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r10;
        java.util.Collection $r11;
        java.lang.String $r12, $r14;
        net.sourceforge.plantuml.cucadiagram.Elected r13;
        double $d0, $d1, d2;
        int $i0;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r8 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.svek.Ports;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.Ports: void <init>()>();

        d2 = 0.0;

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.Display members>;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.CharSequence) $r5;

        r7 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.TextBlock createTextBlock(java.lang.CharSequence)>(r6);

        r9 = interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r8);

        $r10 = r2.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.ILeaf leaf>;

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.cucadiagram.ILeaf: java.util.Collection getPortShortNames()>();

        $r12 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: java.lang.String convert(java.lang.CharSequence)>(r6);

        r13 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.Elected getElected(java.util.Collection,java.lang.String)>($r11, $r12);

        if r13 == null goto label2;

        $r14 = virtualinvoke r13.<net.sourceforge.plantuml.cucadiagram.Elected: java.lang.String getShortName()>();

        $i0 = virtualinvoke r13.<net.sourceforge.plantuml.cucadiagram.Elected: int getScore()>();

        $d1 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.svek.Ports: void add(java.lang.String,int,double,double)>($r14, $i0, d2, $d1);

     label2:
        $d0 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d2 = d2 + $d0;

        goto label1;

     label3:
        return $r0;
    }

    private java.lang.String convert(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean $z0;
        java.lang.String $r1, $r3;
        net.sourceforge.plantuml.cucadiagram.Member $r2;
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r4;

        r4 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r0 := @parameter0: java.lang.CharSequence;

        $z0 = r0 instanceof net.sourceforge.plantuml.cucadiagram.Member;

        if $z0 == 0 goto label1;

        $r2 = (net.sourceforge.plantuml.cucadiagram.Member) r0;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String getDisplay(boolean)>(0);

        return $r3;

     label1:
        $r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.Elected getElected(java.util.Collection, java.lang.String)
    {
        java.util.HashSet $r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String r4, r6;
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r5;
        int i0;
        net.sourceforge.plantuml.cucadiagram.Elected $r7;

        r5 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r1 := @parameter0: java.util.Collection;

        r6 := @parameter1: java.lang.String;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        r2 = virtualinvoke $r0.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        i0 = specialinvoke r5.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: int getScore(java.lang.String,java.lang.String)>(r4, r6);

        if i0 <= 0 goto label2;

        $r7 = new net.sourceforge.plantuml.cucadiagram.Elected;

        specialinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Elected: void <init>(java.lang.String,int)>(r4, i0);

        return $r7;

     label2:
        goto label1;

     label3:
        return null;
    }

    private int getScore(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r3, $r6;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r7;

        r7 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".*\\b");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\b.*");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean matches(java.lang.String)>($r6);

        if $z0 == 0 goto label1;

        return 100;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

        if $z1 == 0 goto label2;

        return 50;

     label2:
        return 0;
    }

    private net.sourceforge.plantuml.graphic.TextBlock createTextBlock(java.lang.CharSequence)
    {
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r0;
        net.sourceforge.plantuml.style.Style $r1, $r29;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2, $r28, r31;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r3;
        net.sourceforge.plantuml.FontParam $r4;
        net.sourceforge.plantuml.ISkinParam $r5, $r9, $r11, $r15, $r19, $r21, $r23, $r30;
        java.lang.CharSequence r6;
        boolean $z0, $z1, $z3, $z4, $z5, $z6;
        java.lang.String $r7, $r26, r32;
        net.sourceforge.plantuml.cucadiagram.Display $r8, $r20;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r10, $r22;
        net.sourceforge.plantuml.creole.CreoleMode $r12, $r24;
        net.sourceforge.plantuml.LineBreakStrategy $r13, $r25;
        net.sourceforge.plantuml.graphic.TextBlock $r14, r33, r34;
        net.sourceforge.plantuml.EmbeddedDiagram $r16;
        net.sourceforge.plantuml.EmbeddedDiagram$Draw $r17;
        net.sourceforge.plantuml.cucadiagram.Member r18;
        int $i0;
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea$TextBlockTracer $r27;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r6 := @parameter0: java.lang.CharSequence;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.style.Style style>;

        if $r1 == null goto label1;

        $r28 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r30 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r29 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.style.Style style>;

        specialinvoke $r28.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>($r30, $r29);

        r31 = $r28;

        goto label2;

     label1:
        $r2 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.FontParam fontParam>;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        specialinvoke $r2.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r5, $r4, $r3);

        r31 = $r2;

     label2:
        $z0 = r6 instanceof net.sourceforge.plantuml.cucadiagram.Member;

        if $z0 == 0 goto label8;

        r18 = (net.sourceforge.plantuml.cucadiagram.Member) r6;

        $r19 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $i0 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: int classAttributeIconSize()>();

        if $i0 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        r32 = virtualinvoke r18.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String getDisplay(boolean)>($z5);

        if $z5 == 0 goto label5;

        $z4 = virtualinvoke r32.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z4 == 0 goto label5;

        r32 = staticinvoke <net.sourceforge.plantuml.utils.CharHidder: java.lang.String addTileAtBegin(java.lang.String)>(r32);

     label5:
        $z6 = virtualinvoke r18.<net.sourceforge.plantuml.cucadiagram.Member: boolean isAbstract()>();

        if $z6 == 0 goto label6;

        r31 = virtualinvoke r31.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration italic()>();

     label6:
        $z3 = virtualinvoke r18.<net.sourceforge.plantuml.cucadiagram.Member: boolean isStatic()>();

        if $z3 == 0 goto label7;

        r31 = virtualinvoke r31.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration underline()>();

     label7:
        $r20 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r32);

        $r22 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.HorizontalAlignment align>;

        $r23 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r24 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode SIMPLE_LINE>;

        $r21 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r25 = interfaceinvoke $r21.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        r33 = virtualinvoke $r20.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create8(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.LineBreakStrategy)>(r31, $r22, $r23, $r24, $r25);

        $r26 = virtualinvoke r18.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String getDisplay(boolean)>(0);

        r34 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock fullInnerPosition(net.sourceforge.plantuml.graphic.TextBlock,java.lang.String)>(r33, $r26);

        $r27 = new net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea$TextBlockTracer;

        specialinvoke $r27.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea$TextBlockTracer: void <init>(net.sourceforge.plantuml.cucadiagram.Member,net.sourceforge.plantuml.graphic.TextBlock)>(r18, r34);

        return $r27;

     label8:
        $z1 = r6 instanceof net.sourceforge.plantuml.EmbeddedDiagram;

        if $z1 == 0 goto label9;

        $r16 = (net.sourceforge.plantuml.EmbeddedDiagram) r6;

        $r15 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.EmbeddedDiagram: net.sourceforge.plantuml.EmbeddedDiagram$Draw asDraw(net.sourceforge.plantuml.ISkinSimple)>($r15);

        return $r17;

     label9:
        $r7 = interfaceinvoke r6.<java.lang.CharSequence: java.lang.String toString()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r7);

        $r10 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.HorizontalAlignment align>;

        $r11 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r12 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode SIMPLE_LINE>;

        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r13 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        $r14 = virtualinvoke $r8.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create8(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.LineBreakStrategy)>(r31, $r10, $r11, $r12, $r13);

        return $r14;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getUBlock(net.sourceforge.plantuml.skin.VisibilityModifier, net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.skin.VisibilityModifier r0;
        boolean $z0, z1, $z2;
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r1;
        net.sourceforge.plantuml.skin.rose.Rose $r2, $r6;
        net.sourceforge.plantuml.ISkinParam $r3, $r7, $r15, $r19, $r21, $r25, $r27, $r35;
        net.sourceforge.plantuml.ColorParam $r4, $r5, $r8;
        int $i0;
        net.sourceforge.plantuml.Url r9;
        net.sourceforge.plantuml.graphic.TextBlock $r10, r36;
        net.sourceforge.plantuml.ugraphic.color.HColor $r11, $r12, r31, $r32, r33, $r34;
        net.sourceforge.plantuml.style.StyleSignature $r14;
        net.sourceforge.plantuml.style.StyleBuilder $r16;
        net.sourceforge.plantuml.style.PName $r17, $r23;
        net.sourceforge.plantuml.style.Value $r18, $r24;
        net.sourceforge.plantuml.api.ThemeStyle $r20, $r26;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r22, $r28;
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea$1 $r29;
        net.sourceforge.plantuml.style.Style r30;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r0 := @parameter0: net.sourceforge.plantuml.skin.VisibilityModifier;

        r9 := @parameter1: net.sourceforge.plantuml.Url;

        if r0 != null goto label1;

        $r29 = new net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea$1;

        specialinvoke $r29.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea$1: void <init>(net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea)>(r1);

        return $r29;

     label1:
        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label4;

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r15 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r30 = virtualinvoke $r14.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r16);

        $r17 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r18 = virtualinvoke r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r17);

        $r19 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r21 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r22 = interfaceinvoke $r21.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r31 = interfaceinvoke $r18.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r20, $r22);

        z1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.VisibilityModifier: boolean isField()>();

        if z1 == 0 goto label2;

        $r32 = null;

        goto label3;

     label2:
        $r23 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r24 = virtualinvoke r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r23);

        $r25 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r26 = interfaceinvoke $r25.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r27 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r32 = interfaceinvoke $r24.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r26, $r28);

     label3:
        r33 = $r32;

        goto label7;

     label4:
        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.ColorParam getForeground()>();

        r31 = virtualinvoke $r2.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r3, $r4);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.ColorParam getBackground()>();

        if $r5 != null goto label5;

        $r34 = null;

        goto label6;

     label5:
        $r6 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r7 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.ColorParam getBackground()>();

        $r34 = virtualinvoke $r6.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r7, $r8);

     label6:
        r33 = $r34;

     label7:
        $r35 = r1.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $i0 = interfaceinvoke $r35.<net.sourceforge.plantuml.ISkinParam: int classAttributeIconSize()>();

        $r11 = r31;

        $r12 = r33;

        if r9 == null goto label8;

        $z2 = 1;

        goto label9;

     label8:
        $z2 = 0;

     label9:
        r36 = virtualinvoke r0.<net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.graphic.TextBlock getUBlock(int,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>($i0, $r11, $r12, $z2);

        $r10 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockWithUrl: net.sourceforge.plantuml.graphic.TextBlock withUrl(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.Url)>(r36, r9);

        return $r10;
    }

    public boolean contains(java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        java.util.ListIterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.lang.CharSequence r4;
        net.sourceforge.plantuml.cucadiagram.Member r5;
        java.lang.String $r6, r7;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r7 := @parameter0: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.Display members>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.CharSequence) $r3;

        r5 = (net.sourceforge.plantuml.cucadiagram.Member) r4;

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String getDisplay(boolean)>(0);

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>(r7);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.ULayoutGroup r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        java.lang.String r4;
        double $d0, $d1;
        java.awt.geom.Rectangle2D $r5;
        net.sourceforge.plantuml.graphic.InnerStrategy r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r6 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ugraphic.ULayoutGroup getLayout(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: java.awt.geom.Rectangle2D getInnerPosition(java.lang.String,double,double,net.sourceforge.plantuml.graphic.StringBounder)>(r4, $d0, $d1, r1);

        return $r5;
    }

    private net.sourceforge.plantuml.ugraphic.ULayoutGroup getLayout(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r0;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2Right $r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        java.lang.Object $r7, $r14;
        net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2Center $r8;
        net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2Left $r9;
        net.sourceforge.plantuml.ugraphic.ULayoutGroup $r10, r19, $r25;
        net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility $r11;
        net.sourceforge.plantuml.ISkinParam $r12;
        int $i0, $i1;
        net.sourceforge.plantuml.cucadiagram.Display $r13, $r26;
        net.sourceforge.plantuml.skin.VisibilityModifier r15;
        net.sourceforge.plantuml.Url $r16;
        net.sourceforge.plantuml.graphic.TextBlock $r17, $r18, r22, r29;
        java.util.ListIterator r20, r27;
        java.lang.CharSequence r21, r28;
        net.sourceforge.plantuml.cucadiagram.Member r23;
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r24;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: boolean hasSmallIcon()>();

        if $z0 == 0 goto label05;

        $r10 = new net.sourceforge.plantuml.ugraphic.ULayoutGroup;

        $r11 = new net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility;

        $r12 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ISkinParam skinParam>;

        $i0 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: int getCircledCharacterRadius()>();

        $i1 = $i0 + 3;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility: void <init>(net.sourceforge.plantuml.graphic.StringBounder,int)>(r6, $i1);

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: void <init>(net.sourceforge.plantuml.ugraphic.PlacementStrategy)>($r11);

        r19 = $r10;

        $r13 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.Display members>;

        r20 = virtualinvoke $r13.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label01:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r14 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.CharSequence) $r14;

        r22 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.TextBlock createTextBlock(java.lang.CharSequence)>(r21);

        $z2 = r21 instanceof net.sourceforge.plantuml.EmbeddedDiagram;

        if $z2 == 0 goto label02;

        $r18 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.TextBlock getUBlock(net.sourceforge.plantuml.skin.VisibilityModifier,net.sourceforge.plantuml.Url)>(null, null);

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: void add(net.sourceforge.plantuml.graphic.TextBlock)>($r18);

        goto label03;

     label02:
        r23 = (net.sourceforge.plantuml.cucadiagram.Member) r21;

        r15 = virtualinvoke r23.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifier()>();

        $r16 = virtualinvoke r23.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.Url getUrl()>();

        $r17 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.TextBlock getUBlock(net.sourceforge.plantuml.skin.VisibilityModifier,net.sourceforge.plantuml.Url)>(r15, $r16);

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: void add(net.sourceforge.plantuml.graphic.TextBlock)>($r17);

     label03:
        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: void add(net.sourceforge.plantuml.graphic.TextBlock)>(r22);

        goto label01;

     label04:
        goto label10;

     label05:
        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.HorizontalAlignment align>;

        $r1 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        if $r2 != $r1 goto label06;

        $r9 = new net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2Left;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2Left: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        r24 = $r9;

        goto label08;

     label06:
        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.HorizontalAlignment align>;

        $r3 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        if $r4 != $r3 goto label07;

        $r8 = new net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2Center;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2Center: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        r24 = $r8;

        goto label08;

     label07:
        $r5 = new net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2Right;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.PlacementStrategyY1Y2Right: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        r24 = $r5;

     label08:
        $r25 = new net.sourceforge.plantuml.ugraphic.ULayoutGroup;

        specialinvoke $r25.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: void <init>(net.sourceforge.plantuml.ugraphic.PlacementStrategy)>(r24);

        r19 = $r25;

        $r26 = r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.cucadiagram.Display members>;

        r27 = virtualinvoke $r26.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label09:
        $z3 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r7 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.lang.CharSequence) $r7;

        r29 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.graphic.TextBlock createTextBlock(java.lang.CharSequence)>(r28);

        virtualinvoke $r25.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: void add(net.sourceforge.plantuml.graphic.TextBlock)>(r29);

        goto label09;

     label10:
        return r19;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2, $r4;
        net.sourceforge.plantuml.ugraphic.ULayoutGroup r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.ugraphic.ULayoutGroup getLayout(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.MethodsOrFieldsArea: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r4);

        $d0 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.ULayoutGroup: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,double,double)>(r1, $d0, $d1);

        return;
    }
}
