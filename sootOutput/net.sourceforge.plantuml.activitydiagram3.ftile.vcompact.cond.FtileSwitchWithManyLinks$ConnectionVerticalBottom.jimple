class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.TextBlock outLabel;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, $r3;
        net.sourceforge.plantuml.graphic.TextBlock r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0> = r1;

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.graphic.TextBlock outLabel> = r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom r2;
        java.awt.geom.Point2D r3, $r9, r10, $r11, $r13, r14, $r20, r21, $r22, $r24, r25;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks $r4, $r7, $r15, $r18, $r26, $r28;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r5, $r16;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r6, r17;
        net.sourceforge.plantuml.ugraphic.UTranslate r8, r19;
        double d0, d1, d2, d3, $d4, d5, $d6, $d7, $d8, $d9, $d10;
        net.sourceforge.plantuml.ISkinParam $r27;
        net.sourceforge.plantuml.graphic.Rainbow $r29;
        net.sourceforge.plantuml.ugraphic.UPolygon $r30;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r31, r34;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r32;
        net.sourceforge.plantuml.graphic.TextBlock $r33;
        byte $b0, $b1;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r5 = $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        r8 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r9 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointA()>();

        r10 = virtualinvoke r8.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r9);

        $r11 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointB()>();

        virtualinvoke r8.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r11);

        $r13 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointD()>();

        r14 = virtualinvoke r8.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r13);

        $r15 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r16 = $r15.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r18 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        r19 = virtualinvoke $r18.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r20 = virtualinvoke r17.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointB()>();

        r21 = virtualinvoke r19.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r20);

        $r22 = virtualinvoke r17.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointC()>();

        virtualinvoke r19.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r22);

        $r24 = virtualinvoke r17.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointD()>();

        r25 = virtualinvoke r19.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r24);

        d0 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        d1 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        d2 = virtualinvoke r10.<java.awt.geom.Point2D: double getX()>();

        d3 = virtualinvoke r10.<java.awt.geom.Point2D: double getY()>();

        $d4 = d1 + d3;

        d5 = $d4 / 2.0;

        $r26 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r27 = virtualinvoke $r26.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r28 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r29 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.graphic.Rainbow access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks)>($r28);

        $r30 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        $r31 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r27, $r29, $r30);

        $r33 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.graphic.TextBlock outLabel>;

        $r32 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment CENTER>;

        r34 = virtualinvoke $r31.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.VerticalAlignment)>($r33, $r32);

        $d6 = virtualinvoke r25.<java.awt.geom.Point2D: double getX()>();

        $d7 = $d6 - 10.0;

        $b0 = d0 cmpg $d7;

        if $b0 < 0 goto label1;

        $d9 = virtualinvoke r21.<java.awt.geom.Point2D: double getX()>();

        $d10 = $d9 + 10.0;

        $b1 = d0 cmpl $d10;

        if $b1 <= 0 goto label2;

     label1:
        virtualinvoke r34.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d1);

        $d8 = virtualinvoke r14.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r34.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, $d8);

        goto label3;

     label2:
        virtualinvoke r34.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d1);

        virtualinvoke r34.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d5);

        virtualinvoke r34.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d2, d5);

        virtualinvoke r34.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d2, d3);

     label3:
        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r34);

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r5;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        java.awt.geom.Point2D $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateOf(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r8 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        return $r8;
    }
}
