public class net.sourceforge.plantuml.project.draw.TaskDrawDiamond extends net.sourceforge.plantuml.project.draw.AbstractTaskDraw
{

    public void <init>(net.sourceforge.plantuml.project.timescale.TimeScale, net.sourceforge.plantuml.real.Real, java.lang.String, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.project.core.Task, net.sourceforge.plantuml.project.ToTaskDraw, net.sourceforge.plantuml.style.StyleBuilder, net.sourceforge.plantuml.ugraphic.color.HColorSet)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.project.timescale.TimeScale r1;
        net.sourceforge.plantuml.real.Real r2;
        java.lang.String r3;
        net.sourceforge.plantuml.project.time.Day r4;
        net.sourceforge.plantuml.ISkinParam r5;
        net.sourceforge.plantuml.project.core.Task r6;
        net.sourceforge.plantuml.project.ToTaskDraw r7;
        net.sourceforge.plantuml.style.StyleBuilder r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r9;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r1 := @parameter0: net.sourceforge.plantuml.project.timescale.TimeScale;

        r2 := @parameter1: net.sourceforge.plantuml.real.Real;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: net.sourceforge.plantuml.project.time.Day;

        r5 := @parameter4: net.sourceforge.plantuml.ISkinParam;

        r6 := @parameter5: net.sourceforge.plantuml.project.core.Task;

        r7 := @parameter6: net.sourceforge.plantuml.project.ToTaskDraw;

        r8 := @parameter7: net.sourceforge.plantuml.style.StyleBuilder;

        r9 := @parameter8: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.AbstractTaskDraw: void <init>(net.sourceforge.plantuml.project.timescale.TimeScale,net.sourceforge.plantuml.real.Real,java.lang.String,net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.project.core.Task,net.sourceforge.plantuml.project.ToTaskDraw,net.sourceforge.plantuml.style.StyleBuilder,net.sourceforge.plantuml.ugraphic.color.HColorSet)>(r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r6;

        r6 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName ganttDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName milestone>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public double getHeightMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: double getFullHeightTask(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    protected double getShapeHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1;
        net.sourceforge.plantuml.ugraphic.UFont $r2;
        double $d0, $d1;
        int $i0, i1;
        net.sourceforge.plantuml.graphic.StringBounder r3;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UFont: double getSize2D()>();

        i1 = (int) $d0;

        $i0 = i1 % 2;

        if $i0 != 1 goto label1;

        i1 = i1 + -1;

     label1:
        $d1 = (double) i1;

        return $d1;
    }

    public final void drawTitle(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.project.LabelStrategy, double, double)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft r2, r3;
        net.sourceforge.plantuml.graphic.TextBlock r4;
        double $d0, $d1, $d2, $d3, d4, d5, d6, d7, $d8, d9, $d10, $d11, $d12, d13, $d14, d15, $d16, $d17, $d18, d19;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r16;
        net.sourceforge.plantuml.graphic.StringBounder r6, $r13;
        net.sourceforge.plantuml.awt.geom.Dimension2D r7;
        net.sourceforge.plantuml.project.LabelStrategy r8;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.project.time.Day $r9, $r11;
        net.sourceforge.plantuml.project.timescale.TimeScale $r10, $r12;
        net.sourceforge.plantuml.ugraphic.UGraphic r14, r15, $r17;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r8 := @parameter1: net.sourceforge.plantuml.project.LabelStrategy;

        d15 := @parameter2: double;

        d13 := @parameter3: double;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.style.Style getStyle()>();

        r2 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft getMargin()>();

        r3 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft getPadding()>();

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.graphic.TextBlock getTitle()>();

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: double getTop()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        r15 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        r6 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r7 = interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: double getShapeHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $d2 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d3 = $d1 - $d2;

        d4 = $d3 / 2.0;

        $z0 = virtualinvoke r8.<net.sourceforge.plantuml.project.LabelStrategy: boolean titleInFirstColumn()>();

        if $z0 == 0 goto label2;

        $z2 = virtualinvoke r8.<net.sourceforge.plantuml.project.LabelStrategy: boolean rightAligned()>();

        if $z2 == 0 goto label1;

        $d16 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d17 = d15 - $d16;

        $d18 = virtualinvoke r2.<net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: double getRight()>();

        d19 = $d17 - $d18;

        goto label4;

     label1:
        d19 = virtualinvoke r2.<net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: double getLeft()>();

        goto label4;

     label2:
        $z1 = virtualinvoke r8.<net.sourceforge.plantuml.project.LabelStrategy: boolean titleInLastColumn()>();

        if $z1 == 0 goto label3;

        $d14 = virtualinvoke r2.<net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: double getLeft()>();

        d19 = d13 + $d14;

        goto label4;

     label3:
        $r10 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.timescale.TimeScale timeScale>;

        $r9 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.time.Day start>;

        d5 = interfaceinvoke $r10.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r9);

        $r12 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.timescale.TimeScale timeScale>;

        $r11 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.time.Day start>;

        d6 = interfaceinvoke $r12.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r11);

        $r13 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d7 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: double getShapeHeight(net.sourceforge.plantuml.graphic.StringBounder)>($r13);

        $d8 = d6 - d5;

        d9 = $d8 - d7;

        $d10 = d9 / 2.0;

        $d11 = d6 - $d10;

        $d12 = virtualinvoke r3.<net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: double getLeft()>();

        d19 = $d11 + $d12;

     label4:
        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d19, d4);

        $r17 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r17);

        return;
    }

    protected net.sourceforge.plantuml.graphic.TextBlock getTitle()
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.cucadiagram.Display $r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        net.sourceforge.plantuml.SpriteContainerEmpty $r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;
        net.sourceforge.plantuml.graphic.TextBlock $r6;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        $r1 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: java.lang.String prettyDisplay>;

        $r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r4 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r4.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        $r6 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r3, $r5, $r4);

        return $r6;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft r2;
        double $d0, d1, d2, d3, $d4, d5, $d6, $d7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r10;
        net.sourceforge.plantuml.project.time.Day $r4, $r6;
        net.sourceforge.plantuml.project.timescale.TimeScale $r5, $r7;
        net.sourceforge.plantuml.graphic.StringBounder $r8;
        net.sourceforge.plantuml.ugraphic.UGraphic $r9, $r11, r12, r13;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.style.Style getStyle()>();

        r2 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft getMargin()>();

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: double getTop()>();

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        r13 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.timescale.TimeScale timeScale>;

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.time.Day start>;

        d1 = interfaceinvoke $r5.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r4);

        $r7 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.timescale.TimeScale timeScale>;

        $r6 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.time.Day start>;

        d2 = interfaceinvoke $r7.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r6);

        $r8 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: double getShapeHeight(net.sourceforge.plantuml.graphic.StringBounder)>($r8);

        $d4 = d2 - d1;

        d5 = $d4 - d3;

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.ugraphic.UGraphic applyColors(net.sourceforge.plantuml.ugraphic.UGraphic)>(r13);

        $d6 = d5 / 2.0;

        $d7 = d1 + $d6;

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d7);

        $r11 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: void drawShape(net.sourceforge.plantuml.ugraphic.UGraphic)>($r11);

        return;
    }

    private net.sourceforge.plantuml.ugraphic.UGraphic applyColors(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.project.lang.CenterBorderColor r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4, $r7, $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r5;
        net.sourceforge.plantuml.ugraphic.UBackground $r6;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.lang.CenterBorderColor getColors()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<net.sourceforge.plantuml.project.lang.CenterBorderColor: boolean isOk()>();

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.project.lang.CenterBorderColor: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r2);

        return $r8;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.ugraphic.color.HColor getLineColor()>();

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.ugraphic.color.HColor getBackgroundColor()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r7 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        return $r7;
    }

    private void drawShape(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.ugraphic.UShape $r3;

        r1 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = specialinvoke r1.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.ugraphic.UShape getDiamond(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        return;
    }

    public net.sourceforge.plantuml.project.draw.FingerPrint getFingerPrintNote(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return null;
    }

    public net.sourceforge.plantuml.project.draw.FingerPrint getFingerPrint(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0, d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.project.time.Day $r2;
        net.sourceforge.plantuml.project.timescale.TimeScale $r3;
        net.sourceforge.plantuml.project.draw.FingerPrint $r4;
        net.sourceforge.plantuml.real.Real $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: double getFullHeightTask(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.timescale.TimeScale timeScale>;

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.time.Day start>;

        d1 = interfaceinvoke $r3.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r2);

        $r4 = new net.sourceforge.plantuml.project.draw.FingerPrint;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.real.Real getY(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = interfaceinvoke $r5.<net.sourceforge.plantuml.real.Real: double getCurrentValue()>();

        $d3 = d1 + d0;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.real.Real getY(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d4 = interfaceinvoke $r6.<net.sourceforge.plantuml.real.Real: double getCurrentValue()>();

        $d5 = $d4 + d0;

        specialinvoke $r4.<net.sourceforge.plantuml.project.draw.FingerPrint: void <init>(double,double,double,double)>(d1, $d2, $d3, $d5);

        return $r4;
    }

    private net.sourceforge.plantuml.ugraphic.UShape getDiamond(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.ugraphic.UPolygon $r2;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: double getShapeHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        $d1 = d0 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d1, 0.0);

        $d2 = d0 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d0, $d2);

        $d3 = d0 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d3, d0);

        $d4 = d0 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, $d4);

        return $r2;
    }

    public double getX1(net.sourceforge.plantuml.project.core.TaskAttribute)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.project.time.Day $r1, $r3;
        net.sourceforge.plantuml.project.timescale.TimeScale $r2, $r4;
        double d0, d1, d2, $d3, d4, $d5;
        net.sourceforge.plantuml.project.core.TaskAttribute r5;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r5 := @parameter0: net.sourceforge.plantuml.project.core.TaskAttribute;

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.timescale.TimeScale timeScale>;

        $r1 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.time.Day start>;

        d0 = interfaceinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r1);

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.timescale.TimeScale timeScale>;

        $r3 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.time.Day start>;

        d1 = interfaceinvoke $r4.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r3);

        d2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: double getShapeHeight(net.sourceforge.plantuml.graphic.StringBounder)>(null);

        $d3 = d1 - d0;

        d4 = $d3 - d2;

        $d5 = d0 + d4;

        return $d5;
    }

    public double getX2(net.sourceforge.plantuml.project.core.TaskAttribute)
    {
        net.sourceforge.plantuml.project.draw.TaskDrawDiamond r0;
        net.sourceforge.plantuml.project.time.Day $r1, $r3;
        net.sourceforge.plantuml.project.timescale.TimeScale $r2, $r4;
        double d0, d1, d2, $d3, d4, $d5;
        net.sourceforge.plantuml.project.core.TaskAttribute r5;

        r0 := @this: net.sourceforge.plantuml.project.draw.TaskDrawDiamond;

        r5 := @parameter0: net.sourceforge.plantuml.project.core.TaskAttribute;

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.timescale.TimeScale timeScale>;

        $r1 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.time.Day start>;

        d0 = interfaceinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r1);

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.timescale.TimeScale timeScale>;

        $r3 = r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: net.sourceforge.plantuml.project.time.Day start>;

        d1 = interfaceinvoke $r4.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r3);

        d2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TaskDrawDiamond: double getShapeHeight(net.sourceforge.plantuml.graphic.StringBounder)>(null);

        $d3 = d1 - d0;

        d4 = $d3 - d2;

        $d5 = d1 - d4;

        return $d5;
    }
}
