class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final double xSeparation;
    private final java.util.List tiles;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2;
    private final java.util.List diamonds;
    private final java.util.List couples;
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    static final boolean $assertionsDisabled;

    private void <init>(java.util.List, java.util.List, java.util.List, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        java.util.List r1, r6, r17, $r18;
        java.lang.Object $r2, $r11, $r14, $r19;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, r7, r12, $r15, $r21;
        net.sourceforge.plantuml.ISkinParam $r4;
        java.util.ArrayList $r5, $r8, $r9;
        int $i0, $i1, $i2, i3;
        net.sourceforge.plantuml.graphic.Rainbow r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple $r13;
        java.lang.Double $r20;
        double $d0;
        java.lang.IllegalArgumentException $r22;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r6 := @parameter0: java.util.List;

        r17 := @parameter1: java.util.List;

        r1 := @parameter2: java.util.List;

        r7 := @parameter3: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r10 := @parameter4: net.sourceforge.plantuml.graphic.Rainbow;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r2;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>($r4);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: double xSeparation> = 20.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: double xSeparation> = 20.0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples> = $r5;

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r22;

     label1:
        i3 = 0;

     label2:
        $i2 = interfaceinvoke r6.<java.util.List: int size()>();

        if i3 >= $i2 goto label3;

        $r11 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i3);

        r12 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r11;

        $r13 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r15 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r14;

        specialinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r12, $r15);

        $r18 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        $r19 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>(i3);

        $r20 = (java.lang.Double) $r19;

        $d0 = virtualinvoke $r20.<java.lang.Double: double doubleValue()>();

        $r21 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,double)>($r13, $d0, 0.0);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r21);

        i3 = i3 + 1;

        goto label2;

     label3:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2> = r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>(r6);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List diamonds> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List tiles> = $r9;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r10;

        return;
    }

    private static java.util.List alignDiamonds(java.util.List, net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.util.List r0;
        boolean $z0, $z1;
        java.util.ArrayList $r1;
        int $i0, i2;
        java.lang.Object $r2, $r6;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r4, $r7;
        double $d0, d1, $d2, $d3, d4;
        byte $b1;
        java.lang.AssertionError $r5;
        java.util.Iterator r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r9, r11, r12;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        d4 = 0.0;

        r8 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r6;

        $r7 = interfaceinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d3 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        d4 = staticinvoke <java.lang.Math: double max(double,double)>(d4, $d3);

        goto label1;

     label2:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label3:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i0 goto label5;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r11 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r2;

        $r4 = interfaceinvoke r11.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        d1 = d4 - $d0;

        $z1 = <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $b1 = d1 cmpl 0.0;

        if $b1 >= 0 goto label4;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        $d2 = d1 / 2.0;

        r12 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addVerticalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,double)>(r11, $d2, 20.0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r12);

        i2 = i2 + 1;

        goto label3;

     label5:
        return $r1;
    }

    public java.util.Set getSwimlanes()
    {
        java.util.HashSet $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3, $r12;
        java.util.List $r4;
        java.util.Iterator r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r6, r10;
        java.util.Set $r7, $r8, $r11;
        java.lang.Object $r9;
        boolean $z3;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        if $r3 == null goto label1;

        $r12 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label1:
        $r4 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r9;

        $r11 = interfaceinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r11);

        goto label2;

     label3:
        $r6 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r7);

        $r8 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r8;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r2;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r4;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r1;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory, net.sourceforge.plantuml.svek.ConditionStyle, java.util.List, net.sourceforge.plantuml.activitydiagram3.Branch, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r0, r22, $r24, $r31, $r49, $r55;
        java.util.ArrayList $r1, $r7, $r8, $r21;
        java.util.List r3, r100;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered $r4, $r83;
        net.sourceforge.plantuml.activitydiagram3.Branch r5, $r44, r87, r91, r106, r115;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r6, $r27, $r46, $r84, r103, r104, r113, r114;
        net.sourceforge.plantuml.cucadiagram.Display $r10, $r32, $r56, $r60, $r63, $r73, $r74;
        net.sourceforge.plantuml.graphic.FontConfiguration r11, r33;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r12;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r13, $r34, $r57, $r61, $r65, $r66, $r75;
        net.sourceforge.plantuml.ISkinParam $r14, $r35, $r58, $r62, $r64, $r67, $r70, $r76;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        java.lang.Object $r15, $r36, $r37, $r38, $r41, $r42, $r43, $r45, $r59, $r82;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2 $r16, $r17, $r69, r96, r98;
        net.sourceforge.plantuml.graphic.StringBounder $r18, $r47, $r77;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal $r19;
        net.sourceforge.plantuml.graphic.Rainbow r20, $r40, r105, r107, $r109, r110, $r111, r112, r117, r118, $r119, r120, $r121, r123;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionIn $r23;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionLastElseIn $r25;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionLastElseOut $r26;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHline $r28;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal $r39;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r48;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalIn $r51;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut $r52;
        net.sourceforge.plantuml.ugraphic.color.HColor $r68, r71, r81, $r94;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r72;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r78;
        double $d0;
        java.lang.Double $r79, $r80;
        net.sourceforge.plantuml.svek.ConditionStyle r85;
        java.util.Iterator r86, r90;
        net.sourceforge.plantuml.graphic.TextBlock r92, r93, r97, r99, r108, r116;

        r72 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r71 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r81 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r20 := @parameter3: net.sourceforge.plantuml.graphic.Rainbow;

        r12 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        r85 := @parameter5: net.sourceforge.plantuml.svek.ConditionStyle;

        r3 := @parameter6: java.util.List;

        r5 := @parameter7: net.sourceforge.plantuml.activitydiagram3.Branch;

        r11 := @parameter8: net.sourceforge.plantuml.graphic.FontConfiguration;

        r22 := @parameter9: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r0 := @parameter10: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r33 := @parameter11: net.sourceforge.plantuml.graphic.FontConfiguration;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r86 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r82 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>();

        r87 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r82;

        $r83 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        $r84 = virtualinvoke r87.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r83.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r84, 30.0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r83);

        goto label01;

     label02:
        $r4 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r6, 30.0);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r90 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r59 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>();

        r91 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r59;

        $r60 = virtualinvoke r91.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getDisplayPositive()>();

        $r61 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r62 = interfaceinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r92 = virtualinvoke $r60.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r11, $r61, $r62);

        $r63 = virtualinvoke r91.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getLabelTest()>();

        $r64 = interfaceinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r65 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r66 = interfaceinvoke $r64.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r65);

        $r67 = interfaceinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r93 = virtualinvoke $r63.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r33, $r66, $r67);

        $r68 = virtualinvoke r91.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if $r68 != null goto label04;

        $r94 = r81;

        goto label05;

     label04:
        $r94 = virtualinvoke r91.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

     label05:
        $r69 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2;

        $r70 = virtualinvoke r91.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke $r69.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r93, $r70, $r94, r71, r72);

        r96 = $r69;

        $r73 = virtualinvoke r91.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getInlabel()>();

        $z3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r73);

        if $z3 == 0 goto label06;

        $r80 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r80);

        goto label07;

     label06:
        $r74 = virtualinvoke r91.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getInlabel()>();

        $r75 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r76 = interfaceinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r97 = virtualinvoke $r74.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r11, $r75, $r76);

        $r77 = interfaceinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r78 = interfaceinvoke r97.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r77);

        $d0 = virtualinvoke $r78.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r79 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r79);

        r96 = virtualinvoke $r69.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2 withWest(net.sourceforge.plantuml.graphic.TextBlock)>(r97);

     label07:
        r98 = virtualinvoke r96.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2 withNorth(net.sourceforge.plantuml.graphic.TextBlock)>(r92);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r98);

        goto label03;

     label08:
        $r10 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getDisplayPositive()>();

        $r13 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r14 = interfaceinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r99 = virtualinvoke $r10.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r11, $r13, $r14);

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        i10 = $i0 - 1;

        $r15 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i10);

        $r16 = (net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2) $r15;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2 withEast(net.sourceforge.plantuml.graphic.TextBlock)>(r99);

        interfaceinvoke $r7.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i10, $r17);

        $r18 = interfaceinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r100 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List alignDiamonds(java.util.List,net.sourceforge.plantuml.graphic.StringBounder)>($r7, $r18);

        $r19 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        specialinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: void <init>(java.util.List,java.util.List,java.util.List,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow)>(r100, $r8, $r1, $r4, r20);

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        i11 = 0;

        i12 = 0;

     label09:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if i12 >= $i1 goto label16;

        $r41 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i12);

        r103 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r41;

        $r42 = interfaceinvoke r100.<java.util.List: java.lang.Object get(int)>(i12);

        r104 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r42;

        $r43 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i12);

        $r44 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r43;

        r105 = virtualinvoke $r44.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.Rainbow getInColor(net.sourceforge.plantuml.graphic.Rainbow)>(r20);

        $r45 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i12);

        r106 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r45;

        $r46 = virtualinvoke r106.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        $r47 = interfaceinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r48 = interfaceinvoke $r46.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r47);

        $z2 = virtualinvoke $r48.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z2 == 0 goto label10;

        i11 = i11 + 1;

     label10:
        r107 = virtualinvoke r106.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.Rainbow getOut()>();

        r108 = null;

        $r49 = virtualinvoke r106.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering getSpecial()>();

        if $r49 == null goto label11;

        $r55 = virtualinvoke r106.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering getSpecial()>();

        $r56 = virtualinvoke $r55.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r57 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r58 = interfaceinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r108 = virtualinvoke $r56.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r33, $r57, $r58);

     label11:
        $i8 = virtualinvoke r105.<net.sourceforge.plantuml.graphic.Rainbow: int size()>();

        if $i8 != 0 goto label12;

        $r109 = r20;

        goto label13;

     label12:
        $r109 = r105;

     label13:
        r110 = $r109;

        $i9 = virtualinvoke r107.<net.sourceforge.plantuml.graphic.Rainbow: int size()>();

        if $i9 != 0 goto label14;

        $r111 = r20;

        goto label15;

     label14:
        $r111 = r107;

     label15:
        $r51 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalIn;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r19);

        specialinvoke $r51.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalIn: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow)>($r19, r104, r103, r110);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r51);

        $r52 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r19);

        specialinvoke $r52.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.graphic.TextBlock)>($r19, r103, $r111, r108);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r52);

        i12 = i12 + 1;

        goto label09;

     label16:
        r112 = virtualinvoke r22.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r20);

        i13 = 0;

     label17:
        $i2 = interfaceinvoke r100.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        if i13 >= $i3 goto label18;

        $r36 = interfaceinvoke r100.<java.util.List: java.lang.Object get(int)>(i13);

        r113 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r36;

        $i6 = i13 + 1;

        $r37 = interfaceinvoke r100.<java.util.List: java.lang.Object get(int)>($i6);

        r114 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r37;

        $i7 = i13 + 1;

        $r38 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i7);

        r115 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r38;

        $r39 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r19);

        $r40 = virtualinvoke r115.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.Rainbow getInRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r20);

        specialinvoke $r39.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow)>($r19, r113, r114, $r40);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r39);

        i13 = i13 + 1;

        goto label17;

     label18:
        $r23 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionIn;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r19);

        specialinvoke $r23.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionIn: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.graphic.Rainbow)>($r19, r112);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r23);

        r116 = null;

        $r24 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering getSpecial()>();

        if $r24 == null goto label19;

        $r31 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering getSpecial()>();

        $r32 = virtualinvoke $r31.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r34 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r35 = interfaceinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r116 = virtualinvoke $r32.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r33, $r34, $r35);

     label19:
        r117 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.Rainbow getOut()>();

        r118 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.Rainbow getInColor(net.sourceforge.plantuml.graphic.Rainbow)>(r20);

        $i4 = virtualinvoke r118.<net.sourceforge.plantuml.graphic.Rainbow: int size()>();

        if $i4 != 0 goto label20;

        $r119 = r20;

        goto label21;

     label20:
        $r119 = r118;

     label21:
        r120 = $r119;

        $i5 = virtualinvoke r117.<net.sourceforge.plantuml.graphic.Rainbow: int size()>();

        if $i5 != 0 goto label22;

        $r121 = r20;

        goto label23;

     label22:
        $r121 = r117;

     label23:
        $r25 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionLastElseIn;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r19);

        specialinvoke $r25.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionLastElseIn: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.graphic.Rainbow)>($r19, r120);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r25);

        $r26 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionLastElseOut;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r19);

        specialinvoke $r26.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionLastElseOut: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.graphic.TextBlock,int)>($r19, $r121, r116, i11);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r26);

        if i11 <= 0 goto label24;

        $z4 = 1;

        goto label25;

     label24:
        $z4 = 0;

     label25:
        if $z4 == 0 goto label26;

        r123 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r20);

        $r28 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHline;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r19);

        specialinvoke $r28.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHline: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.graphic.Rainbow)>($r19, r123);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r28);

     label26:
        $r27 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addConnection(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,java.util.Collection)>($r19, $r21);

        return $r27;
    }

    private static double getYdiamontOutToLeft(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r0;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d2 = $d0 + $d1;

        $d3 = $d2 / 2.0;

        return $d3;
    }

    public java.util.Collection getMyChildren()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r1;
        java.util.List $r2, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List tiles>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r5;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r1;
        java.util.List $r3, $r4;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r8, $r9;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r6 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        if r0 != $r2 goto label1;

        $r9 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        return $r9;

     label1:
        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $r8 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateCouple1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r0, r6);

        return $r8;

     label2:
        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List tiles>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        $r7 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r0, r6);

        return $r7;

     label3:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        double $d0, $d1, d2, $d4, $d5, $d6, $d7, $d8, d9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = $d0 - $d1;

        $d4 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = $d4 - 0.0;

        $d6 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d7 = $d5 - $d6;

        $d8 = $d7 / 2.0;

        d9 = $d8 + 0.0;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d2, d9);

        return $r5;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1, $r6, $r10;
        java.util.List $r2, $r3, $r8;
        int i0;
        java.lang.Object $r4, $r9;
        net.sourceforge.plantuml.graphic.StringBounder r5;
        net.sourceforge.plantuml.ugraphic.UTranslate r7, r11, $r12;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List diamonds>;

        i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        if i0 != -1 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r13;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r6 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r4;

        r7 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateCouple1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r6, r5);

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        $r10 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r9;

        r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r5);

        $r12 = virtualinvoke r7.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>(r11);

        return $r12;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1, $r6, $r10;
        java.util.List $r2, $r3, $r8;
        int i0;
        java.lang.Object $r4, $r9;
        net.sourceforge.plantuml.graphic.StringBounder r5;
        net.sourceforge.plantuml.ugraphic.UTranslate r7, r11, $r12;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List tiles>;

        i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        if i0 != -1 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r13;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r6 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r4;

        r7 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateCouple1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r6, r5);

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        $r10 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r9;

        r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r5);

        $r12 = virtualinvoke r7.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>(r11);

        return $r12;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateCouple1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r5, r8;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r7;
        double $d0, $d1, d2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r8 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r6 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        d2 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r4;

        r7 = interfaceinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        if r5 != r8 goto label2;

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d2, 25.0);

        return $r9;

     label2:
        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d1 = $d0 + 20.0;

        d2 = d2 + $d1;

        goto label1;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r6, $r11;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r7, r9;
        java.lang.Object $r8;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r8;

        $r10 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateCouple1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r9, r1);

        $r11 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r9);

        goto label1;

     label2:
        $r5 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

        return;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r1;
        java.util.List $r2, $r5;
        boolean $z0;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4, r8;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        int $i0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6, $r9, r12;
        java.lang.Object $r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D r10, r13, r14, r15;
        java.util.Iterator r11;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(0.0, 0.0);

        r10 = $r0;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        r11 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r7;

        $r9 = interfaceinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        r10 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D mergeLR(net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r10, $r9);

        goto label1;

     label2:
        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        r12 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d0 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: double getDiamondsHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d1 = $d0 / 2.0;

        r13 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r12, 0.0, $d1);

        r14 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D mergeLR(net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r10, r13);

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $d2 = (double) $i0;

        $d3 = 20.0 * $d2;

        r15 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r14, $d3, 100.0);

        $r6 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d4 = virtualinvoke r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d5 = $d4 / 2.0;

        specialinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r15, $d5, 0.0);

        return $r6;
    }

    private double getDiamondsHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r4;
        net.sourceforge.plantuml.graphic.StringBounder r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List diamonds>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r3;

        $r6 = interfaceinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r5);

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label2:
        return d1;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, $r8, $r11, $r12;
        java.util.ArrayList $r3;
        java.util.List $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r6, r10;
        java.util.Iterator r7;
        boolean $z1, $z2;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.Object $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = new java.util.ArrayList;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List tiles>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r9;

        $r11 = interfaceinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z2 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z2 == 0 goto label2;

        $r12 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = $d2 / 2.0;

        $d4 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double,double)>(r2, $d3, 0.0, $d4);

        return $r12;

     label2:
        goto label1;

     label3:
        $r8 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 / 2.0;

        specialinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r2, $d1, 0.0);

        return $r8;
    }

    static double access$000(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: double getYdiamontOutToLeft(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry,net.sourceforge.plantuml.graphic.StringBounder)>(r0, r1);

        return $d0;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r1 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2);

        return $r3;
    }

    static java.util.List access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        java.util.List $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List diamonds>;

        return $r1;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$400(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$500(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r1 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2);

        return $r3;
    }

    static java.util.List access$700(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r0;
        java.util.List $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: java.util.List couples>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/activitydiagram3/ftile/vcompact/FtileIfLongHorizontal;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: boolean $assertionsDisabled> = $z1;

        return;
    }
}
