public final enum class net.sourceforge.plantuml.PaddingParam extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.PaddingParam PARTICIPANT;
    public static final enum net.sourceforge.plantuml.PaddingParam BOX;
    private static final net.sourceforge.plantuml.PaddingParam[] $VALUES;

    public static net.sourceforge.plantuml.PaddingParam[] values()
    {
        net.sourceforge.plantuml.PaddingParam[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.PaddingParam: net.sourceforge.plantuml.PaddingParam[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.PaddingParam[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.PaddingParam valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.PaddingParam $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/PaddingParam;", r0);

        $r2 = (net.sourceforge.plantuml.PaddingParam) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.PaddingParam r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.PaddingParam;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public java.lang.String getSkinName()
    {
        java.lang.StringBuilder $r0, $r4, $r5;
        net.sourceforge.plantuml.PaddingParam r1;
        java.lang.String $r2, $r3, $r6;

        r1 := @this: net.sourceforge.plantuml.PaddingParam;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.PaddingParam: java.lang.String name()>();

        $r3 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goLowerCase(java.lang.String)>($r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Padding");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static net.sourceforge.plantuml.PaddingParam[] $values()
    {
        net.sourceforge.plantuml.PaddingParam[] $r0;
        net.sourceforge.plantuml.PaddingParam $r1, $r2;

        $r0 = newarray (net.sourceforge.plantuml.PaddingParam)[2];

        $r1 = <net.sourceforge.plantuml.PaddingParam: net.sourceforge.plantuml.PaddingParam PARTICIPANT>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.PaddingParam: net.sourceforge.plantuml.PaddingParam BOX>;

        $r0[1] = $r2;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.PaddingParam $r0, $r1;
        net.sourceforge.plantuml.PaddingParam[] $r2;

        $r0 = new net.sourceforge.plantuml.PaddingParam;

        specialinvoke $r0.<net.sourceforge.plantuml.PaddingParam: void <init>(java.lang.String,int)>("PARTICIPANT", 0);

        <net.sourceforge.plantuml.PaddingParam: net.sourceforge.plantuml.PaddingParam PARTICIPANT> = $r0;

        $r1 = new net.sourceforge.plantuml.PaddingParam;

        specialinvoke $r1.<net.sourceforge.plantuml.PaddingParam: void <init>(java.lang.String,int)>("BOX", 1);

        <net.sourceforge.plantuml.PaddingParam: net.sourceforge.plantuml.PaddingParam BOX> = $r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.PaddingParam: net.sourceforge.plantuml.PaddingParam[] $values()>();

        <net.sourceforge.plantuml.PaddingParam: net.sourceforge.plantuml.PaddingParam[] $VALUES> = $r2;

        return;
    }
}
