class net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1 extends net.sourceforge.plantuml.command.CommandMultilines2
{
    final net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity this$0;

    void <init>(net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity, net.sourceforge.plantuml.command.regex.IRegex, net.sourceforge.plantuml.command.MultilinesStrategy)
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1 r0;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity r1;
        net.sourceforge.plantuml.command.regex.IRegex r2;
        net.sourceforge.plantuml.command.MultilinesStrategy r3;

        r0 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1;

        r1 := @parameter0: net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity;

        r2 := @parameter1: net.sourceforge.plantuml.command.regex.IRegex;

        r3 := @parameter2: net.sourceforge.plantuml.command.MultilinesStrategy;

        r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1: net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.command.CommandMultilines2: void <init>(net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.command.MultilinesStrategy)>(r2, r3);

        return;
    }

    public java.lang.String getPatternEnd()
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1 r0;

        r0 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1;

        return "^[%s]*end[%s]?note$";
    }

    public final net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.activitydiagram.ActivityDiagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1 r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;
        net.sourceforge.plantuml.StringLocated $r2, $r3;
        java.lang.String $r4, $r15, $r18, r25;
        net.sourceforge.plantuml.command.regex.RegexResult r5;
        int $i0, $i1;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r6;
        net.sourceforge.plantuml.cucadiagram.Ident r7;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.LeafType $r9;
        net.sourceforge.plantuml.cucadiagram.ILeaf r10;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity $r11;
        net.sourceforge.plantuml.command.CommandExecutionResult $r12;
        net.sourceforge.plantuml.UrlBuilder $r13;
        net.sourceforge.plantuml.ISkinParam $r14;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r16;
        java.lang.CharSequence $r17;
        net.sourceforge.plantuml.command.BlocLines r19, r20, r21;
        net.sourceforge.plantuml.cucadiagram.Display r22;
        net.sourceforge.plantuml.Url r23;
        net.sourceforge.plantuml.cucadiagram.Code $r26;

        r0 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1;

        r6 := @parameter0: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r19 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1: net.sourceforge.plantuml.command.regex.IRegex getStartingPattern()>();

        $r2 = virtualinvoke r19.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.StringLocated getFirst()>();

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        r5 = interfaceinvoke $r1.<net.sourceforge.plantuml.command.regex.IRegex: net.sourceforge.plantuml.command.regex.RegexResult matcher(java.lang.String)>($r4);

        r20 = virtualinvoke r19.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines subExtract(int,int)>(1, 1);

        r21 = virtualinvoke r20.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines removeEmptyColumns()>();

        r22 = virtualinvoke r21.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.cucadiagram.Display toDisplay()>();

        r23 = null;

        $i0 = virtualinvoke r22.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        if $i0 <= 0 goto label1;

        $r13 = new net.sourceforge.plantuml.UrlBuilder;

        $r14 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.ISkinParam: java.lang.String getValue(java.lang.String)>("topurl");

        $r16 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl STRICT>;

        specialinvoke $r13.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>($r15, $r16);

        $r17 = virtualinvoke r22.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        $r18 = interfaceinvoke $r17.<java.lang.CharSequence: java.lang.String toString()>();

        r23 = virtualinvoke $r13.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>($r18);

     label1:
        if r23 == null goto label2;

        $i1 = virtualinvoke r22.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        r22 = virtualinvoke r22.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display subList(int,int)>(1, $i1);

     label2:
        r25 = staticinvoke <net.sourceforge.plantuml.utils.UniqueSequence: java.lang.String getString(java.lang.String)>("GMN");

        r7 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r25);

        $z0 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z0 == 0 goto label3;

        $r26 = r7;

        goto label4;

     label3:
        $r26 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r25);

     label4:
        $r9 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType NOTE>;

        r10 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r7, $r26, r22, $r9, null);

        if r23 == null goto label5;

        interfaceinvoke r10.<net.sourceforge.plantuml.cucadiagram.IEntity: void addUrl(net.sourceforge.plantuml.Url)>(r23);

     label5:
        $r11 = r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1: net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity this$0>;

        $r12 = staticinvoke <net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity: net.sourceforge.plantuml.command.CommandExecutionResult access$000(net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity,net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.cucadiagram.IEntity)>($r11, r6, r5, r10);

        return $r12;
    }

    public volatile net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1 r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.command.BlocLines r2;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram $r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;

        r0 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r3 = (net.sourceforge.plantuml.activitydiagram.ActivityDiagram) r1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity$1: net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.command.BlocLines)>($r3, r2);

        return $r4;
    }
}
