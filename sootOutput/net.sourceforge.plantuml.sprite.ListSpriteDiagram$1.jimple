class net.sourceforge.plantuml.sprite.ListSpriteDiagram$1 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final net.sourceforge.plantuml.sprite.ListSpriteDiagram this$0;

    void <init>(net.sourceforge.plantuml.sprite.ListSpriteDiagram)
    {
        net.sourceforge.plantuml.sprite.ListSpriteDiagram$1 r0;
        net.sourceforge.plantuml.sprite.ListSpriteDiagram r1;

        r0 := @this: net.sourceforge.plantuml.sprite.ListSpriteDiagram$1;

        r1 := @parameter0: net.sourceforge.plantuml.sprite.ListSpriteDiagram;

        r0.<net.sourceforge.plantuml.sprite.ListSpriteDiagram$1: net.sourceforge.plantuml.sprite.ListSpriteDiagram this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sprite.ListSpriteDiagram$1 r0;
        net.sourceforge.plantuml.sprite.ListSpriteDiagram $r1, $r7, $r14;
        net.sourceforge.plantuml.ISkinParam $r2, $r8, $r16;
        java.util.Collection $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String r6;
        net.sourceforge.plantuml.sprite.Sprite r9;
        java.lang.CharSequence[] $r10;
        net.sourceforge.plantuml.cucadiagram.Display $r11;
        net.sourceforge.plantuml.ugraphic.UFont $r12;
        net.sourceforge.plantuml.graphic.FontConfiguration $r13;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r15, $r19;
        net.sourceforge.plantuml.graphic.TextBlock r17, r25, r26;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r18;
        net.sourceforge.plantuml.ugraphic.UGraphic r20, $r22;
        net.sourceforge.plantuml.ugraphic.UTranslate $r21;
        net.sourceforge.plantuml.graphic.StringBounder $r23;
        net.sourceforge.plantuml.awt.geom.Dimension2D r24;
        double $d0, $d1, $d2, d3, d4, d5, d6;
        byte $b0;

        r0 := @this: net.sourceforge.plantuml.sprite.ListSpriteDiagram$1;

        r20 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d3 = 0.0;

        d4 = 0.0;

        d5 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.sprite.ListSpriteDiagram$1: net.sourceforge.plantuml.sprite.ListSpriteDiagram this$0>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sprite.ListSpriteDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: java.util.Collection getAllSpriteNames()>();

        r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = r0.<net.sourceforge.plantuml.sprite.ListSpriteDiagram$1: net.sourceforge.plantuml.sprite.ListSpriteDiagram this$0>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.sprite.ListSpriteDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.sprite.Sprite getSprite(java.lang.String)>(r6);

        $r10 = newarray (java.lang.CharSequence)[1];

        $r10[0] = r6;

        $r11 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r10);

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(14);

        $r13 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>($r12);

        $r15 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r14 = r0.<net.sourceforge.plantuml.sprite.ListSpriteDiagram$1: net.sourceforge.plantuml.sprite.ListSpriteDiagram this$0>;

        $r16 = virtualinvoke $r14.<net.sourceforge.plantuml.sprite.ListSpriteDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r17 = virtualinvoke $r11.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r13, $r15, $r16);

        $r18 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        r25 = interfaceinvoke r9.<net.sourceforge.plantuml.sprite.Sprite: net.sourceforge.plantuml.graphic.TextBlock asTextBlock(net.sourceforge.plantuml.ugraphic.color.HColor,double)>($r18, 1.0);

        $r19 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        r26 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock mergeTB(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r25, r17, $r19);

        $r21 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r21.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d4);

        $r22 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r21);

        interfaceinvoke r26.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r22);

        $r23 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r24 = interfaceinvoke r26.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r23);

        $d0 = virtualinvoke r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d5 = staticinvoke <java.lang.Math: double max(double,double)>(d5, $d0);

        $d1 = virtualinvoke r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d6 = d3 + $d1;

        d3 = d6 + 30.0;

        $b0 = d3 cmpl 1024.0;

        if $b0 <= 0 goto label2;

        d3 = 0.0;

        $d2 = d5 + 50.0;

        d4 = d4 + $d2;

        d5 = 0.0;

     label2:
        goto label1;

     label3:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.sprite.ListSpriteDiagram$1 r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.sprite.ListSpriteDiagram$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(1024.0, 1024.0);

        return $r0;
    }
}
