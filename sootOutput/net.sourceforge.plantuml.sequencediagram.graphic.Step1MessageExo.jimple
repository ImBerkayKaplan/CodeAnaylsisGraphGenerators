class net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo extends net.sourceforge.plantuml.sequencediagram.graphic.Step1Abstract
{
    private final net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow messageArrow;
    static final boolean $assertionsDisabled;

    void <init>(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.sequencediagram.MessageExo, net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet, net.sourceforge.plantuml.sequencediagram.graphic.Frontier)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo r0;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.sequencediagram.MessageExo r3;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet r4;
        net.sourceforge.plantuml.sequencediagram.graphic.Frontier r5;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r6, $r9, $r18;
        net.sourceforge.plantuml.skin.rose.Rose $r7, $r14, $r25;
        net.sourceforge.plantuml.style.Style[] $r8, $r26;
        net.sourceforge.plantuml.ISkinParam $r10, $r23, r24;
        net.sourceforge.plantuml.cucadiagram.Display $r11, $r28;
        net.sourceforge.plantuml.skin.ArrowComponent r12;
        net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow $r13;
        double $d0;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r15;
        net.sourceforge.plantuml.sequencediagram.MessageExoType $r16;
        net.sourceforge.plantuml.Url $r17;
        boolean $z0, $z1;
        java.util.List r19;
        java.util.Iterator r20;
        java.lang.Object $r21;
        net.sourceforge.plantuml.sequencediagram.Note r22;
        net.sourceforge.plantuml.skin.ComponentType $r27;
        net.sourceforge.plantuml.skin.Component $r29;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: net.sourceforge.plantuml.sequencediagram.MessageExo;

        r4 := @parameter3: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet;

        r5 := @parameter4: net.sourceforge.plantuml.sequencediagram.graphic.Frontier;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Abstract: void <init>(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.AbstractMessage,net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet,net.sourceforge.plantuml.sequencediagram.graphic.Frontier)>(r1, r2, r3, r4, r5);

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowType(net.sourceforge.plantuml.sequencediagram.MessageExo)>(r3);

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: void setConfig(net.sourceforge.plantuml.skin.ArrowConfiguration)>($r6);

        $r7 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r8 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.style.Style[] getUsedStyles()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.skin.ArrowConfiguration getConfig()>();

        $r10 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.cucadiagram.Display getLabelNumbered()>();

        r12 = virtualinvoke $r7.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.ArrowComponent createComponentArrow(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>($r8, $r9, $r10, $r11);

        $r13 = new net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow;

        $d0 = interfaceinvoke r5.<net.sourceforge.plantuml.sequencediagram.graphic.Frontier: double getFreeY(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange)>(r1);

        $r14 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r15 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox()>();

        $r16 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.sequencediagram.MessageExoType getType()>();

        $r17 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.Url getUrl()>();

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.MessageExo: boolean isShortArrow()>();

        $r18 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        specialinvoke $r13.<net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow: void <init>(double,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.skin.ArrowComponent,net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox,net.sourceforge.plantuml.sequencediagram.MessageExoType,net.sourceforge.plantuml.Url,boolean,net.sourceforge.plantuml.skin.ArrowConfiguration)>($d0, $r14, r12, $r15, $r16, $r17, $z0, $r18);

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow messageArrow> = $r13;

        r19 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.MessageExo: java.util.List getNoteOnMessages()>();

        r20 = interfaceinvoke r19.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r21 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (net.sourceforge.plantuml.sequencediagram.Note) $r21;

        $r23 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r24 = virtualinvoke r22.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.ISkinParam getSkinParamBackcolored(net.sourceforge.plantuml.ISkinParam)>($r23);

        $r25 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r26 = virtualinvoke r22.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.Style[] getUsedStyles()>();

        $r27 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE>;

        $r28 = virtualinvoke r22.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.cucadiagram.Display getStrings()>();

        $r29 = virtualinvoke $r25.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.Component createComponentNote(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>($r26, $r27, r24, $r28);

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: void addNote(net.sourceforge.plantuml.skin.Component)>($r29);

        goto label1;

     label2:
        return;
    }

    net.sourceforge.plantuml.sequencediagram.graphic.Frontier prepareMessage(net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet, net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo r0;
        net.sourceforge.plantuml.sequencediagram.graphic.Arrow r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2, $r3, $r5, $r6;
        double d0, d1, d2, $d3, d4, d5;
        net.sourceforge.plantuml.sequencediagram.AbstractMessage $r4, $r7, $r9, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r8;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox r10;
        net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow $r11;
        net.sourceforge.plantuml.sequencediagram.MessageExoType $r12;
        net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet r13;
        net.sourceforge.plantuml.sequencediagram.graphic.Pushable $r14, $r22;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox $r15, $r21;
        net.sourceforge.plantuml.sequencediagram.graphic.Constraint $r16, $r23;
        net.sourceforge.plantuml.sequencediagram.graphic.Frontier $r18;
        net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack r19;
        java.lang.AssertionError $r20;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo;

        r13 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet;

        r19 := @parameter1: net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.Arrow createArrow()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d0 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: double getArrowYStartLevel(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d1 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: double getArrowYEndLevel(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: void setPosYstartLevel(double)>(d0);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d2 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: double getArrowOnlyWidth(net.sourceforge.plantuml.graphic.StringBounder)>($r5);

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d3 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)>($r6);

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: void incFreeY(double)>($d3);

        d5 = 0.0;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $z0 = virtualinvoke $r7.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: boolean isActivateAndDeactive()>();

        if $z0 == 0 goto label1;

        d5 = 30.0;

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: void incFreeY(double)>(30.0);

     label1:
        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        virtualinvoke $r8.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: void addEvent(net.sourceforge.plantuml.sequencediagram.Event,net.sourceforge.plantuml.sequencediagram.graphic.GraphicalElement)>($r9, r1);

        r10 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox()>();

        $r11 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow messageArrow>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow: net.sourceforge.plantuml.sequencediagram.MessageExoType getType()>();

        $z1 = virtualinvoke $r12.<net.sourceforge.plantuml.sequencediagram.MessageExoType: boolean isRightBorder()>();

        if $z1 == 0 goto label2;

        $r21 = virtualinvoke r10.<net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox()>();

        $r22 = virtualinvoke r13.<net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet: net.sourceforge.plantuml.sequencediagram.graphic.Pushable getLastborder()>();

        $r23 = virtualinvoke r13.<net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet: net.sourceforge.plantuml.sequencediagram.graphic.Constraint getConstraint(net.sourceforge.plantuml.sequencediagram.graphic.Pushable,net.sourceforge.plantuml.sequencediagram.graphic.Pushable)>($r21, $r22);

        virtualinvoke $r23.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: void ensureValue(double)>(d2);

        goto label3;

     label2:
        $r14 = virtualinvoke r13.<net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet: net.sourceforge.plantuml.sequencediagram.graphic.Pushable getFirstBorder()>();

        $r15 = virtualinvoke r10.<net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox()>();

        $r16 = virtualinvoke r13.<net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet: net.sourceforge.plantuml.sequencediagram.graphic.Constraint getConstraint(net.sourceforge.plantuml.sequencediagram.graphic.Pushable,net.sourceforge.plantuml.sequencediagram.graphic.Pushable)>($r14, $r15);

        virtualinvoke $r16.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: void ensureValue(double)>(d2);

     label3:
        d4 = d1 + d5;

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        virtualinvoke $r17.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: void setPosYendLevel(double)>(d4);

        $z2 = <net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $z4 = r1 instanceof net.sourceforge.plantuml.sequencediagram.InGroupable;

        if $z4 != 0 goto label4;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label4:
        $z3 = r1 instanceof net.sourceforge.plantuml.sequencediagram.InGroupable;

        if $z3 == 0 goto label5;

        virtualinvoke r19.<net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack: void addElement(net.sourceforge.plantuml.sequencediagram.InGroupable)>(r1);

        virtualinvoke r19.<net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack: void addElement(net.sourceforge.plantuml.sequencediagram.InGroupable)>(r10);

     label5:
        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.Frontier getFreeY()>();

        return $r18;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo r0;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r1;
        net.sourceforge.plantuml.sequencediagram.AbstractMessage $r2;
        net.sourceforge.plantuml.sequencediagram.MessageExo $r3;
        net.sourceforge.plantuml.sequencediagram.Participant $r4;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r3 = (net.sourceforge.plantuml.sequencediagram.MessageExo) $r2;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.sequencediagram.Participant getParticipant()>();

        $r5 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox(net.sourceforge.plantuml.sequencediagram.Participant)>($r4);

        return $r5;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.Arrow createArrow()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo r0;
        net.sourceforge.plantuml.sequencediagram.AbstractMessage $r1, $r12;
        java.util.List $r2, $r5, $r9, $r13;
        int $i0, $i1, i2;
        java.util.ArrayList $r3;
        net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox $r6;
        net.sourceforge.plantuml.graphic.StringBounder $r7, $r16;
        net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow $r8, $r17, $r19;
        java.lang.Object $r10, $r14;
        net.sourceforge.plantuml.skin.Component r11;
        net.sourceforge.plantuml.sequencediagram.Note r15;
        net.sourceforge.plantuml.sequencediagram.graphic.NoteBox $r18;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: java.util.List getNoteOnMessages()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r19 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow messageArrow>;

        return $r19;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label2:
        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: java.util.List getNotes()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i2 >= $i1 goto label3;

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: java.util.List getNotes()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i2);

        r11 = (net.sourceforge.plantuml.skin.Component) $r10;

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: java.util.List getNoteOnMessages()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i2);

        r15 = (net.sourceforge.plantuml.sequencediagram.Note) $r14;

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r17 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow messageArrow>;

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.NoteBox createNoteBox(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.graphic.Arrow,net.sourceforge.plantuml.skin.Component,net.sourceforge.plantuml.sequencediagram.Note)>($r16, $r17, r11, r15);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r18);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r6 = new net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r8 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: net.sourceforge.plantuml.sequencediagram.graphic.MessageExoArrow messageArrow>;

        specialinvoke $r6.<net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.graphic.Arrow,java.util.List)>($r7, $r8, $r3);

        return $r6;
    }

    private net.sourceforge.plantuml.skin.ArrowConfiguration getArrowType(net.sourceforge.plantuml.sequencediagram.MessageExo)
    {
        net.sourceforge.plantuml.sequencediagram.MessageExo r0;
        net.sourceforge.plantuml.sequencediagram.MessageExoType r1;
        int $i0;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r2, $r3, $r5, r8, r9, r10;
        net.sourceforge.plantuml.skin.ArrowDecoration $r4, $r6;
        net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo r7;

        r7 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.MessageExo;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.sequencediagram.MessageExoType getType()>();

        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.MessageExoType: int getDirection()>();

        if $i0 != 1 goto label1;

        r8 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        r8 = virtualinvoke $r2.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration reverse()>();

     label2:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDecoration getDecoration1()>();

        r9 = virtualinvoke r8.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDecoration1(net.sourceforge.plantuml.skin.ArrowDecoration)>($r4);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.MessageExo: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDecoration getDecoration2()>();

        r10 = virtualinvoke r9.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDecoration2(net.sourceforge.plantuml.skin.ArrowDecoration)>($r6);

        return r10;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/sequencediagram/graphic/Step1MessageExo;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.sequencediagram.graphic.Step1MessageExo: boolean $assertionsDisabled> = $z1;

        return;
    }
}
