public class net.sourceforge.plantuml.nwdiag.core.NwGroup extends java.lang.Object implements net.sourceforge.plantuml.nwdiag.core.NStackable
{
    private final java.util.Set names;
    private final java.lang.String name;
    private net.sourceforge.plantuml.ugraphic.color.HColor color;
    private java.lang.String description;
    private net.sourceforge.plantuml.nwdiag.next.NBox nbox;

    public net.sourceforge.plantuml.nwdiag.next.NBox getNboxInternal()
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        net.sourceforge.plantuml.nwdiag.next.NBox $r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.nwdiag.next.NBox nbox>;

        if $r1 != null goto label1;

        $r3 = new net.sourceforge.plantuml.nwdiag.next.NBox;

        specialinvoke $r3.<net.sourceforge.plantuml.nwdiag.next.NBox: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.nwdiag.next.NBox nbox> = $r3;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.nwdiag.next.NBox nbox>;

        return $r2;
    }

    public final net.sourceforge.plantuml.nwdiag.next.NBox getNbox(java.util.Map)
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        net.sourceforge.plantuml.nwdiag.next.NBox $r1, $r2, $r3, $r11;
        java.util.Map r4;
        java.util.Set $r5, $r9;
        java.util.Iterator r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r10, $r12;
        java.util.Map$Entry r8;
        net.sourceforge.plantuml.nwdiag.core.NServer $r13;
        net.sourceforge.plantuml.nwdiag.next.NBar $r14;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r4 := @parameter0: java.util.Map;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.nwdiag.next.NBox nbox>;

        if $r1 != null goto label3;

        $r3 = new net.sourceforge.plantuml.nwdiag.next.NBox;

        specialinvoke $r3.<net.sourceforge.plantuml.nwdiag.next.NBox: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.nwdiag.next.NBox nbox> = $r3;

        $r5 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.util.Set names>;

        $r10 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z1 == 0 goto label2;

        $r11 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.nwdiag.next.NBox nbox>;

        $r12 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (net.sourceforge.plantuml.nwdiag.core.NServer) $r12;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar getBar()>();

        virtualinvoke $r11.<net.sourceforge.plantuml.nwdiag.next.NBox: void add(net.sourceforge.plantuml.nwdiag.next.NBar)>($r14);

     label2:
        goto label1;

     label3:
        $r2 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.nwdiag.next.NBox nbox>;

        return $r2;
    }

    public void addName(java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        java.lang.String r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.util.Set names>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10;
        net.sourceforge.plantuml.nwdiag.core.NwGroup r2;
        java.lang.String $r3, $r11;
        java.util.Set $r6;
        net.sourceforge.plantuml.nwdiag.next.NBox $r9;

        r2 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NwGroup:");

        $r3 = r2.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r2.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.util.Set names>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = r2.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.nwdiag.next.NBox nbox>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        java.util.HashSet $r1;
        java.lang.String r2;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.util.Set names> = $r1;

        r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.lang.String name> = r2;

        return;
    }

    public final java.lang.String getName()
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.lang.String name>;

        return $r1;
    }

    public final net.sourceforge.plantuml.ugraphic.color.HColor getColor()
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        return $r1;
    }

    public final void setColor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.ugraphic.color.HColor color> = r1;

        return;
    }

    public final void setDescription(java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r1 := @parameter0: java.lang.String;

        r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.lang.String description> = r1;

        return;
    }

    protected final java.lang.String getDescription()
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.lang.String description>;

        return $r1;
    }

    public final java.util.Set names()
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        java.util.Set $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.util.Set names>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public boolean contains(net.sourceforge.plantuml.nwdiag.core.NServer)
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        net.sourceforge.plantuml.nwdiag.core.NServer r1;
        java.util.Set $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r1 := @parameter0: net.sourceforge.plantuml.nwdiag.core.NServer;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.util.Set names>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.nwdiag.core.NServer: java.lang.String getName()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public double getTopHeaderHeight(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.graphic.TextBlock r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r1 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.graphic.TextBlock buildHeaderName(net.sourceforge.plantuml.ISkinParam)>(r1);

        if r2 != null goto label1;

        return 0.0;

     label1:
        r4 = interfaceinvoke r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        return $d0;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleDefinition()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.nwdiag.core.NwGroup r6;

        r6 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName nwdiagDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName group>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public void drawGroup(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.MinMax, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.ISkinParam r0;
        net.sourceforge.plantuml.style.StyleBuilder r1;
        net.sourceforge.plantuml.nwdiag.core.NwGroup r2;
        net.sourceforge.plantuml.style.StyleSignature $r3;
        net.sourceforge.plantuml.style.Style r4;
        net.sourceforge.plantuml.graphic.TextBlock r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r6, $r8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6;
        net.sourceforge.plantuml.style.PName $r9;
        net.sourceforge.plantuml.style.Value $r10;
        net.sourceforge.plantuml.api.ThemeStyle $r11;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r12;
        net.sourceforge.plantuml.graphic.StringBounder $r13;
        net.sourceforge.plantuml.ugraphic.MinMax r14;
        net.sourceforge.plantuml.awt.geom.Dimension2D r15;
        net.sourceforge.plantuml.ugraphic.color.HColor r16;

        r2 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r14 := @parameter1: net.sourceforge.plantuml.ugraphic.MinMax;

        r0 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r3 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.style.StyleSignature getStyleDefinition()>();

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r1);

        r5 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.graphic.TextBlock buildHeaderName(net.sourceforge.plantuml.ISkinParam)>(r0);

        if r5 == null goto label1;

        $r13 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r15 = interfaceinvoke r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r13);

        $d3 = virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.MinMax: double getMinY()>();

        $d4 = virtualinvoke r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d5 = $d3 - $d4;

        $d6 = virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.MinMax: double getMinX()>();

        r14 = virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.ugraphic.MinMax addPoint(double,double)>($d6, d5);

     label1:
        r16 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if r16 != null goto label2;

        $r9 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r10 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r9);

        $r11 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r12 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r16 = interfaceinvoke $r10.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r11, $r12);

     label2:
        virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.MinMax: void draw(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.color.HColor)>(r6, r16);

        if r5 == null goto label3;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.MinMax: double getMinX()>();

        $d1 = $d0 + 5.0;

        $d2 = virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.MinMax: double getMinY()>();

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d2);

        $r8 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke r5.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r8);

     label3:
        return;
    }

    private net.sourceforge.plantuml.graphic.TextBlock buildHeaderName(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        java.lang.String $r1, $r6;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.style.StyleBuilder r3;
        net.sourceforge.plantuml.style.StyleSignature $r4;
        net.sourceforge.plantuml.style.Style r5;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.api.ThemeStyle $r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r9;
        net.sourceforge.plantuml.graphic.FontConfiguration $r10;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r11;
        net.sourceforge.plantuml.graphic.TextBlock $r12;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r2 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.lang.String getDescription()>();

        if $r1 != null goto label1;

        return null;

     label1:
        r3 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.style.StyleSignature getStyleDefinition()>();

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r3);

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: java.lang.String getDescription()>();

        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r6);

        $r8 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r9 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r10 = virtualinvoke r5.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r8, $r9);

        $r11 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r12 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r10, $r11, r2);

        return $r12;
    }
}
