class net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1 extends java.lang.Object implements net.sourceforge.plantuml.creole.Stencil
{
    final double val$dy;
    final net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse this$0;

    void <init>(net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse, double)
    {
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1 r0;
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse r1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1;

        r1 := @parameter0: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        d0 := @parameter1: double;

        r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse this$0> = r1;

        r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1: double val$dy> = d0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double getStartingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1 r0;
        double d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse this$0>;

        $d1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1: double val$dy>;

        $d2 = d0 + $d1;

        $d3 = staticinvoke <net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double access$000(net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse,double)>($r1, $d2);

        return $d3;
    }

    public double getEndingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1 r0;
        double d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse this$0>;

        $d1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1: double val$dy>;

        $d2 = d0 + $d1;

        $d3 = staticinvoke <net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double access$100(net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse,double)>($r1, $d2);

        return $d3;
    }
}
