public class net.sourceforge.plantuml.board.Activity extends java.lang.Object
{
    private final net.sourceforge.plantuml.board.BNode node;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private net.sourceforge.plantuml.board.BNode cursor;
    private final net.sourceforge.plantuml.board.BoardDiagram boardDiagram;
    private net.sourceforge.plantuml.board.BArray array;

    public void <init>(net.sourceforge.plantuml.board.BoardDiagram, java.lang.String, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.board.Activity r0;
        net.sourceforge.plantuml.board.BoardDiagram r1;
        net.sourceforge.plantuml.board.BNode $r2, $r5;
        java.lang.String r3;
        net.sourceforge.plantuml.ISkinParam r4;

        r0 := @this: net.sourceforge.plantuml.board.Activity;

        r1 := @parameter0: net.sourceforge.plantuml.board.BoardDiagram;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BoardDiagram boardDiagram> = r1;

        $r2 = new net.sourceforge.plantuml.board.BNode;

        specialinvoke $r2.<net.sourceforge.plantuml.board.BNode: void <init>(int,java.lang.String)>(0, r3);

        r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode node> = $r2;

        r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.ISkinParam skinParam> = r4;

        $r5 = r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode node>;

        r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode cursor> = $r5;

        return;
    }

    public net.sourceforge.plantuml.graphic.TextBlock getBox()
    {
        net.sourceforge.plantuml.board.CardBox $r0;
        java.lang.CharSequence[] $r1;
        net.sourceforge.plantuml.board.Activity r2;
        net.sourceforge.plantuml.board.BNode $r3;
        java.lang.String $r4;
        net.sourceforge.plantuml.cucadiagram.Display $r5;
        net.sourceforge.plantuml.ISkinParam $r6;

        r2 := @this: net.sourceforge.plantuml.board.Activity;

        $r0 = new net.sourceforge.plantuml.board.CardBox;

        $r1 = newarray (java.lang.CharSequence)[1];

        $r3 = r2.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode node>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.board.BNode: java.lang.String getName()>();

        $r1[0] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r1);

        $r6 = r2.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.ISkinParam skinParam>;

        specialinvoke $r0.<net.sourceforge.plantuml.board.CardBox: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinParam)>($r5, $r6);

        return $r0;
    }

    public void addRelease(int, java.lang.String)
    {
        int i0, $i1;
        net.sourceforge.plantuml.board.BNode $r0, $r4, $r5, $r6, $r7;
        java.lang.String r1;
        net.sourceforge.plantuml.board.Activity r3;
        java.lang.IllegalArgumentException $r8;

        r3 := @this: net.sourceforge.plantuml.board.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if i0 > 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label1:
        $r0 = new net.sourceforge.plantuml.board.BNode;

        specialinvoke $r0.<net.sourceforge.plantuml.board.BNode: void <init>(int,java.lang.String)>(i0, r1);

     label2:
        $r4 = r3.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode cursor>;

        $i1 = virtualinvoke $r4.<net.sourceforge.plantuml.board.BNode: int getStage()>();

        if i0 <= $i1 goto label3;

        $r7 = r3.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode cursor>;

        virtualinvoke $r7.<net.sourceforge.plantuml.board.BNode: void addChild(net.sourceforge.plantuml.board.BNode)>($r0);

        r3.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode cursor> = $r0;

        return;

     label3:
        $r5 = r3.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode cursor>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.board.BNode: net.sourceforge.plantuml.board.BNode getParent()>();

        r3.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode cursor> = $r6;

        goto label2;
    }

    private net.sourceforge.plantuml.board.BArray getArray()
    {
        net.sourceforge.plantuml.board.Activity r0;
        net.sourceforge.plantuml.board.BArray $r1, $r2, $r5, $r6;
        java.util.concurrent.atomic.AtomicInteger $r3;
        net.sourceforge.plantuml.board.BNode $r4, $r7;

        r0 := @this: net.sourceforge.plantuml.board.Activity;

        $r1 = r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BArray array>;

        if $r1 != null goto label1;

        $r4 = r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode node>;

        $r3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.board.BNode: void computeX(java.util.concurrent.atomic.AtomicInteger)>($r3);

        $r5 = new net.sourceforge.plantuml.board.BArray;

        specialinvoke $r5.<net.sourceforge.plantuml.board.BArray: void <init>()>();

        r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BArray array> = $r5;

        $r7 = r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BNode node>;

        $r6 = r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BArray array>;

        virtualinvoke $r7.<net.sourceforge.plantuml.board.BNode: void initBarray(net.sourceforge.plantuml.board.BArray)>($r6);

     label1:
        $r2 = r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BArray array>;

        return $r2;
    }

    public double getFullWidth()
    {
        net.sourceforge.plantuml.board.Activity r0;
        net.sourceforge.plantuml.board.BArray r1;
        int $i0, $i1;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.board.Activity;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BArray getArray()>();

        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.board.BArray: int getMaxX()>();

        $i1 = $i0 + 1;

        $d0 = (double) $i1;

        $d1 = staticinvoke <net.sourceforge.plantuml.board.PostIt: double getWidth()>();

        $d2 = $d0 * $d1;

        return $d2;
    }

    public int getMaxStage()
    {
        net.sourceforge.plantuml.board.Activity r0;
        net.sourceforge.plantuml.board.BArray r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.board.Activity;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BArray getArray()>();

        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.board.BArray: int getMaxY()>();

        return $i0;
    }

    public void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.board.Activity r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r16;
        net.sourceforge.plantuml.board.BArray r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.board.BNode r6;
        int $i0, $i1;
        double $d0, $d1, d2, $d3, $d4, d5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r15;
        net.sourceforge.plantuml.board.CardBox $r9;
        java.lang.CharSequence[] $r10;
        java.lang.String $r11;
        net.sourceforge.plantuml.cucadiagram.Display $r12;
        net.sourceforge.plantuml.ISkinParam $r13;

        r0 := @this: net.sourceforge.plantuml.board.Activity;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.graphic.TextBlock getBox()>();

        interfaceinvoke $r1.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r2);

        r3 = specialinvoke r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.board.BArray getArray()>();

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.board.BArray: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.board.BNode) $r5;

        $i0 = virtualinvoke r6.<net.sourceforge.plantuml.board.BNode: int getX()>();

        $d0 = (double) $i0;

        $d1 = staticinvoke <net.sourceforge.plantuml.board.PostIt: double getWidth()>();

        d2 = $d0 * $d1;

        $i1 = virtualinvoke r6.<net.sourceforge.plantuml.board.BNode: int getStage()>();

        $d3 = (double) $i1;

        $d4 = staticinvoke <net.sourceforge.plantuml.board.PostIt: double getHeight()>();

        d5 = $d3 * $d4;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d2, d5);

        interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r9 = new net.sourceforge.plantuml.board.CardBox;

        $r10 = newarray (java.lang.CharSequence)[1];

        $r11 = virtualinvoke r6.<net.sourceforge.plantuml.board.BNode: java.lang.String getName()>();

        $r10[0] = $r11;

        $r12 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r10);

        $r13 = r0.<net.sourceforge.plantuml.board.Activity: net.sourceforge.plantuml.ISkinParam skinParam>;

        specialinvoke $r9.<net.sourceforge.plantuml.board.CardBox: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinParam)>($r12, $r13);

        $r15 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d2, d5);

        $r16 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        virtualinvoke $r9.<net.sourceforge.plantuml.board.CardBox: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r16);

        goto label1;

     label2:
        return;
    }
}
