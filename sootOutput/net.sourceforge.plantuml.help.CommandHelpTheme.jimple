public class net.sourceforge.plantuml.help.CommandHelpTheme extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.help.CommandHelpTheme r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.help.CommandHelpTheme;

        $r1 = staticinvoke <net.sourceforge.plantuml.help.CommandHelpTheme: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.command.regex.RegexConcat $r8;

        $r0 = class "Lnet/sourceforge/plantuml/help/CommandHelpTheme;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[5];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("help");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("themes?");

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[4] = $r7;

        $r8 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r8;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.help.Help, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.help.Help r0;
        java.util.List $r1;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r13;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r12;
        java.lang.String $r7, $r11, r18, r20;
        java.io.IOException $r8;
        net.sourceforge.plantuml.help.CommandHelpTheme r14;
        net.sourceforge.plantuml.LineLocation r15;
        net.sourceforge.plantuml.command.regex.RegexResult r16;
        java.util.Iterator r17;

        r14 := @this: net.sourceforge.plantuml.help.CommandHelpTheme;

        r0 := @parameter0: net.sourceforge.plantuml.help.Help;

        r15 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r16 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>("<b>Help on themes");

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>(" ");

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>("The code of this command is located in <i>net.sourceforge.plantuml.help</i> package.");

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>("You may improve it on <i>https://github.com/plantuml/plantuml/tree/master/src/net/sourceforge/plantuml/help</i>");

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>(" ");

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>(" The possible themes are :");

     label1:
        $r1 = staticinvoke <net.sourceforge.plantuml.theme.ThemeUtils: java.util.List getAllThemeNames()>();

        r17 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.String) $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("* ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>($r7);

        goto label2;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error listing themes: ");

        $r11 = virtualinvoke $r8.<java.io.IOException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r20 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>(r20);

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

        $r13 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>(r20);

        return $r13;

     label5:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r2;

        catch java.io.IOException from label1 to label3 with label4;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.help.CommandHelpTheme r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.help.Help $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.help.CommandHelpTheme;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.help.Help) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.help.CommandHelpTheme: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.help.Help,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
