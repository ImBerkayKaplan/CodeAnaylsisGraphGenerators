public class net.sourceforge.plantuml.descdiagram.DescriptionDiagram extends net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram
{

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.UmlDiagramType $r4;

        r0 := @this: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType DESCRIPTION>;

        specialinvoke r0.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, $r4, r3);

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident cleanIdent(net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r1, r9, r10, r11;
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r8;

        r8 := @this: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r9 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        $z0 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z0 == 0 goto label1;

        $z4 = virtualinvoke r9.<java.lang.String: boolean endsWith(java.lang.String)>("]");

        if $z4 == 0 goto label1;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>("\"([:");

        return $r7;

     label1:
        $z1 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z1 == 0 goto label2;

        $z3 = virtualinvoke r9.<java.lang.String: boolean endsWith(java.lang.String)>(":");

        if $z3 == 0 goto label2;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>("\"([:");

        return $r6;

     label2:
        $z2 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("()");

        if $z2 == 0 goto label3;

        $r1 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>(2);

        r10 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r1);

        r11 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>(r10);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident parent()>();

        $r3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident empty()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident add(java.lang.String,java.lang.String)>(r11, null);

        $r5 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident add(net.sourceforge.plantuml.cucadiagram.Ident)>($r4);

        return $r5;

     label3:
        return r0;
    }

    public net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0, r27, r28, r31, r35;
        net.sourceforge.plantuml.cucadiagram.LeafType r2, $r7, $r11, $r14, $r22;
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r3;
        net.sourceforge.plantuml.graphic.USymbol r4, $r10, $r17, r26;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r5, $r8, $r12, $r18, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r6, $r9, r25, r29, r30, r34;
        net.sourceforge.plantuml.cucadiagram.Code $r13, $r21, r24, $r32, $r36;
        net.sourceforge.plantuml.ISkinParam $r15, $r19;
        net.sourceforge.plantuml.skin.ActorStyle $r16;
        net.sourceforge.plantuml.ComponentStyle $r20;

        r3 := @this: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r24 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r2 := @parameter2: net.sourceforge.plantuml.cucadiagram.LeafType;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.USymbol;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        if r2 != null goto label8;

        r25 = interfaceinvoke r24.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $z0 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z0 == 0 goto label1;

        $z6 = virtualinvoke r25.<java.lang.String: boolean endsWith(java.lang.String)>("]");

        if $z6 == 0 goto label1;

        $r19 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ComponentStyle componentStyle()>();

        r26 = virtualinvoke $r20.<net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.graphic.USymbol toUSymbol()>();

        r27 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>("\"([:");

        $r21 = virtualinvoke r27.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Code toCode(net.sourceforge.plantuml.cucadiagram.CucaDiagram)>(r3);

        $r22 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DESCRIPTION>;

        $r23 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r27, $r21, $r22, r26);

        return $r23;

     label1:
        $z1 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z1 == 0 goto label2;

        $z5 = virtualinvoke r25.<java.lang.String: boolean endsWith(java.lang.String)>(":");

        if $z5 == 0 goto label2;

        r28 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>("\"([:");

        $r13 = virtualinvoke r28.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Code toCode(net.sourceforge.plantuml.cucadiagram.CucaDiagram)>(r3);

        $r14 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DESCRIPTION>;

        $r15 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.skin.ActorStyle actorStyle()>();

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.skin.ActorStyle: net.sourceforge.plantuml.graphic.USymbol toUSymbol()>();

        $r18 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r28, $r13, $r14, $r17);

        return $r18;

     label2:
        $z2 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>("()");

        if $z2 == 0 goto label5;

        $r9 = virtualinvoke r25.<java.lang.String: java.lang.String substring(int)>(2);

        r29 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r9);

        r30 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>(r29);

        r31 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r30);

        $z4 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean V1972()>();

        if $z4 == 0 goto label3;

        $r32 = r31;

        goto label4;

     label3:
        $r32 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r30);

     label4:
        $r11 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DESCRIPTION>;

        $r10 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol INTERFACE>;

        $r12 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r31, $r32, $r11, $r10);

        return $r12;

     label5:
        $r6 = interfaceinvoke r24.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        r34 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>($r6, "\"([:");

        r35 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>("\"([:");

        $z3 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean V1972()>();

        if $z3 == 0 goto label6;

        $r36 = r35;

        goto label7;

     label6:
        $r36 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r34);

     label7:
        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType STILL_UNKNOWN>;

        $r8 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r35, $r36, $r7, r4);

        return $r8;

     label8:
        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r24, r2, r4);

        return $r5;
    }

    private boolean isUsecase()
    {
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r0;
        java.util.Collection $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.cucadiagram.ILeaf r4;
        net.sourceforge.plantuml.cucadiagram.LeafType r5, $r7;
        net.sourceforge.plantuml.graphic.USymbol r6, $r10;
        net.sourceforge.plantuml.ISkinParam $r8;
        net.sourceforge.plantuml.skin.ActorStyle $r9;

        r0 := @this: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: java.util.Collection getLeafsvalues()>();

        r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r3;

        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        r6 = interfaceinvoke r4.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.graphic.USymbol getUSymbol()>();

        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType USECASE>;

        if r5 == $r7 goto label2;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.skin.ActorStyle actorStyle()>();

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.skin.ActorStyle: net.sourceforge.plantuml.graphic.USymbol toUSymbol()>();

        if r6 != $r10 goto label3;

     label2:
        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    public void makeDiagramReady()
    {
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r0;
        boolean $z0, $z1, $z3;
        net.sourceforge.plantuml.cucadiagram.LeafType r1, $r7, $r8, $r11;
        net.sourceforge.plantuml.graphic.USymbol r2, $r12;
        java.util.Collection $r3;
        java.util.Iterator r4;
        java.lang.Object $r5;
        net.sourceforge.plantuml.cucadiagram.ILeaf r6;
        net.sourceforge.plantuml.ISkinParam $r9;
        net.sourceforge.plantuml.skin.ActorStyle $r10;

        r0 := @this: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        specialinvoke r0.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: void makeDiagramReady()>();

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean isUsecase()>();

        if $z0 == 0 goto label1;

        $r11 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DESCRIPTION>;

        goto label2;

     label1:
        $r11 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DESCRIPTION>;

     label2:
        r1 = $r11;

        $z1 = specialinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean isUsecase()>();

        if $z1 == 0 goto label3;

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.skin.ActorStyle actorStyle()>();

        $r12 = virtualinvoke $r10.<net.sourceforge.plantuml.skin.ActorStyle: net.sourceforge.plantuml.graphic.USymbol toUSymbol()>();

        goto label4;

     label3:
        $r12 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol INTERFACE>;

     label4:
        r2 = $r12;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: java.util.Collection getLeafsvalues()>();

        r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r5;

        $r7 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r8 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType STILL_UNKNOWN>;

        if $r7 != $r8 goto label6;

        interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.ILeaf: boolean muteToType(net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r1, r2);

     label6:
        goto label5;

     label7:
        return;
    }

    public java.lang.String checkFinalError()
    {
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: void applySingleStrategy()>();

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: java.lang.String checkFinalError()>();

        return $r1;
    }

    public volatile net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1;
        net.sourceforge.plantuml.cucadiagram.Code r2;
        net.sourceforge.plantuml.cucadiagram.LeafType r3;
        net.sourceforge.plantuml.graphic.USymbol r4;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r5;

        r0 := @this: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.LeafType;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.USymbol;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r1, r2, r3, r4);

        return $r5;
    }
}
