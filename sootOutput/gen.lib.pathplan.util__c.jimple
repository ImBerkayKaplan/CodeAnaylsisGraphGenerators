public class gen.lib.pathplan.util__c extends java.lang.Object
{

    public void <init>()
    {
        gen.lib.pathplan.util__c r0;

        r0 := @this: gen.lib.pathplan.util__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void make_polyline(h.ST_Ppoly_t, h.ST_Ppoly_t)
    {
        h.ST_Ppoly_t r0, $r1, r2;

        r0 := @parameter0: h.ST_Ppoly_t;

        r2 := @parameter1: h.ST_Ppoly_t;

        $r1 = virtualinvoke r0.<h.ST_Ppoly_t: h.ST_Ppoly_t copy()>();

        staticinvoke <gen.lib.pathplan.util__c: void make_polyline_(h.ST_Ppoly_t,h.ST_Ppoly_t)>($r1, r2);

        return;
    }

    private static void make_polyline_(h.ST_Ppoly_t, h.ST_Ppoly_t)
    {
        h.ST_Ppoly_t r0, r30;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i12, i13, $i14, $i15;
        smetana.core.Z $r1, $r2, $r9, $r16, $r23, $r31, $r33, $r40, $r47, $r54, $r55, $r58;
        smetana.core.CArray $r3, $r5, $r10, $r12, $r17, $r19, $r24, $r26, $r32, $r34, $r36, $r41, $r43, $r48, $r50, $r56, $r57;
        java.lang.Object $r4, $r7, $r11, $r14, $r18, $r21, $r25, $r28, $r35, $r38, $r42, $r45, $r49, $r52;
        h.ST_pointf $r6, $r13, $r20, $r27, $r37, $r44, $r51;
        smetana.core.__struct__ $r8, $r15, $r22, $r29, $r39, $r46, $r53;
        java.lang.Throwable $r59;

        r0 := @parameter0: h.ST_Ppoly_t;

        r30 := @parameter1: h.ST_Ppoly_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("ct6tszngugakbl42zkaqrt7p1", "make_polyline_");

     label1:
        $i0 = r0.<h.ST_Ppoly_t: int pn>;

        $i1 = $i0 - 2;

        $i2 = 3 * $i1;

        i3 = 4 + $i2;

        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i4 = $r1.<smetana.core.Z: int isz>;

        if i3 <= $i4 goto label2;

        $r54 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r55 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r56 = $r55.<smetana.core.Z: smetana.core.CArray ispline>;

        $r57 = staticinvoke <smetana.core.CArray: smetana.core.CArray REALLOC__(int,smetana.core.CArray,java.lang.Class)>(i3, $r56, class "Lh/ST_pointf;");

        $r54.<smetana.core.Z: smetana.core.CArray ispline> = $r57;

        $r58 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r58.<smetana.core.Z: int isz> = i3;

     label2:
        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: smetana.core.CArray ispline>;

        $i5 = 0 + 1;

        $r4 = virtualinvoke $r3.<smetana.core.CArray: java.lang.Object get__(int)>($i5);

        $r6 = (h.ST_pointf) $r4;

        $r5 = r0.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r7 = virtualinvoke $r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r8 = (smetana.core.__struct__) $r7;

        virtualinvoke $r6.<h.ST_pointf: void ___(smetana.core.__struct__)>($r8);

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r10 = $r9.<smetana.core.Z: smetana.core.CArray ispline>;

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r13 = (h.ST_pointf) $r11;

        $r12 = r0.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r14 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r15 = (smetana.core.__struct__) $r14;

        virtualinvoke $r13.<h.ST_pointf: void ___(smetana.core.__struct__)>($r15);

        i12 = 0 + 2;

        i13 = 0 + 1;

     label3:
        $i14 = r0.<h.ST_Ppoly_t: int pn>;

        $i15 = $i14 - 1;

        if i13 >= $i15 goto label4;

        $r33 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r34 = $r33.<smetana.core.Z: smetana.core.CArray ispline>;

        $i7 = i12 + 2;

        $r35 = virtualinvoke $r34.<smetana.core.CArray: java.lang.Object get__(int)>($i7);

        $r37 = (h.ST_pointf) $r35;

        $r36 = r0.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r38 = virtualinvoke $r36.<smetana.core.CArray: java.lang.Object get__(int)>(i13);

        $r39 = (smetana.core.__struct__) $r38;

        virtualinvoke $r37.<h.ST_pointf: void ___(smetana.core.__struct__)>($r39);

        $r40 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r41 = $r40.<smetana.core.Z: smetana.core.CArray ispline>;

        $i8 = i12 + 1;

        $r42 = virtualinvoke $r41.<smetana.core.CArray: java.lang.Object get__(int)>($i8);

        $r44 = (h.ST_pointf) $r42;

        $r43 = r0.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r45 = virtualinvoke $r43.<smetana.core.CArray: java.lang.Object get__(int)>(i13);

        $r46 = (smetana.core.__struct__) $r45;

        virtualinvoke $r44.<h.ST_pointf: void ___(smetana.core.__struct__)>($r46);

        $r47 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r48 = $r47.<smetana.core.Z: smetana.core.CArray ispline>;

        $r49 = virtualinvoke $r48.<smetana.core.CArray: java.lang.Object get__(int)>(i12);

        $r51 = (h.ST_pointf) $r49;

        $r50 = r0.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r52 = virtualinvoke $r50.<smetana.core.CArray: java.lang.Object get__(int)>(i13);

        $r53 = (smetana.core.__struct__) $r52;

        virtualinvoke $r51.<h.ST_pointf: void ___(smetana.core.__struct__)>($r53);

        i12 = i12 + 3;

        i13 = i13 + 1;

        goto label3;

     label4:
        $r16 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r17 = $r16.<smetana.core.Z: smetana.core.CArray ispline>;

        $i6 = i12 + 1;

        $r18 = virtualinvoke $r17.<smetana.core.CArray: java.lang.Object get__(int)>($i6);

        $r20 = (h.ST_pointf) $r18;

        $r19 = r0.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r21 = virtualinvoke $r19.<smetana.core.CArray: java.lang.Object get__(int)>(i13);

        $r22 = (smetana.core.__struct__) $r21;

        virtualinvoke $r20.<h.ST_pointf: void ___(smetana.core.__struct__)>($r22);

        $r23 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r24 = $r23.<smetana.core.Z: smetana.core.CArray ispline>;

        $r25 = virtualinvoke $r24.<smetana.core.CArray: java.lang.Object get__(int)>(i12);

        $r27 = (h.ST_pointf) $r25;

        $r26 = r0.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r28 = virtualinvoke $r26.<smetana.core.CArray: java.lang.Object get__(int)>(i13);

        $r29 = (smetana.core.__struct__) $r28;

        virtualinvoke $r27.<h.ST_pointf: void ___(smetana.core.__struct__)>($r29);

        r30.<h.ST_Ppoly_t: int pn> = i3;

        $r31 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r32 = $r31.<smetana.core.Z: smetana.core.CArray ispline>;

        r30.<h.ST_Ppoly_t: smetana.core.CArray ps> = $r32;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ct6tszngugakbl42zkaqrt7p1", "make_polyline_");

        goto label8;

     label6:
        $r59 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ct6tszngugakbl42zkaqrt7p1", "make_polyline_");

        throw $r59;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
