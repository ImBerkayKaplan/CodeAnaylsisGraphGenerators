public class net.sourceforge.plantuml.braille.DriverTextBraille extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{

    public void <init>()
    {
        net.sourceforge.plantuml.braille.DriverTextBraille r0;

        r0 := @this: net.sourceforge.plantuml.braille.DriverTextBraille;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UText, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.braille.BrailleGrid)
    {
        net.sourceforge.plantuml.braille.BrailleGrid r0;
        double $d0, $d1, $d2, $d3, $d4, d5, d6, d7, d8;
        net.sourceforge.plantuml.ugraphic.UText r1;
        java.lang.String $r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.braille.BrailleChar r6;
        net.sourceforge.plantuml.braille.DriverTextBraille r7;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r8;
        net.sourceforge.plantuml.ugraphic.UParam r9;

        r7 := @this: net.sourceforge.plantuml.braille.DriverTextBraille;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UText;

        d5 := @parameter1: double;

        d6 := @parameter2: double;

        r8 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r9 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r0 := @parameter5: net.sourceforge.plantuml.braille.BrailleGrid;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.braille.BrailleGrid: double getQuanta()>();

        $d1 = $d0 * 3.0;

        d7 = d6 - $d1;

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.braille.BrailleGrid: double getQuanta()>();

        d8 = d5 + $d2;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UText: java.lang.String getText()>();

        $r3 = staticinvoke <net.sourceforge.plantuml.braille.BrailleCharFactory: java.util.List build(java.lang.String)>($r2);

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.braille.BrailleChar) $r5;

        virtualinvoke r6.<net.sourceforge.plantuml.braille.BrailleChar: void draw(net.sourceforge.plantuml.braille.BrailleGrid,double,double)>(r0, d8, d7);

        $d3 = virtualinvoke r0.<net.sourceforge.plantuml.braille.BrailleGrid: double getQuanta()>();

        $d4 = $d3 * 3.0;

        d8 = d8 + $d4;

        goto label1;

     label2:
        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.braille.DriverTextBraille r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.braille.BrailleGrid $r5;
        net.sourceforge.plantuml.ugraphic.UText $r6;

        r0 := @this: net.sourceforge.plantuml.braille.DriverTextBraille;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UText) r1;

        $r5 = (net.sourceforge.plantuml.braille.BrailleGrid) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.braille.DriverTextBraille: void draw(net.sourceforge.plantuml.ugraphic.UText,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.braille.BrailleGrid)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
