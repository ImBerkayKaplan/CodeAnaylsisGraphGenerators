public class net.sourceforge.plantuml.descdiagram.command.CommandLinkElement extends net.sourceforge.plantuml.command.SingleLineCommand2
{
    private static final java.lang.String KEY1;
    private static final java.lang.String KEY2;
    public static final java.lang.String LINE_STYLE;
    private static final java.lang.String LINE_STYLE_MUTILPLES;
    public static final java.lang.String STYLE_COLORS_MULTIPLES;

    public void <init>()
    {
        net.sourceforge.plantuml.descdiagram.command.CommandLinkElement r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;

        $r1 = staticinvoke <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r31;
        net.sourceforge.plantuml.command.regex.RegexOptional $r6, $r12, $r14, $r20;
        net.sourceforge.plantuml.graphic.color.ColorParser $r25;
        net.sourceforge.plantuml.command.regex.RegexConcat $r32;

        $r0 = class "Lnet/sourceforge/plantuml/descdiagram/command/CommandLinkElement;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[24];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.command.regex.RegexLeaf getGroup(java.lang.String)>("ENT1");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("FIRST_LABEL", "[%g]([^%g]+)[%g]");

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r7);

        $r2[3] = $r6;

        $r8 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("HEAD2", "(0\\)|<<|<_|[<^*+#0@)]|<\\|[\\|\\:]?|[%s]+o)?");

        $r2[5] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("BODY1", "([-=.~]+)");

        $r2[6] = $r10;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE1", "(?:\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*(?:(?:;(?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)*))\\])?");

        $r2[7] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("DIRECTION", "(left|right|up|down|le?|ri?|up?|do?)(?=[-=.~0()])");

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r13);

        $r2[8] = $r12;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("INSIDE", "(0|\\(0\\)|\\(0|0\\))(?=[-=.~])");

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r15);

        $r2[9] = $r14;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE2", "(?:\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)\\])?");

        $r2[10] = $r16;

        $r17 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r17.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("BODY2", "([-=.~]*)");

        $r2[11] = $r17;

        $r18 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r18.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("HEAD1", "(\\(0|>>|_>|[>^*+#0@(]|[\\:\\|]?\\|>|\\\\\\\\|o[%s]+)?");

        $r2[12] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[13] = $r19;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r21 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r21.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("SECOND_LABEL", "[%g]([^%g]+)[%g]");

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r21);

        $r2[14] = $r20;

        $r22 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[15] = $r22;

        $r23 = staticinvoke <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.command.regex.RegexLeaf getGroup(java.lang.String)>("ENT2");

        $r2[16] = $r23;

        $r24 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[17] = $r24;

        $r25 = staticinvoke <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r26 = virtualinvoke $r25.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r2[18] = $r26;

        $r27 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[19] = $r27;

        $r28 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r28.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREOTYPE", "(\\<\\<.*\\>\\>)?");

        $r2[20] = $r28;

        $r29 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[21] = $r29;

        $r30 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r30.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LABEL_LINK", "(?::[%s]*(.+))?");

        $r2[22] = $r30;

        $r31 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[23] = $r31;

        $r32 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r32;
    }

    private static net.sourceforge.plantuml.graphic.color.ColorParser color()
    {
        net.sourceforge.plantuml.graphic.color.ColorType $r0;
        net.sourceforge.plantuml.graphic.color.ColorParser $r1;

        $r0 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.ColorParser simpleColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r0);

        return $r1;
    }

    private java.lang.String getHead(net.sourceforge.plantuml.command.regex.RegexResult, java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, $r2, r4, r5;
        net.sourceforge.plantuml.descdiagram.command.CommandLinkElement r3;

        r3 := @this: net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;

        r0 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 := @parameter1: java.lang.String;

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>(r1, 0);

        r5 = staticinvoke <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String trimAndLowerCase(java.lang.String)>(r4);

        $r2 = virtualinvoke r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "");

        return $r2;
    }

    private net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.descdiagram.command.CommandLinkElement r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String r2, r3, r4, r5, $r6, $r7, $r8, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35;
        net.sourceforge.plantuml.cucadiagram.LinkDecor r9, r10;
        net.sourceforge.plantuml.cucadiagram.LinkType $r11, r12;

        r0 := @this: net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String getHead(net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r1, "HEAD1");

        r3 = specialinvoke r0.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String getHead(net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r1, "HEAD2");

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("(0");

        if $z0 == 0 goto label01;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE_CONNECT>;

        goto label15;

     label01:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("#");

        if $z1 == 0 goto label02;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor SQUARE>;

        goto label15;

     label02:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z2 == 0 goto label03;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE>;

        goto label15;

     label03:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("@");

        if $z3 == 0 goto label04;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE_FILL>;

        goto label15;

     label04:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("(");

        if $z4 == 0 goto label05;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor PARENTHESIS>;

        goto label15;

     label05:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(">");

        if $z5 == 0 goto label06;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor ARROW>;

        goto label15;

     label06:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z6 == 0 goto label07;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor COMPOSITION>;

        goto label15;

     label07:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("o");

        if $z7 == 0 goto label08;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor AGREGATION>;

        goto label15;

     label08:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("+");

        if $z8 == 0 goto label09;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor PLUS>;

        goto label15;

     label09:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("\\\\");

        if $z9 == 0 goto label10;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor HALF_ARROW>;

        goto label15;

     label10:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(">>");

        if $z10 == 0 goto label11;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor ARROW_TRIANGLE>;

        goto label15;

     label11:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("^");

        if $z11 == 0 goto label12;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor EXTENDS>;

        goto label15;

     label12:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(":|>");

        if $z12 == 0 goto label13;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor DEFINEDBY>;

        goto label15;

     label13:
        $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("||>");

        if $z13 == 0 goto label14;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor REDEFINES>;

        goto label15;

     label14:
        $z14 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("|>");

        if $z14 == 0 goto label15;

        r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor EXTENDS>;

     label15:
        $z33 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("0)");

        if $z33 == 0 goto label16;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE_CONNECT>;

        goto label29;

     label16:
        $z15 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("#");

        if $z15 == 0 goto label17;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor SQUARE>;

        goto label29;

     label17:
        $z16 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z16 == 0 goto label18;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE>;

        goto label29;

     label18:
        $z17 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("@");

        if $z17 == 0 goto label19;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE_FILL>;

        goto label29;

     label19:
        $z18 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(")");

        if $z18 == 0 goto label20;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor PARENTHESIS>;

        goto label29;

     label20:
        $z19 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("<");

        if $z19 == 0 goto label21;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor ARROW>;

        goto label29;

     label21:
        $z20 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z20 == 0 goto label22;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor COMPOSITION>;

        goto label29;

     label22:
        $z21 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("o");

        if $z21 == 0 goto label23;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor AGREGATION>;

        goto label29;

     label23:
        $z22 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("+");

        if $z22 == 0 goto label24;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor PLUS>;

        goto label29;

     label24:
        $z23 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("<<");

        if $z23 == 0 goto label25;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor ARROW_TRIANGLE>;

        goto label29;

     label25:
        $z24 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("^");

        if $z24 == 0 goto label26;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor EXTENDS>;

        goto label29;

     label26:
        $z25 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("<|:");

        if $z25 == 0 goto label27;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor DEFINEDBY>;

        goto label29;

     label27:
        $z26 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("<||");

        if $z26 == 0 goto label28;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor REDEFINES>;

        goto label29;

     label28:
        $z27 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("<|");

        if $z27 == 0 goto label29;

        r10 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor EXTENDS>;

     label29:
        $r11 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        specialinvoke $r11.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>(r9, r10);

        r12 = $r11;

        r4 = specialinvoke r0.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String getQueue(net.sourceforge.plantuml.command.regex.RegexResult)>(r1);

        $z34 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z34 == 0 goto label30;

        r12 = virtualinvoke $r11.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType goDashed()>();

        goto label32;

     label30:
        $z28 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("~");

        if $z28 == 0 goto label31;

        r12 = virtualinvoke $r11.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType goDotted()>();

        goto label32;

     label31:
        $z29 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("=");

        if $z29 == 0 goto label32;

        r12 = virtualinvoke $r11.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType goBold()>();

     label32:
        r5 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("INSIDE", 0);

        $r13 = "0";

        $z35 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z35 == 0 goto label33;

        r12 = virtualinvoke r12.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType withMiddleCircle()>();

        goto label36;

     label33:
        $r6 = "0)";

        $z30 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z30 == 0 goto label34;

        r12 = virtualinvoke r12.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType withMiddleCircleCircled1()>();

        goto label36;

     label34:
        $r7 = "(0";

        $z31 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z31 == 0 goto label35;

        r12 = virtualinvoke r12.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType withMiddleCircleCircled2()>();

        goto label36;

     label35:
        $r8 = "(0)";

        $z32 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z32 == 0 goto label36;

        r12 = virtualinvoke r12.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType withMiddleCircleCircled()>();

     label36:
        return r12;
    }

    private static java.lang.String trimAndLowerCase(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        $r1 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>(r0);

        $r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goLowerCase(java.lang.String)>($r1);

        return $r2;
    }

    private net.sourceforge.plantuml.Direction getDirection(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, $r4;
        net.sourceforge.plantuml.Direction $r2, $r5;
        net.sourceforge.plantuml.descdiagram.command.CommandLinkElement r3;

        r3 := @this: net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;

        r0 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("DIRECTION", 0);

        if r1 != null goto label1;

        $r4 = specialinvoke r3.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String getQueue(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        $r5 = staticinvoke <net.sourceforge.plantuml.StringUtils: net.sourceforge.plantuml.Direction getQueueDirection(java.lang.String)>($r4);

        return $r5;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: net.sourceforge.plantuml.Direction getQueueDirection(java.lang.String)>(r1);

        return $r2;
    }

    private java.lang.String getQueue(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        java.lang.StringBuilder $r0, $r3, $r5;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2, $r4, $r6;
        net.sourceforge.plantuml.descdiagram.command.CommandLinkElement r7;

        r7 := @this: net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BODY1", 0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BODY2", 0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static net.sourceforge.plantuml.command.regex.RegexLeaf getGroup(java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>(r1, "([%pLN_.]+|\\(\\)[%s]*[%pLN_.]+|\\(\\)[%s]*[%g][^%g]+[%g]|:[^:]+:|(?!\\[\\*\\])\\[[^\\[\\]]+\\]|\\((?!\\*\\))[^)]+\\))");

        return $r0;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.descdiagram.DescriptionDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, $r7, $r10, $r20, r35, $r41, $r43, $r44, $r45, $r46, $r60, $r61;
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r3;
        net.sourceforge.plantuml.cucadiagram.Ident r4, r5, $r6, r8, $r9, r11, $r29, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        net.sourceforge.plantuml.cucadiagram.Code r12, r13, $r27, $r28, $r33, $r34;
        net.sourceforge.plantuml.descdiagram.command.CommandLinkElement r14;
        net.sourceforge.plantuml.cucadiagram.LinkType r15;
        net.sourceforge.plantuml.Direction r16, $r17, $r26, $r31, $r51;
        net.sourceforge.plantuml.descdiagram.command.Labels $r18;
        net.sourceforge.plantuml.cucadiagram.Stereotype r21;
        net.sourceforge.plantuml.graphic.color.Colors $r22, $r25, $r57;
        net.sourceforge.plantuml.ISkinParam $r23, $r47, $r53, $r55, $r58;
        net.sourceforge.plantuml.ColorParam $r24;
        net.sourceforge.plantuml.LineLocation r32;
        net.sourceforge.plantuml.cucadiagram.IGroup $r36, $r38;
        net.sourceforge.plantuml.cucadiagram.IEntity r37, r39;
        net.sourceforge.plantuml.cucadiagram.Link $r40, r49;
        net.sourceforge.plantuml.cucadiagram.Display $r42;
        int $i0;
        net.sourceforge.plantuml.style.StyleBuilder $r48;
        net.sourceforge.plantuml.cucadiagram.LinkArrow $r50;
        net.sourceforge.plantuml.graphic.color.ColorParser $r52;
        net.sourceforge.plantuml.api.ThemeStyle $r54, $r59;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r56;
        net.sourceforge.plantuml.command.CommandExecutionResult $r62;

        r14 := @this: net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;

        r3 := @parameter0: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        r32 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT1", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT2", 0);

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildFullyQualified(java.lang.String)>(r1);

        r5 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildFullyQualified(java.lang.String)>(r2);

        $r6 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident empty()>();

        $r7 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: java.lang.String getNamespaceSeparator()>();

        r8 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident add(java.lang.String,java.lang.String)>(r1, $r7);

        $r9 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident empty()>();

        $r10 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: java.lang.String getNamespaceSeparator()>();

        r11 = virtualinvoke $r9.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident add(java.lang.String,java.lang.String)>(r2, $r10);

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean V1972()>();

        if $z0 == 0 goto label01;

        $r33 = r4;

        goto label02;

     label01:
        $r33 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r1);

     label02:
        r12 = $r33;

        $z1 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean V1972()>();

        if $z1 == 0 goto label03;

        $r34 = r5;

        goto label04;

     label03:
        $r34 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r2);

     label04:
        r13 = $r34;

        r15 = specialinvoke r14.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        r16 = specialinvoke r14.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.Direction getDirection(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        $r17 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r16 == $r17 goto label05;

        $r31 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if r16 != $r31 goto label06;

     label05:
        r35 = "-";

        goto label07;

     label06:
        r35 = specialinvoke r14.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String getQueue(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

     label07:
        $r18 = new net.sourceforge.plantuml.descdiagram.command.Labels;

        specialinvoke $r18.<net.sourceforge.plantuml.descdiagram.command.Labels: void <init>(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        $z2 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean isGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r12);

        if $z2 == 0 goto label12;

        $z4 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean isGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r13);

        if $z4 == 0 goto label12;

        $z5 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean V1972()>();

        if $z5 == 0 goto label08;

        $r30 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r1);

        $r36 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupStrict(net.sourceforge.plantuml.cucadiagram.Ident)>($r30);

        goto label09;

     label08:
        $r27 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r1);

        $r36 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroup(net.sourceforge.plantuml.cucadiagram.Code)>($r27);

     label09:
        r37 = $r36;

        $z6 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean V1972()>();

        if $z6 == 0 goto label10;

        $r29 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r2);

        $r38 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupStrict(net.sourceforge.plantuml.cucadiagram.Ident)>($r29);

        goto label11;

     label10:
        $r28 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r2);

        $r38 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroup(net.sourceforge.plantuml.cucadiagram.Code)>($r28);

     label11:
        r39 = $r38;

        goto label13;

     label12:
        r37 = specialinvoke r14.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.cucadiagram.IEntity getFoo1(net.sourceforge.plantuml.descdiagram.DescriptionDiagram,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Ident)>(r3, r12, r4, r8);

        r39 = specialinvoke r14.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.cucadiagram.IEntity getFoo1(net.sourceforge.plantuml.descdiagram.DescriptionDiagram,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Ident)>(r3, r13, r5, r11);

     label13:
        $r40 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r41 = virtualinvoke $r18.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String getLabelLink()>();

        $r42 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r41);

        $i0 = virtualinvoke r35.<java.lang.String: int length()>();

        $r43 = virtualinvoke $r18.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String getFirstLabel()>();

        $r44 = virtualinvoke $r18.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String getSecondLabel()>();

        $r45 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: java.lang.String getLabeldistance()>();

        $r46 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: java.lang.String getLabelangle()>();

        $r47 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r48 = interfaceinvoke $r47.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r40.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,net.sourceforge.plantuml.style.StyleBuilder)>(r37, r39, r15, $r42, $i0, $r43, $r44, $r45, $r46, $r48);

        r49 = $r40;

        $r50 = virtualinvoke $r18.<net.sourceforge.plantuml.descdiagram.command.Labels: net.sourceforge.plantuml.cucadiagram.LinkArrow getLinkArrow()>();

        virtualinvoke $r40.<net.sourceforge.plantuml.cucadiagram.Link: void setLinkArrow(net.sourceforge.plantuml.cucadiagram.LinkArrow)>($r50);

        $r51 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r16 == $r51 goto label14;

        $r26 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction UP>;

        if r16 != $r26 goto label15;

     label14:
        r49 = virtualinvoke $r40.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Link getInv()>();

     label15:
        $r52 = staticinvoke <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r53 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r54 = interfaceinvoke $r53.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r55 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r56 = interfaceinvoke $r55.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r57 = virtualinvoke $r52.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.Colors getColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r54, r0, $r56);

        virtualinvoke r49.<net.sourceforge.plantuml.cucadiagram.Link: void setColors(net.sourceforge.plantuml.graphic.color.Colors)>($r57);

        $r58 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r59 = interfaceinvoke $r58.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r60 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("ARROW_STYLE", 0);

        virtualinvoke r49.<net.sourceforge.plantuml.cucadiagram.Link: void applyStyle(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r59, $r60);

        $r61 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREOTYPE", 0);

        if $r61 == null goto label17;

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREOTYPE", 0);

        r21 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>($r20);

        $z3 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z3 == 0 goto label16;

        virtualinvoke r49.<net.sourceforge.plantuml.cucadiagram.Link: void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)>(r21);

        goto label17;

     label16:
        $r22 = virtualinvoke r49.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r23 = virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r24 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam arrow>;

        $r25 = virtualinvoke $r22.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors applyStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r21, $r23, $r24);

        virtualinvoke r49.<net.sourceforge.plantuml.cucadiagram.Link: void setColors(net.sourceforge.plantuml.graphic.color.Colors)>($r25);

     label17:
        virtualinvoke r3.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: void addLink(net.sourceforge.plantuml.cucadiagram.Link)>(r49);

        $r62 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r62;
    }

    private net.sourceforge.plantuml.cucadiagram.IEntity getFoo1(net.sourceforge.plantuml.descdiagram.DescriptionDiagram, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.sourceforge.plantuml.cucadiagram.Code r1, $r23, $r31;
        java.lang.String r2, $r3, r4;
        int $i0;
        char c1, $c2;
        net.sourceforge.plantuml.cucadiagram.Ident r5, r8, r29, r30;
        net.sourceforge.plantuml.descdiagram.command.CommandLinkElement r7;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r9, $r14, $r19, $r22, $r26;
        net.sourceforge.plantuml.ISkinParam $r10, $r16;
        net.sourceforge.plantuml.ComponentStyle $r11;
        net.sourceforge.plantuml.graphic.USymbol r12, $r18, $r20, $r24;
        net.sourceforge.plantuml.cucadiagram.LeafType $r13, $r15, $r21, $r25;
        net.sourceforge.plantuml.skin.ActorStyle $r17;
        net.sourceforge.plantuml.cucadiagram.IGroup $r27, $r28;

        r7 := @this: net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;

        r0 := @parameter0: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r29 := @parameter2: net.sourceforge.plantuml.cucadiagram.Ident;

        r8 := @parameter3: net.sourceforge.plantuml.cucadiagram.Ident;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean V1972()>();

        if $z0 != 0 goto label01;

        $z5 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean isGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r1);

        if $z5 == 0 goto label01;

        $r28 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r1);

        return $r28;

     label01:
        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean V1972()>();

        if $z1 == 0 goto label02;

        $z4 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean isGroupStrict(net.sourceforge.plantuml.cucadiagram.Ident)>(r29);

        if $z4 == 0 goto label02;

        $r27 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupStrict(net.sourceforge.plantuml.cucadiagram.Ident)>(r29);

        return $r27;

     label02:
        r2 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $r3 = virtualinvoke r29.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getLast()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("()");

        if $z2 == 0 goto label03;

        r30 = virtualinvoke r29.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident removeStartingParenthesis()>();

        $r23 = virtualinvoke r30.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Code toCode(net.sourceforge.plantuml.cucadiagram.CucaDiagram)>(r0);

        $r25 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DESCRIPTION>;

        $r24 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol INTERFACE>;

        $r26 = specialinvoke r7.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf1972(net.sourceforge.plantuml.descdiagram.DescriptionDiagram,net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol,net.sourceforge.plantuml.cucadiagram.Ident)>(r0, r30, $r23, $r25, $r24, r8);

        return $r26;

     label03:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 2 goto label04;

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        goto label05;

     label04:
        $c2 = 0;

     label05:
        c1 = $c2;

        r4 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>(r2, "\"([:");

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildFullyQualified(java.lang.String)>(r4);

        $z3 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean V1972()>();

        if $z3 == 0 goto label06;

        $r31 = r5;

        goto label07;

     label06:
        $r31 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r4);

     label07:
        if c1 != 40 goto label08;

        $r21 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType USECASE>;

        $r20 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol USECASE>;

        $r22 = specialinvoke r7.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf1972(net.sourceforge.plantuml.descdiagram.DescriptionDiagram,net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol,net.sourceforge.plantuml.cucadiagram.Ident)>(r0, r5, $r31, $r21, $r20, r8);

        return $r22;

     label08:
        if c1 != 58 goto label09;

        $r15 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DESCRIPTION>;

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.skin.ActorStyle actorStyle()>();

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.skin.ActorStyle: net.sourceforge.plantuml.graphic.USymbol toUSymbol()>();

        $r19 = specialinvoke r7.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf1972(net.sourceforge.plantuml.descdiagram.DescriptionDiagram,net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol,net.sourceforge.plantuml.cucadiagram.Ident)>(r0, r5, $r31, $r15, $r18, r8);

        return $r19;

     label09:
        if c1 != 91 goto label10;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ComponentStyle componentStyle()>();

        r12 = virtualinvoke $r11.<net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.graphic.USymbol toUSymbol()>();

        $r13 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DESCRIPTION>;

        $r14 = specialinvoke r7.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf1972(net.sourceforge.plantuml.descdiagram.DescriptionDiagram,net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol,net.sourceforge.plantuml.cucadiagram.Ident)>(r0, r5, $r31, $r13, r12, r8);

        return $r14;

     label10:
        $r9 = specialinvoke r7.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf1972(net.sourceforge.plantuml.descdiagram.DescriptionDiagram,net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol,net.sourceforge.plantuml.cucadiagram.Ident)>(r0, r29, r1, null, null, r8);

        return $r9;
    }

    private net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf1972(net.sourceforge.plantuml.descdiagram.DescriptionDiagram, net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol, net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r0;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, r6;
        net.sourceforge.plantuml.cucadiagram.Code r2;
        net.sourceforge.plantuml.cucadiagram.LeafType r3;
        net.sourceforge.plantuml.graphic.USymbol r4;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r5, $r9;
        int $i0;
        net.sourceforge.plantuml.descdiagram.command.CommandLinkElement r8;

        r8 := @this: net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;

        r0 := @parameter0: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.Ident;

        r2 := @parameter2: net.sourceforge.plantuml.cucadiagram.Code;

        r3 := @parameter3: net.sourceforge.plantuml.cucadiagram.LeafType;

        r4 := @parameter4: net.sourceforge.plantuml.graphic.USymbol;

        r6 := @parameter5: net.sourceforge.plantuml.cucadiagram.Ident;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: boolean V1972()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r6.<net.sourceforge.plantuml.cucadiagram.Ident: int size()>();

        if $i0 != 1 goto label1;

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        goto label2;

     label1:
        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafStrict(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

     label2:
        if $r9 == null goto label3;

        return $r9;

     label3:
        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r1, r2, r3, r4);

        return $r5;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.descdiagram.command.CommandLinkElement r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.descdiagram.DescriptionDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.descdiagram.DescriptionDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String STYLE_COLORS_MULTIPLES> = "-\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*(?:(?:;(?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)*)*)\\]->";

        <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String LINE_STYLE_MUTILPLES> = "(?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*(?:(?:;(?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)*)";

        <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String LINE_STYLE> = "(?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*";

        <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String KEY2> = ",dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+";

        <net.sourceforge.plantuml.descdiagram.command.CommandLinkElement: java.lang.String KEY1> = "dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+";

        return;
    }
}
