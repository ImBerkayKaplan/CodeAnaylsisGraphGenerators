public class gen.lib.label.node__c extends java.lang.Object
{

    public void <init>()
    {
        gen.lib.label.node__c r0;

        r0 := @this: gen.lib.label.node__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static h.ST_Node_t___ RTreeNewNode(h.ST_RTree)
    {
        h.ST_RTree r0;
        int $i0, $i1;
        h.ST_Node_t___ $r1;
        java.lang.Throwable $r4;

        r0 := @parameter0: h.ST_RTree;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9uj7ni1m6q6drtoh56w82d6m4", "RTreeNewNode");

     label1:
        $i0 = r0.<h.ST_RTree: int NodeCount>;

        $i1 = $i0 + 1;

        r0.<h.ST_RTree: int NodeCount> = $i1;

        $r1 = new h.ST_Node_t___;

        specialinvoke $r1.<h.ST_Node_t___: void <init>()>();

        staticinvoke <gen.lib.label.node__c: void InitNode(h.ST_Node_t___)>($r1);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9uj7ni1m6q6drtoh56w82d6m4", "RTreeNewNode");

        return $r1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9uj7ni1m6q6drtoh56w82d6m4", "RTreeNewNode");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void InitNode(h.ST_Node_t___)
    {
        h.ST_Node_t___ r0;
        h.ST_Branch_t[] $r1;
        h.ST_Branch_t $r2;
        java.lang.Throwable $r3;
        int i0;

        r0 := @parameter0: h.ST_Node_t___;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("4qk9wkm05q2pwf20ud6g2tufg", "InitNode");

     label1:
        r0.<h.ST_Node_t___: int count> = 0;

        r0.<h.ST_Node_t___: int level> = -1;

        i0 = 0;

     label2:
        if i0 >= 64 goto label3;

        $r1 = r0.<h.ST_Node_t___: h.ST_Branch_t[] branch>;

        $r2 = $r1[i0];

        staticinvoke <gen.lib.label.node__c: void InitBranch(h.ST_Branch_t)>($r2);

        i0 = i0 + 1;

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4qk9wkm05q2pwf20ud6g2tufg", "InitNode");

        goto label5;

     label4:
        $r3 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4qk9wkm05q2pwf20ud6g2tufg", "InitNode");

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void InitBranch(h.ST_Branch_t)
    {
        h.ST_Branch_t r0;
        h.ST_Rect_t $r1;
        java.lang.Throwable $r2;

        r0 := @parameter0: h.ST_Branch_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("ruhxixxei7au9z1iaj0zggwo", "InitBranch");

     label1:
        $r1 = r0.<h.ST_Branch_t: h.ST_Rect_t rect>;

        staticinvoke <gen.lib.label.rectangle__c: void InitRect(h.ST_Rect_t)>($r1);

        r0.<h.ST_Branch_t: h.ST_Node_t___or_object_t child> = null;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ruhxixxei7au9z1iaj0zggwo", "InitBranch");

        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ruhxixxei7au9z1iaj0zggwo", "InitBranch");

        throw $r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static h.ST_Rect_t NodeCover(h.ST_Node_t___)
    {
        h.ST_Rect_t $r0, $r9, $r10, $r13;
        h.ST_Node_t___ r3;
        h.ST_Branch_t[] $r4, $r7, $r11;
        h.ST_Branch_t $r5, $r8, $r12;
        h.ST_Node_t___or_object_t $r6;
        java.lang.Throwable $r14;
        boolean z0;
        int i0;

        r3 := @parameter0: h.ST_Node_t___;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("42vjqe8n5yeq2jjby00xzrotk", "NodeCover");

     label1:
        $r0 = new h.ST_Rect_t;

        specialinvoke $r0.<h.ST_Rect_t: void <init>()>();

        staticinvoke <gen.lib.label.rectangle__c: void InitRect(h.ST_Rect_t)>($r0);

        z0 = 1;

        i0 = 0;

     label2:
        if i0 >= 64 goto label5;

        $r4 = r3.<h.ST_Node_t___: h.ST_Branch_t[] branch>;

        $r5 = $r4[i0];

        $r6 = $r5.<h.ST_Branch_t: h.ST_Node_t___or_object_t child>;

        if $r6 == null goto label4;

        if z0 == 0 goto label3;

        $r11 = r3.<h.ST_Node_t___: h.ST_Branch_t[] branch>;

        $r12 = $r11[i0];

        $r13 = $r12.<h.ST_Branch_t: h.ST_Rect_t rect>;

        virtualinvoke $r0.<h.ST_Rect_t: void ___(smetana.core.__struct__)>($r13);

        z0 = 0;

        goto label4;

     label3:
        $r7 = r3.<h.ST_Node_t___: h.ST_Branch_t[] branch>;

        $r8 = $r7[i0];

        $r9 = $r8.<h.ST_Branch_t: h.ST_Rect_t rect>;

        $r10 = staticinvoke <gen.lib.label.rectangle__c: h.ST_Rect_t CombineRect(h.ST_Rect_t,h.ST_Rect_t)>($r0, $r9);

        virtualinvoke $r0.<h.ST_Rect_t: void ___(smetana.core.__struct__)>($r10);

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("42vjqe8n5yeq2jjby00xzrotk", "NodeCover");

        return $r0;

     label6:
        $r14 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("42vjqe8n5yeq2jjby00xzrotk", "NodeCover");

        throw $r14;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static int PickBranch(h.ST_Rect_t, h.ST_Node_t___)
    {
        h.ST_Node_t___ r0;
        h.ST_Branch_t[] $r1, $r5;
        h.ST_Branch_t $r2, $r6;
        h.ST_Node_t___or_object_t $r3;
        h.ST_Rect_t $r4, r7, $r8, r12;
        int $i0, i1, i2, i3, i4, i5, i6;
        java.lang.Throwable $r9;
        boolean z0;

        r7 := @parameter0: h.ST_Rect_t;

        r0 := @parameter1: h.ST_Node_t___;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bek56v2skz6jfvw4uggy2h5w3", "PickBranch");

     label1:
        z0 = 1;

        i1 = 0;

        i2 = 0;

        i3 = 0;

        i4 = 0;

     label2:
        if i4 >= 64 goto label6;

        $r1 = r0.<h.ST_Node_t___: h.ST_Branch_t[] branch>;

        $r2 = $r1[i4];

        $r3 = $r2.<h.ST_Branch_t: h.ST_Node_t___or_object_t child>;

        if $r3 == null goto label5;

        $r4 = new h.ST_Rect_t;

        specialinvoke $r4.<h.ST_Rect_t: void <init>()>();

        $r5 = r0.<h.ST_Node_t___: h.ST_Branch_t[] branch>;

        $r6 = $r5[i4];

        r12 = $r6.<h.ST_Branch_t: h.ST_Rect_t rect>;

        i5 = staticinvoke <gen.lib.label.rectangle__c: int RectArea(h.ST_Rect_t)>(r12);

        $r8 = staticinvoke <gen.lib.label.rectangle__c: h.ST_Rect_t CombineRect(h.ST_Rect_t,h.ST_Rect_t)>(r7, r12);

        virtualinvoke $r4.<h.ST_Rect_t: void ___(smetana.core.__struct__)>($r8);

        $i0 = staticinvoke <gen.lib.label.rectangle__c: int RectArea(h.ST_Rect_t)>($r4);

        i6 = $i0 - i5;

        if i6 < i1 goto label3;

        if z0 == 0 goto label4;

     label3:
        i3 = i4;

        i2 = i5;

        i1 = i6;

        z0 = 0;

        goto label5;

     label4:
        if i6 != i1 goto label5;

        if i5 >= i2 goto label5;

        i3 = i4;

        i2 = i5;

        i1 = i6;

     label5:
        i4 = i4 + 1;

        goto label2;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bek56v2skz6jfvw4uggy2h5w3", "PickBranch");

        return i3;

     label7:
        $r9 := @caughtexception;

     label8:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bek56v2skz6jfvw4uggy2h5w3", "PickBranch");

        throw $r9;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static int AddBranch(h.ST_RTree, h.ST_Branch_t, h.ST_Node_t___, h.ST_Node_t___[])
    {
        h.ST_Node_t___ r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        h.ST_RTree r1;
        h.ST_Branch_t r2, $r10, $r13;
        h.ST_Node_t___[] r3;
        h.ST_Branch_t[] $r9, $r12;
        h.ST_Node_t___or_object_t $r11;
        java.lang.Throwable $r14;

        r1 := @parameter0: h.ST_RTree;

        r2 := @parameter1: h.ST_Branch_t;

        r0 := @parameter2: h.ST_Node_t___;

        r3 := @parameter3: h.ST_Node_t___[];

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("2njctcrpeff95ysmv9ji34x4s", "AddBranch");

     label01:
        $i0 = r0.<h.ST_Node_t___: int count>;

        if $i0 >= 64 goto label05;

        i7 = 0;

     label02:
        if i7 >= 64 goto label04;

        $r9 = r0.<h.ST_Node_t___: h.ST_Branch_t[] branch>;

        $r10 = $r9[i7];

        $r11 = $r10.<h.ST_Branch_t: h.ST_Node_t___or_object_t child>;

        if $r11 != null goto label03;

        $r12 = r0.<h.ST_Node_t___: h.ST_Branch_t[] branch>;

        $r13 = $r12[i7];

        virtualinvoke $r13.<h.ST_Branch_t: void ___(smetana.core.__struct__)>(r2);

        $i5 = r0.<h.ST_Node_t___: int count>;

        $i6 = $i5 + 1;

        r0.<h.ST_Node_t___: int count> = $i6;

        goto label04;

     label03:
        i7 = i7 + 1;

        goto label02;

     label04:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2njctcrpeff95ysmv9ji34x4s", "AddBranch");

        return 0;

     label05:
        $i1 = r1.<h.ST_RTree: int StatFlag>;

        if $i1 == 0 goto label06;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2y8kv6b3ysrr61q7tqn76rhhc");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dn4oynmx9ugizzs5pkxiyptbi");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5c97f6vfxny0zz35l2bu4maox");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2u8wpa4w1q7rg14t07bny6p8i");

     label06:
        staticinvoke <gen.lib.label.split_q__c: void SplitNode(h.ST_RTree,h.ST_Node_t___,h.ST_Branch_t,h.ST_Node_t___[])>(r1, r0, r2, r3);

        $i2 = r0.<h.ST_Node_t___: int level>;

        if $i2 != 0 goto label07;

        $i3 = r1.<h.ST_RTree: int LeafCount>;

        $i4 = $i3 + 1;

        r1.<h.ST_RTree: int LeafCount> = $i4;

        goto label08;

     label07:
        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6tkfiebspy7ecivrzb3l5y7jd");

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2njctcrpeff95ysmv9ji34x4s", "AddBranch");

        return 1;

     label09:
        $r14 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2njctcrpeff95ysmv9ji34x4s", "AddBranch");

        throw $r14;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void DisconBranch(h.ST_Node_t___, int)
    {
        h.ST_Node_t___ r0;
        int i0, $i1, $i2;
        h.ST_Branch_t[] $r1;
        h.ST_Branch_t $r2;
        java.lang.Throwable $r3;

        r0 := @parameter0: h.ST_Node_t___;

        i0 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("eqzamflj58f43cflwns9cemnk", "DisconBranch");

     label1:
        $r1 = r0.<h.ST_Node_t___: h.ST_Branch_t[] branch>;

        $r2 = $r1[i0];

        staticinvoke <gen.lib.label.node__c: void InitBranch(h.ST_Branch_t)>($r2);

        $i1 = r0.<h.ST_Node_t___: int count>;

        $i2 = $i1 - 1;

        r0.<h.ST_Node_t___: int count> = $i2;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("eqzamflj58f43cflwns9cemnk", "DisconBranch");

        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("eqzamflj58f43cflwns9cemnk", "DisconBranch");

        throw $r3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
