public class gen.lib.common.input__c extends java.lang.Object
{
    static smetana.core.CString[] rankname;
    static int[] rankcode;
    static smetana.core.CString[] fontnamenames;
    static int[] fontnamecodes;

    public void <init>()
    {
        gen.lib.common.input__c r0;

        r0 := @this: gen.lib.common.input__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean getdoubles2ptf(h.ST_Agraph_s, smetana.core.CString, h.ST_pointf)
    {
        h.ST_Agraph_s r0;
        smetana.core.CString r1, $r2;
        java.lang.Throwable $r19;
        h.ST_pointf r21;

        r0 := @parameter0: h.ST_Agraph_s;

        r1 := @parameter1: smetana.core.CString;

        r21 := @parameter2: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("72no6ayfvjinlnupyn5jlmayg", "getdoubles2ptf");

     label1:
        $r2 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, r1);

        if $r2 == null goto label2;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("21b2kes0vrizyai71yj9e2os3");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9wua6uiybfvqd70huuo0yatcf");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8z2huopqt4m1rvfcd7vqatka4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cil4j0n3iq35gr2pfewi2qawz");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9qnr8qmbz7pf3mmpebux0p08m");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dqyb6drzg8ig5ecb31fq5c1d4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8k75h069sv2k9b6tgz77dscwd");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8wtaqjit9awt7xd08vuifknry");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("705372l4htjtcvnq97l7i54g8");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4n9k1twwfmxyet8tokr7xnktj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8ui53rmpq7ao1p4yin0xqzszj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1rflva1x66uhyqxr5zbpcsgnh");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("72no6ayfvjinlnupyn5jlmayg", "getdoubles2ptf");

        return 0;

     label3:
        $r19 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("72no6ayfvjinlnupyn5jlmayg", "getdoubles2ptf");

        throw $r19;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static int findCharset(h.ST_Agraph_s)
    {
        java.lang.Throwable $r0;
        h.ST_Agraph_s r2;

        r2 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9t08dr2ks9qz1pyfz99awla6x", "findCharset");

     label1:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9t08dr2ks9qz1pyfz99awla6x", "findCharset");

        return 0;

     label2:
        $r0 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9t08dr2ks9qz1pyfz99awla6x", "findCharset");

        throw $r0;

        catch java.lang.Throwable from label1 to label1 with label2;
    }

    public static void setRatio(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        smetana.core.CString $r1, $r2;
        char $c0;
        java.lang.Throwable $r30;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("3bnmjpvynh1j9oh2p2vi0vh2m", "setRatio");

     label1:
        $r1 = new smetana.core.CString;

        specialinvoke $r1.<smetana.core.CString: void <init>(java.lang.String)>("ratio");

        $r2 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r1);

        if $r2 == null goto label2;

        $c0 = virtualinvoke $r2.<smetana.core.CString: char charAt(int)>(0);

        if $c0 == 0 goto label2;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7rk995hpmaqbbasmi40mqg0yw");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2v5u3irq50r1n2ccuna0y09lk");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("3jv8xrrloj92axkpkgolzwgo6");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8bdbsrt9sk4hnj3wm6z100qm");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ai3czg6gaaxspsmndknpyvuiu");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("f3lyz2cejs6yn5fyckhn7ba1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1v3jyjziibgnha1glbymorwg1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("coprfqf41n6byzz3nfneke6a");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ai3czg6gaaxspsmndknpyvuiu");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2fzjr952o6hmcz3ad5arl2n8d");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5s06nikh994hgncpwni2p4rwq");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("eanijnkdjj1f6q7su4gmmijpj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ai3czg6gaaxspsmndknpyvuiu");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8jntw084f69528np3kisw5ioc");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("105p0jwfnsptmrweig5mhpkn9");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("eknfh3axjhorf2rfb914hdgbd");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ai3czg6gaaxspsmndknpyvuiu");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1drv0xz8hp34qnf72b4jpprg2");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("e4fr8djxwn615yr0rj46vtdbd");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("43a0ik2dkpg3y58orisgkn32q");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("azv56xi8njootl2n9l5bm1udc");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ch5o67mezsw0v6iwxylb98myn");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ai3czg6gaaxspsmndknpyvuiu");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3bnmjpvynh1j9oh2p2vi0vh2m", "setRatio");

        goto label5;

     label3:
        $r30 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3bnmjpvynh1j9oh2p2vi0vh2m", "setRatio");

        throw $r30;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void graph_init(h.ST_Agraph_s, boolean)
    {
        h.ST_Agraph_s r0;
        h.ST_layout_t $r1, $r117, $r121, $r127, $r128, $r129, $r130, $r144, $r155, $r157, $r160, $r162, $r180;
        smetana.core.CString $r2, $r3, $r13, $r14, $r15, $r16, $r17, $r18, $r119, $r120, $r122, $r124, $r125, $r131, $r138, $r139, $r146, $r147, r149, r152, $r156, $r159, $r163, $r164, $r165, $r166, $r170, r171, $r175, r176, $r181, $r182, r183;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int $i1, $i2, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        h.ST_Agsym_s $r11, $r12, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r86, $r88, $r90, $r92, $r94, $r96, $r98, $r100, $r102, $r104, $r106, $r108, $r110, $r112, $r114, $r116, $r126, $r145, $r150, $r151, $r186, $r188, $r190, $r192, $r194, $r196, $r198, $r200, $r202, $r204, $r206, $r208, $r210, $r212;
        smetana.core.Z $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r73, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89, $r91, $r93, $r95, $r97, $r99, $r101, $r103, $r105, $r107, $r109, $r111, $r113, $r115, $r123, $r172, $r177, $r178, $r179, $r184, $r185, $r187, $r189, $r191, $r193, $r195, $r197, $r199, $r201, $r203, $r205, $r207, $r209, $r211;
        smetana.core.__ptr__ $r118;
        char $c3, $c4, $c5, $c6, $c7;
        double $d0, $d1, d2, d3;
        byte $b9;
        java.lang.Throwable $r140;
        smetana.core.CString[] $r153, $r173;
        int[] $r154, $r174;
        h.ST_pointf $r158, $r161;

        r0 := @parameter0: h.ST_Agraph_s;

        z0 := @parameter1: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8gzdr3oil2d0e2o7m84wsszfg", "graph_init");

     label01:
        $r1 = new h.ST_layout_t;

        specialinvoke $r1.<h.ST_layout_t: void <init>()>();

        staticinvoke <smetana.core.Macro: void GD_drawing(h.ST_Agraph_s,h.ST_layout_t)>(r0, $r1);

        $r2 = new smetana.core.CString;

        specialinvoke $r2.<smetana.core.CString: void <init>(java.lang.String)>("fontpath");

        $r3 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r2);

        if $r3 != null goto label02;

        $r138 = new smetana.core.CString;

        specialinvoke $r138.<smetana.core.CString: void <init>(java.lang.String)>("DOTFONTPATH");

        $r139 = staticinvoke <smetana.core.JUtils: smetana.core.CString getenv(smetana.core.CString)>($r138);

        if $r139 == null goto label03;

     label02:
        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("81bz3jcukzyotxiqgrlhn9cbq");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6jgl7atk1m9yeam4auh127azw");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dyk0vc64gdzy1uwvsc2jqnjdw");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8dywgree8jdjmj2ll2whbekhe");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("d9ej6bo2s49vpstu3pql6tkrx");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1s2jcd2h3eok7j6pclv20gyi2");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("abkxekvux4nramryfw2e8vcru");

     label03:
        $i12 = staticinvoke <gen.lib.common.input__c: int findCharset(h.ST_Agraph_s)>(r0);

        staticinvoke <smetana.core.Macro: void GD_charset(h.ST_Agraph_s,int)>(r0, $i12);

        $r144 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $r145 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindgraphattr(h.ST_Agraph_s,java.lang.String)>(r0, "quantum");

        $d1 = staticinvoke <gen.lib.common.utils__c: double late_double(smetana.core.__ptr__,h.ST_Agsym_s,double,double)>(r0, $r145, 0.0, 0.0);

        $r144.<h.ST_layout_t: double quantum> = $d1;

        $r146 = new smetana.core.CString;

        specialinvoke $r146.<smetana.core.CString: void <init>(java.lang.String)>("rankdir");

        $r147 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r146);

        if $r147 == null goto label04;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("sp7zcza7w0dn7t66aj8rf4wn");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bjd2vk1jssqehllmgnqv601qd");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ry8itlrmblmuegdwk1iu1t0x");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5hno0xn18yt443qg815w3c2s2");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("aal39mi047mhafrsrxoutcffk");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7vlda224wrgcdhr0ts3mndh5q");

     label04:
        if z0 == 0 goto label05;

        $i10 = 0 << 2;

        $i11 = $i10 | 0;

        staticinvoke <smetana.core.Macro: void GD_rankdir2(h.ST_Agraph_s,int)>(r0, $i11);

        goto label06;

     label05:
        $i1 = 0 << 2;

        staticinvoke <smetana.core.Macro: void GD_rankdir2(h.ST_Agraph_s,int)>(r0, $i1);

     label06:
        $r11 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindgraphattr(h.ST_Agraph_s,java.lang.String)>(r0, "nodesep");

        d2 = staticinvoke <gen.lib.common.utils__c: double late_double(smetana.core.__ptr__,h.ST_Agsym_s,double,double)>(r0, $r11, 0.25, 0.02);

        $i2 = staticinvoke <smetana.core.Macro: int POINTS(double)>(d2);

        staticinvoke <smetana.core.Macro: void GD_nodesep(h.ST_Agraph_s,int)>(r0, $i2);

        $r12 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindgraphattr(h.ST_Agraph_s,java.lang.String)>(r0, "ranksep");

        r149 = staticinvoke <gen.lib.common.utils__c: smetana.core.CString late_string(smetana.core.__ptr__,h.ST_Agsym_s,smetana.core.CString)>(r0, $r12, null);

        if r149 == null goto label08;

        d3 = staticinvoke <smetana.core.JUtils: double atof(smetana.core.CString)>(r149);

        $b9 = d3 cmpg 0.02;

        if $b9 >= 0 goto label07;

        d3 = 0.02;

     label07:
        $r131 = new smetana.core.CString;

        specialinvoke $r131.<smetana.core.CString: void <init>(java.lang.String)>("equally");

        $z3 = virtualinvoke r149.<smetana.core.CString: boolean isSame(smetana.core.CString)>($r131);

        if $z3 == 0 goto label09;

        staticinvoke <smetana.core.Macro: void GD_exact_ranksep(h.ST_Agraph_s,int)>(r0, 1);

        goto label09;

     label08:
        d3 = 0.5;

     label09:
        $i13 = staticinvoke <smetana.core.Macro: int POINTS(double)>(d3);

        staticinvoke <smetana.core.Macro: void GD_ranksep(h.ST_Agraph_s,int)>(r0, $i13);

        $r150 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindgraphattr(h.ST_Agraph_s,java.lang.String)>(r0, "showboxes");

        $i14 = staticinvoke <gen.lib.common.utils__c: int late_int(smetana.core.__ptr__,h.ST_Agsym_s,int,int)>(r0, $r150, 0, 0);

        staticinvoke <smetana.core.Macro: void GD_showboxes(h.ST_Agraph_s,int)>(r0, $i14);

        $r151 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindgraphattr(h.ST_Agraph_s,java.lang.String)>(r0, "fontnames");

        r152 = staticinvoke <gen.lib.common.utils__c: smetana.core.CString late_string(smetana.core.__ptr__,h.ST_Agsym_s,smetana.core.CString)>(r0, $r151, null);

        $r153 = <gen.lib.common.input__c: smetana.core.CString[] fontnamenames>;

        $r154 = <gen.lib.common.input__c: int[] fontnamecodes>;

        $i15 = staticinvoke <gen.lib.common.utils__c: int maptoken(smetana.core.CString,smetana.core.CString[],int[])>(r152, $r153, $r154);

        staticinvoke <smetana.core.Macro: void GD_fontnames(h.ST_Agraph_s,int)>(r0, $i15);

        staticinvoke <gen.lib.common.input__c: void setRatio(h.ST_Agraph_s)>(r0);

        $r155 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $r156 = new smetana.core.CString;

        specialinvoke $r156.<smetana.core.CString: void <init>(java.lang.String)>("size");

        $r157 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $r158 = $r157.<h.ST_layout_t: h.ST_pointf size>;

        $z4 = staticinvoke <gen.lib.common.input__c: boolean getdoubles2ptf(h.ST_Agraph_s,smetana.core.CString,h.ST_pointf)>(r0, $r156, $r158);

        $r155.<h.ST_layout_t: boolean filled> = $z4;

        $r159 = new smetana.core.CString;

        specialinvoke $r159.<smetana.core.CString: void <init>(java.lang.String)>("page");

        $r160 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $r161 = $r160.<h.ST_layout_t: h.ST_pointf page>;

        staticinvoke <gen.lib.common.input__c: boolean getdoubles2ptf(h.ST_Agraph_s,smetana.core.CString,h.ST_pointf)>(r0, $r159, $r161);

        $r162 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $r163 = new smetana.core.CString;

        specialinvoke $r163.<smetana.core.CString: void <init>(java.lang.String)>("center");

        $r164 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r163);

        $z5 = staticinvoke <gen.lib.common.utils__c: boolean mapbool(smetana.core.CString)>($r164);

        $r162.<h.ST_layout_t: boolean centered> = $z5;

        $r165 = new smetana.core.CString;

        specialinvoke $r165.<smetana.core.CString: void <init>(java.lang.String)>("rotate");

        $r166 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r165);

        if $r166 == null goto label12;

        $r130 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $i8 = staticinvoke <smetana.core.JUtils: int atoi(smetana.core.CString)>($r166);

        if $i8 != 90 goto label10;

        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        $r130.<h.ST_layout_t: boolean landscape> = $z6;

        goto label17;

     label12:
        $r13 = new smetana.core.CString;

        specialinvoke $r13.<smetana.core.CString: void <init>(java.lang.String)>("orientation");

        $r14 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r13);

        if $r14 == null goto label16;

        $r129 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $c6 = virtualinvoke $r14.<smetana.core.CString: char charAt(int)>(0);

        if $c6 == 108 goto label13;

        $c7 = virtualinvoke $r14.<smetana.core.CString: char charAt(int)>(0);

        if $c7 != 76 goto label14;

     label13:
        $z7 = 1;

        goto label15;

     label14:
        $z7 = 0;

     label15:
        $r129.<h.ST_layout_t: boolean landscape> = $z7;

        goto label17;

     label16:
        $r15 = new smetana.core.CString;

        specialinvoke $r15.<smetana.core.CString: void <init>(java.lang.String)>("landscape");

        $r16 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r15);

        if $r16 == null goto label17;

        $r128 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $z2 = staticinvoke <gen.lib.common.utils__c: boolean mapbool(smetana.core.CString)>($r16);

        $r128.<h.ST_layout_t: boolean landscape> = $z2;

     label17:
        $r170 = new smetana.core.CString;

        specialinvoke $r170.<smetana.core.CString: void <init>(java.lang.String)>("clusterrank");

        r171 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r170);

        $r172 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r173 = <gen.lib.common.input__c: smetana.core.CString[] rankname>;

        $r174 = <gen.lib.common.input__c: int[] rankcode>;

        $i16 = staticinvoke <gen.lib.common.utils__c: int maptoken(smetana.core.CString,smetana.core.CString[],int[])>(r171, $r173, $r174);

        $r172.<smetana.core.Z: int CL_type> = $i16;

        $r175 = new smetana.core.CString;

        specialinvoke $r175.<smetana.core.CString: void <init>(java.lang.String)>("concentrate");

        r176 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r175);

        $r177 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $z8 = staticinvoke <gen.lib.common.utils__c: boolean mapbool(smetana.core.CString)>(r176);

        $r177.<smetana.core.Z: boolean Concentrate> = $z8;

        $r178 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r178.<smetana.core.Z: int State> = 0;

        $r179 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r179.<smetana.core.Z: int EdgeLabelsDone> = 0;

        $r180 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $r180.<h.ST_layout_t: double dpi> = 0.0;

        $r181 = new smetana.core.CString;

        specialinvoke $r181.<smetana.core.CString: void <init>(java.lang.String)>("dpi");

        $r182 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r181);

        r183 = $r182;

        if $r182 == null goto label18;

        $c5 = virtualinvoke $r182.<smetana.core.CString: char charAt(int)>(0);

        if $c5 != 0 goto label19;

     label18:
        $r17 = new smetana.core.CString;

        specialinvoke $r17.<smetana.core.CString: void <init>(java.lang.String)>("resolution");

        $r18 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r17);

        r183 = $r18;

        if $r18 == null goto label20;

        $c4 = virtualinvoke $r18.<smetana.core.CString: char charAt(int)>(0);

        if $c4 == 0 goto label20;

     label19:
        $r127 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $d0 = staticinvoke <smetana.core.JUtils: double atof(smetana.core.CString)>(r183);

        $r127.<h.ST_layout_t: double dpi> = $d0;

     label20:
        staticinvoke <gen.lib.common.input__c: void do_graph_label(h.ST_Agraph_s)>(r0);

        $r184 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r184.<smetana.core.Z: double Initial_dist> = 1.0E37;

        $r185 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r186 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindgraphattr(h.ST_Agraph_s,java.lang.String)>(r0, "ordering");

        $r185.<smetana.core.Z: h.ST_Agsym_s G_ordering> = $r186;

        $r187 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r188 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindgraphattr(h.ST_Agraph_s,java.lang.String)>(r0, "gradientangle");

        $r187.<smetana.core.Z: h.ST_Agsym_s G_gradientangle> = $r188;

        $r189 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r190 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindgraphattr(h.ST_Agraph_s,java.lang.String)>(r0, "margin");

        $r189.<smetana.core.Z: h.ST_Agsym_s G_margin> = $r190;

        $r191 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r192 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "height");

        $r191.<smetana.core.Z: h.ST_Agsym_s N_height> = $r192;

        $r193 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r194 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "width");

        $r193.<smetana.core.Z: h.ST_Agsym_s N_width> = $r194;

        $r195 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r196 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "shape");

        $r195.<smetana.core.Z: h.ST_Agsym_s N_shape> = $r196;

        $r197 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r198 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "color");

        $r197.<smetana.core.Z: h.ST_Agsym_s N_color> = $r198;

        $r199 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r200 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "fillcolor");

        $r199.<smetana.core.Z: h.ST_Agsym_s N_fillcolor> = $r200;

        $r201 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r202 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "style");

        $r201.<smetana.core.Z: h.ST_Agsym_s N_style> = $r202;

        $r203 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r204 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "fontsize");

        $r203.<smetana.core.Z: h.ST_Agsym_s N_fontsize> = $r204;

        $r205 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r206 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "fontname");

        $r205.<smetana.core.Z: h.ST_Agsym_s N_fontname> = $r206;

        $r207 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r208 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "fontcolor");

        $r207.<smetana.core.Z: h.ST_Agsym_s N_fontcolor> = $r208;

        $r209 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r210 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "label");

        $r209.<smetana.core.Z: h.ST_Agsym_s N_label> = $r210;

        $r211 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r212 = $r211.<smetana.core.Z: h.ST_Agsym_s N_label>;

        $z9 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r212);

        if $z9 == 0 goto label21;

        $r123 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r124 = new smetana.core.CString;

        specialinvoke $r124.<smetana.core.CString: void <init>(java.lang.String)>("label");

        $r125 = new smetana.core.CString;

        specialinvoke $r125.<smetana.core.CString: void <init>(java.lang.String)>("\\N");

        $r126 = staticinvoke <gen.lib.cgraph.attr__c: h.ST_Agsym_s agattr(h.ST_Agraph_s,int,smetana.core.CString,smetana.core.CString)>(r0, 1, $r124, $r125);

        $r123.<smetana.core.Z: h.ST_Agsym_s N_label> = $r126;

     label21:
        $r19 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r20 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "xlabel");

        $r19.<smetana.core.Z: h.ST_Agsym_s N_xlabel> = $r20;

        $r21 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r22 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "showboxes");

        $r21.<smetana.core.Z: h.ST_Agsym_s N_showboxes> = $r22;

        $r23 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r24 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "penwidth");

        $r23.<smetana.core.Z: h.ST_Agsym_s N_penwidth> = $r24;

        $r25 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r26 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "ordering");

        $r25.<smetana.core.Z: h.ST_Agsym_s N_ordering> = $r26;

        $r27 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r28 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "margin");

        $r27.<smetana.core.Z: h.ST_Agsym_s N_margin> = $r28;

        $r29 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r30 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "sides");

        $r29.<smetana.core.Z: h.ST_Agsym_s N_sides> = $r30;

        $r31 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r32 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "peripheries");

        $r31.<smetana.core.Z: h.ST_Agsym_s N_peripheries> = $r32;

        $r33 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r34 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "skew");

        $r33.<smetana.core.Z: h.ST_Agsym_s N_skew> = $r34;

        $r35 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r36 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "orientation");

        $r35.<smetana.core.Z: h.ST_Agsym_s N_orientation> = $r36;

        $r37 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r38 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "distortion");

        $r37.<smetana.core.Z: h.ST_Agsym_s N_distortion> = $r38;

        $r39 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r40 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "fixedsize");

        $r39.<smetana.core.Z: h.ST_Agsym_s N_fixed> = $r40;

        $r41 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r42 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "imagescale");

        $r41.<smetana.core.Z: h.ST_Agsym_s N_imagescale> = $r42;

        $r43 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r44 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "nojustify");

        $r43.<smetana.core.Z: h.ST_Agsym_s N_nojustify> = $r44;

        $r45 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r46 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "layer");

        $r45.<smetana.core.Z: h.ST_Agsym_s N_layer> = $r46;

        $r47 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r48 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "group");

        $r47.<smetana.core.Z: h.ST_Agsym_s N_group> = $r48;

        $r49 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r50 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "comment");

        $r49.<smetana.core.Z: h.ST_Agsym_s N_comment> = $r50;

        $r51 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r52 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "vertices");

        $r51.<smetana.core.Z: h.ST_Agsym_s N_vertices> = $r52;

        $r53 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r54 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "z");

        $r53.<smetana.core.Z: h.ST_Agsym_s N_z> = $r54;

        $r55 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r56 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindnodeattr(h.ST_Agraph_s,java.lang.String)>(r0, "gradientangle");

        $r55.<smetana.core.Z: h.ST_Agsym_s N_gradientangle> = $r56;

        $r57 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r58 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "weight");

        $r57.<smetana.core.Z: h.ST_Agsym_s E_weight> = $r58;

        $r59 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r60 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "color");

        $r59.<smetana.core.Z: h.ST_Agsym_s E_color> = $r60;

        $r61 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r62 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "fillcolor");

        $r61.<smetana.core.Z: h.ST_Agsym_s E_fillcolor> = $r62;

        $r63 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r64 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "fontsize");

        $r63.<smetana.core.Z: h.ST_Agsym_s E_fontsize> = $r64;

        $r65 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r66 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "fontname");

        $r65.<smetana.core.Z: h.ST_Agsym_s E_fontname> = $r66;

        $r67 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r68 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "fontcolor");

        $r67.<smetana.core.Z: h.ST_Agsym_s E_fontcolor> = $r68;

        $r69 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r70 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "label");

        $r69.<smetana.core.Z: h.ST_Agsym_s E_label> = $r70;

        $r71 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r72 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "xlabel");

        $r71.<smetana.core.Z: h.ST_Agsym_s E_xlabel> = $r72;

        $r73 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r74 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "labelfloat");

        $r73.<smetana.core.Z: h.ST_Agsym_s E_label_float> = $r74;

        $r75 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r76 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "dir");

        $r75.<smetana.core.Z: h.ST_Agsym_s E_dir> = $r76;

        $r77 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r78 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "arrowhead");

        $r77.<smetana.core.Z: h.ST_Agsym_s E_arrowhead> = $r78;

        $r79 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r80 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "arrowtail");

        $r79.<smetana.core.Z: h.ST_Agsym_s E_arrowtail> = $r80;

        $r81 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r82 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "headlabel");

        $r81.<smetana.core.Z: h.ST_Agsym_s E_headlabel> = $r82;

        $r83 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r84 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "taillabel");

        $r83.<smetana.core.Z: h.ST_Agsym_s E_taillabel> = $r84;

        $r85 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r86 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "labelfontsize");

        $r85.<smetana.core.Z: h.ST_Agsym_s E_labelfontsize> = $r86;

        $r87 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r88 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "labelfontname");

        $r87.<smetana.core.Z: h.ST_Agsym_s E_labelfontname> = $r88;

        $r89 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r90 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "labelfontcolor");

        $r89.<smetana.core.Z: h.ST_Agsym_s E_labelfontcolor> = $r90;

        $r91 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r92 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "labeldistance");

        $r91.<smetana.core.Z: h.ST_Agsym_s E_labeldistance> = $r92;

        $r93 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r94 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "labelangle");

        $r93.<smetana.core.Z: h.ST_Agsym_s E_labelangle> = $r94;

        $r95 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r96 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "minlen");

        $r95.<smetana.core.Z: h.ST_Agsym_s E_minlen> = $r96;

        $r97 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r98 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "showboxes");

        $r97.<smetana.core.Z: h.ST_Agsym_s E_showboxes> = $r98;

        $r99 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r100 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "style");

        $r99.<smetana.core.Z: h.ST_Agsym_s E_style> = $r100;

        $r101 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r102 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "decorate");

        $r101.<smetana.core.Z: h.ST_Agsym_s E_decorate> = $r102;

        $r103 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r104 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "arrowsize");

        $r103.<smetana.core.Z: h.ST_Agsym_s E_arrowsz> = $r104;

        $r105 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r106 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "constraint");

        $r105.<smetana.core.Z: h.ST_Agsym_s E_constr> = $r106;

        $r107 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r108 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "layer");

        $r107.<smetana.core.Z: h.ST_Agsym_s E_layer> = $r108;

        $r109 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r110 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "comment");

        $r109.<smetana.core.Z: h.ST_Agsym_s E_comment> = $r110;

        $r111 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r112 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "tailclip");

        $r111.<smetana.core.Z: h.ST_Agsym_s E_tailclip> = $r112;

        $r113 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r114 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "headclip");

        $r113.<smetana.core.Z: h.ST_Agsym_s E_headclip> = $r114;

        $r115 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r116 = staticinvoke <smetana.core.Macro: h.ST_Agsym_s agfindedgeattr(h.ST_Agraph_s,java.lang.String)>(r0, "penwidth");

        $r115.<smetana.core.Z: h.ST_Agsym_s E_penwidth> = $r116;

        $r117 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $r118 = staticinvoke <gen.lib.common.emit__c: smetana.core.__ptr__ init_xdot(h.ST_Agraph_s)>(r0);

        $r117.<h.ST_layout_t: smetana.core.__ptr__ xdots> = $r118;

        $r119 = new smetana.core.CString;

        specialinvoke $r119.<smetana.core.CString: void <init>(java.lang.String)>("id");

        $r120 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r119);

        if $r120 == null goto label22;

        $c3 = virtualinvoke $r120.<smetana.core.CString: char charAt(int)>(0);

        if $c3 == 0 goto label22;

        $r121 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r0);

        $r122 = staticinvoke <gen.lib.common.labels__c: smetana.core.CString strdup_and_subst_obj(smetana.core.CString,smetana.core.__ptr__)>($r120, r0);

        $r121.<h.ST_layout_t: smetana.core.CString id> = $r122;

     label22:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8gzdr3oil2d0e2o7m84wsszfg", "graph_init");

        goto label25;

     label23:
        $r140 := @caughtexception;

     label24:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8gzdr3oil2d0e2o7m84wsszfg", "graph_init");

        throw $r140;

     label25:
        return;

        catch java.lang.Throwable from label01 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public static void do_graph_label(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r6, $r7, $r21, $r27, $r30;
        smetana.core.CString $r1, $r2, $r8, $r10, $r12, $r13, $r14, $r16, $r17, $r19, r20, r26, $r48;
        char $c0, $c6;
        h.ST_pointf $r4, $r29, $r38;
        int $i1, $i2, $i3, $i4, $i5;
        h.ST_Agsym_s $r9, $r11, $r15;
        double $d0;
        h.ST_textlabel_t $r18, $r28;
        boolean $z0, $z1, $z2, $z3;
        h.ST_pointf[] $r37;
        java.lang.Throwable $r46;
        byte b7, $b8, b9;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("5vks1zdadu5vjinaivs0j2bkb", "do_graph_label");

     label01:
        $r1 = new smetana.core.CString;

        specialinvoke $r1.<smetana.core.CString: void <init>(java.lang.String)>("label");

        $r2 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r1);

        if $r2 == null goto label13;

        $c0 = virtualinvoke $r2.<smetana.core.CString: char charAt(int)>(0);

        if $c0 == 0 goto label13;

        b7 = 0;

        $r4 = new h.ST_pointf;

        specialinvoke $r4.<h.ST_pointf: void <init>()>();

        $r7 = r0.<h.ST_Agraph_s: h.ST_Agraph_s root>;

        $r6 = r0.<h.ST_Agraph_s: h.ST_Agraph_s root>;

        $i1 = staticinvoke <smetana.core.Macro: int GD_has_labels(h.ST_Agraph_s)>($r6);

        $i2 = $i1 | 8;

        staticinvoke <smetana.core.Macro: void GD_has_labels(h.ST_Agraph_s,int)>($r7, $i2);

        $i3 = staticinvoke <gen.lib.cgraph.refstr__c: int aghtmlstr(smetana.core.CString)>($r2);

        if $i3 == 0 goto label02;

        $b8 = 2;

        goto label03;

     label02:
        $b8 = 0;

     label03:
        $r8 = new smetana.core.CString;

        specialinvoke $r8.<smetana.core.CString: void <init>(java.lang.String)>("fontsize");

        $r9 = staticinvoke <gen.lib.cgraph.attr__c: h.ST_Agsym_s agattr(h.ST_Agraph_s,int,smetana.core.CString,smetana.core.CString)>(r0, 0, $r8, null);

        $d0 = staticinvoke <gen.lib.common.utils__c: double late_double(smetana.core.__ptr__,h.ST_Agsym_s,double,double)>(r0, $r9, 14.0, 1.0);

        $r10 = new smetana.core.CString;

        specialinvoke $r10.<smetana.core.CString: void <init>(java.lang.String)>("fontname");

        $r11 = staticinvoke <gen.lib.cgraph.attr__c: h.ST_Agsym_s agattr(h.ST_Agraph_s,int,smetana.core.CString,smetana.core.CString)>(r0, 0, $r10, null);

        $r12 = new smetana.core.CString;

        specialinvoke $r12.<smetana.core.CString: void <init>(java.lang.String)>("Times-Roman");

        $r13 = staticinvoke <gen.lib.common.utils__c: smetana.core.CString late_nnstring(smetana.core.__ptr__,h.ST_Agsym_s,smetana.core.CString)>(r0, $r11, $r12);

        $r14 = new smetana.core.CString;

        specialinvoke $r14.<smetana.core.CString: void <init>(java.lang.String)>("fontcolor");

        $r15 = staticinvoke <gen.lib.cgraph.attr__c: h.ST_Agsym_s agattr(h.ST_Agraph_s,int,smetana.core.CString,smetana.core.CString)>(r0, 0, $r14, null);

        $r16 = new smetana.core.CString;

        specialinvoke $r16.<smetana.core.CString: void <init>(java.lang.String)>("black");

        $r17 = staticinvoke <gen.lib.common.utils__c: smetana.core.CString late_nnstring(smetana.core.__ptr__,h.ST_Agsym_s,smetana.core.CString)>(r0, $r15, $r16);

        $r18 = staticinvoke <gen.lib.common.labels__c: h.ST_textlabel_t make_label(h.ST_Agobj_s,smetana.core.CString,int,double,smetana.core.CString,smetana.core.CString)>(r0, $r2, $b8, $d0, $r13, $r17);

        staticinvoke <smetana.core.Macro: void GD_label(h.ST_Agraph_s,h.ST_textlabel_t)>(r0, $r18);

        $r19 = new smetana.core.CString;

        specialinvoke $r19.<smetana.core.CString: void <init>(java.lang.String)>("labelloc");

        r20 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r19);

        $r21 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agroot(h.ST_Agobj_s)>(r0);

        $z0 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>(r0, $r21);

        if $z0 == 0 goto label05;

        if r20 == null goto label04;

        $c6 = virtualinvoke r20.<smetana.core.CString: char charAt(int)>(0);

        if $c6 != 98 goto label04;

        b7 = 0;

        goto label06;

     label04:
        b7 = 1;

        goto label06;

     label05:
        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("601b6yrqr391vnfpa74d7fec7");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bxai2kktsidvda3696ctyk63c");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5c97f6vfxny0zz35l2bu4maox");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6m5sy5ew8izdy8i10zb5o2dvu");

     label06:
        $r48 = new smetana.core.CString;

        specialinvoke $r48.<smetana.core.CString: void <init>(java.lang.String)>("labeljust");

        r26 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r48);

        if r26 == null goto label07;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("3gxohpfqzahytaf7f9apn58az");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ch7sydr4cg29o8ky9fbk5vnlg");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("336to8kpmovx00pexhhenz74b");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("evu9w6pw3kkh7z8w7t4rx4qxc");

     label07:
        staticinvoke <smetana.core.Macro: void GD_label_pos(h.ST_Agraph_s,int)>(r0, b7);

        $r27 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agroot(h.ST_Agobj_s)>(r0);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r0, $r27);

        if $z1 == 0 goto label09;

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5vks1zdadu5vjinaivs0j2bkb", "do_graph_label");

        return;

     label09:
        $r28 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t GD_label(h.ST_Agraph_s)>(r0);

        $r29 = $r28.<h.ST_textlabel_t: h.ST_pointf dimen>;

        virtualinvoke $r4.<h.ST_pointf: void ___(smetana.core.__struct__)>($r29);

        staticinvoke <smetana.core.Macro: void PAD(h.ST_pointf)>($r4);

        $r30 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agroot(h.ST_Agobj_s)>(r0);

        $z2 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>($r30);

        $z3 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z2);

        if $z3 == 0 goto label12;

        $i4 = staticinvoke <smetana.core.Macro: int GD_label_pos(h.ST_Agraph_s)>(r0);

        $i5 = $i4 & 1;

        if $i5 == 0 goto label10;

        b9 = 2;

        goto label11;

     label10:
        b9 = 0;

     label11:
        $r37 = staticinvoke <smetana.core.Macro: h.ST_pointf[] GD_border(h.ST_Agraph_s)>(r0);

        $r38 = $r37[b9];

        virtualinvoke $r38.<h.ST_pointf: void ___(smetana.core.__struct__)>($r4);

        goto label13;

     label12:
        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cabz6xbjdvz5vmjulzrhlxh48");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dx7v6663o9o0x1j5r8z4wumxb");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5c97f6vfxny0zz35l2bu4maox");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("97dtv6k7yw1qvfzgs65cj2v0l");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("21iuie8b11x65je8vampstgt6");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8cawl3kik853hkvgm39y34urs");

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5vks1zdadu5vjinaivs0j2bkb", "do_graph_label");

        goto label16;

     label14:
        $r46 := @caughtexception;

     label15:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5vks1zdadu5vjinaivs0j2bkb", "do_graph_label");

        throw $r46;

     label16:
        return;

        catch java.lang.Throwable from label01 to label08 with label14;
        catch java.lang.Throwable from label09 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    static void <clinit>()
    {
        smetana.core.CString[] $r0, $r5;
        smetana.core.CString $r1, $r2, $r3, $r6, $r7, $r8;
        int[] $r4, $r9;
        h.EN_fontname_kind $r10, $r11, $r12;
        int $i0, $i1, $i2;

        $r0 = newarray (smetana.core.CString)[4];

        $r1 = new smetana.core.CString;

        specialinvoke $r1.<smetana.core.CString: void <init>(java.lang.String)>("local");

        $r0[0] = $r1;

        $r2 = new smetana.core.CString;

        specialinvoke $r2.<smetana.core.CString: void <init>(java.lang.String)>("global");

        $r0[1] = $r2;

        $r3 = new smetana.core.CString;

        specialinvoke $r3.<smetana.core.CString: void <init>(java.lang.String)>("none");

        $r0[2] = $r3;

        $r0[3] = null;

        <gen.lib.common.input__c: smetana.core.CString[] rankname> = $r0;

        $r4 = newarray (int)[4];

        $r4[0] = 100;

        $r4[1] = 101;

        $r4[2] = 102;

        $r4[3] = 100;

        <gen.lib.common.input__c: int[] rankcode> = $r4;

        $r5 = newarray (smetana.core.CString)[4];

        $r6 = new smetana.core.CString;

        specialinvoke $r6.<smetana.core.CString: void <init>(java.lang.String)>("gd");

        $r5[0] = $r6;

        $r7 = new smetana.core.CString;

        specialinvoke $r7.<smetana.core.CString: void <init>(java.lang.String)>("ps");

        $r5[1] = $r7;

        $r8 = new smetana.core.CString;

        specialinvoke $r8.<smetana.core.CString: void <init>(java.lang.String)>("svg");

        $r5[2] = $r8;

        $r5[3] = null;

        <gen.lib.common.input__c: smetana.core.CString[] fontnamenames> = $r5;

        $r9 = newarray (int)[4];

        $r10 = <h.EN_fontname_kind: h.EN_fontname_kind NATIVEFONTS>;

        $i0 = virtualinvoke $r10.<h.EN_fontname_kind: int ordinal()>();

        $r9[0] = $i0;

        $r11 = <h.EN_fontname_kind: h.EN_fontname_kind PSFONTS>;

        $i1 = virtualinvoke $r11.<h.EN_fontname_kind: int ordinal()>();

        $r9[1] = $i1;

        $r12 = <h.EN_fontname_kind: h.EN_fontname_kind SVGFONTS>;

        $i2 = virtualinvoke $r12.<h.EN_fontname_kind: int ordinal()>();

        $r9[2] = $i2;

        $r9[3] = -1;

        <gen.lib.common.input__c: int[] fontnamecodes> = $r9;

        return;
    }
}
