class net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final double val$fullAvailableWidth;
    final net.sourceforge.plantuml.timingdiagram.graphic.Histogram this$0;

    void <init>(net.sourceforge.plantuml.timingdiagram.graphic.Histogram, double)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1 r0;
        net.sourceforge.plantuml.timingdiagram.graphic.Histogram r1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.graphic.Histogram;

        d0 := @parameter1: double;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1: net.sourceforge.plantuml.timingdiagram.graphic.Histogram this$0> = r1;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1: double val$fullAvailableWidth> = d0;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1 r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double $d0;
        net.sourceforge.plantuml.timingdiagram.graphic.Histogram $r2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1: net.sourceforge.plantuml.timingdiagram.graphic.Histogram this$0>;

        $d0 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1: double val$fullAvailableWidth>;

        staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.Histogram: void access$000(net.sourceforge.plantuml.timingdiagram.graphic.Histogram,net.sourceforge.plantuml.ugraphic.UGraphic,double)>($r2, r1, $d0);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.timingdiagram.graphic.Histogram $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Histogram$1: net.sourceforge.plantuml.timingdiagram.graphic.Histogram this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.Histogram: net.sourceforge.plantuml.awt.geom.Dimension2D access$100(net.sourceforge.plantuml.timingdiagram.graphic.Histogram,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r1);

        return $r3;
    }
}
