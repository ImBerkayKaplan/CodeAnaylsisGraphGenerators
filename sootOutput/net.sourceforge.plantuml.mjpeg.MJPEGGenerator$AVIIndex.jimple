class net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex extends java.lang.Object
{
    public byte[] fcc;
    public int dwFlags;
    public int dwOffset;
    public int dwSize;
    final net.sourceforge.plantuml.mjpeg.MJPEGGenerator this$0;

    public void <init>(net.sourceforge.plantuml.mjpeg.MJPEGGenerator, int, int)
    {
        net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex r0;
        net.sourceforge.plantuml.mjpeg.MJPEGGenerator r1;
        byte[] $r2;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex;

        r1 := @parameter0: net.sourceforge.plantuml.mjpeg.MJPEGGenerator;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: net.sourceforge.plantuml.mjpeg.MJPEGGenerator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[4];

        $r2[0] = 48;

        $r2[1] = 48;

        $r2[2] = 100;

        $r2[3] = 98;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: byte[] fcc> = $r2;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: int dwFlags> = 16;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: int dwOffset> = 0;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: int dwSize> = 0;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: int dwOffset> = i0;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: int dwSize> = i1;

        return;
    }

    public byte[] toBytes() throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r0;
        net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex r2;
        byte[] $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r2 := @this: net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: byte[] fcc>;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r3);

        $i0 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: int dwFlags>;

        $i1 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i0);

        $r4 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i1);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r4);

        $i2 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: int dwOffset>;

        $i3 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i2);

        $r5 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i3);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r5);

        $i4 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIIndex: int dwSize>;

        $i5 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i4);

        $r6 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i5);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r6);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void close()>();

        $r7 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r7;
    }
}
