public class net.sourceforge.plantuml.sequencediagram.teoz.ElseTile extends net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile
{
    private final net.sourceforge.plantuml.skin.rose.Rose skin;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.sequencediagram.GroupingLeaf anElse;
    private final net.sourceforge.plantuml.sequencediagram.teoz.Tile parent;

    public net.sourceforge.plantuml.sequencediagram.Event getEvent()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.ElseTile r0;
        net.sourceforge.plantuml.sequencediagram.GroupingLeaf $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.ElseTile;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.sequencediagram.GroupingLeaf anElse>;

        return $r1;
    }

    public double getContactPointRelative()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.ElseTile r0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.ElseTile;

        return 0.0;
    }

    public void <init>(net.sourceforge.plantuml.sequencediagram.GroupingLeaf, net.sourceforge.plantuml.skin.rose.Rose, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.sequencediagram.teoz.Tile)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.ElseTile r0;
        net.sourceforge.plantuml.sequencediagram.teoz.Tile r1;
        net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile $r2;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.sequencediagram.GroupingLeaf r4;
        net.sourceforge.plantuml.skin.rose.Rose r5;
        net.sourceforge.plantuml.ISkinParam r6;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.ElseTile;

        r4 := @parameter0: net.sourceforge.plantuml.sequencediagram.GroupingLeaf;

        r5 := @parameter1: net.sourceforge.plantuml.skin.rose.Rose;

        r6 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r1 := @parameter3: net.sourceforge.plantuml.sequencediagram.teoz.Tile;

        $r2 = (net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile) r1;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.sequencediagram.GroupingLeaf anElse> = r4;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.skin.rose.Rose skin> = r5;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.ISkinParam skinParam> = r6;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.sequencediagram.teoz.Tile parent> = r1;

        return;
    }

    public net.sourceforge.plantuml.skin.Component getComponent(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.SkinParamBackcolored $r0;
        net.sourceforge.plantuml.sequencediagram.teoz.ElseTile r1;
        net.sourceforge.plantuml.sequencediagram.GroupingLeaf $r2, $r5, $r9, $r12;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4, $r6;
        java.lang.CharSequence[] $r8;
        java.lang.String $r10;
        net.sourceforge.plantuml.cucadiagram.Display r11;
        net.sourceforge.plantuml.skin.rose.Rose $r13;
        net.sourceforge.plantuml.style.Style[] $r14;
        net.sourceforge.plantuml.skin.ComponentType $r15;
        net.sourceforge.plantuml.skin.Component r16;
        net.sourceforge.plantuml.graphic.StringBounder r17;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.teoz.ElseTile;

        r17 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.SkinParamBackcolored;

        $r3 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r2 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.sequencediagram.GroupingLeaf anElse>;

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.sequencediagram.GroupingLeaf: net.sourceforge.plantuml.ugraphic.color.HColor getBackColorElement()>();

        $r5 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.sequencediagram.GroupingLeaf anElse>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.GroupingLeaf: net.sourceforge.plantuml.ugraphic.color.HColor getBackColorGeneral()>();

        specialinvoke $r0.<net.sourceforge.plantuml.SkinParamBackcolored: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r3, $r4, $r6);

        $r8 = newarray (java.lang.CharSequence)[1];

        $r9 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.sequencediagram.GroupingLeaf anElse>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.sequencediagram.GroupingLeaf: java.lang.String getComment()>();

        $r8[0] = $r10;

        r11 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r8);

        $r13 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.skin.rose.Rose skin>;

        $r12 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.sequencediagram.GroupingLeaf anElse>;

        $r14 = virtualinvoke $r12.<net.sourceforge.plantuml.sequencediagram.GroupingLeaf: net.sourceforge.plantuml.style.Style[] getUsedStyles()>();

        $r15 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_ELSE>;

        r16 = virtualinvoke $r13.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.Component createComponent(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>($r14, $r15, null, $r0, r11);

        return r16;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.ElseTile r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.ElseTile;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        return;
    }

    public double getPreferredHeight()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.ElseTile r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1, $r3;
        net.sourceforge.plantuml.skin.Component r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        net.sourceforge.plantuml.sequencediagram.GroupingLeaf $r5;
        java.lang.String $r6;
        double d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.ElseTile;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.skin.Component getComponent(net.sourceforge.plantuml.graphic.StringBounder)>($r1);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r4 = interfaceinvoke r2.<net.sourceforge.plantuml.skin.Component: net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r5 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.sequencediagram.GroupingLeaf anElse>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.GroupingLeaf: java.lang.String getComment()>();

        if $r6 == null goto label1;

        d0 = d0 + 10.0;

     label1:
        return d0;
    }

    public void addConstraints()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.ElseTile r0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.ElseTile;

        return;
    }

    public net.sourceforge.plantuml.real.Real getMinX()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.ElseTile r0;
        net.sourceforge.plantuml.sequencediagram.teoz.Tile $r1;
        net.sourceforge.plantuml.real.Real $r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.ElseTile;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.sequencediagram.teoz.Tile parent>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.sequencediagram.teoz.Tile: net.sourceforge.plantuml.real.Real getMinX()>();

        return $r2;
    }

    public net.sourceforge.plantuml.real.Real getMaxX()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.ElseTile r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1, $r3;
        net.sourceforge.plantuml.skin.Component r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        net.sourceforge.plantuml.real.Real $r5, $r6;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.ElseTile;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.skin.Component getComponent(net.sourceforge.plantuml.graphic.StringBounder)>($r1);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r4 = interfaceinvoke r2.<net.sourceforge.plantuml.skin.Component: net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.ElseTile: net.sourceforge.plantuml.real.Real getMinX()>();

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.real.Real: net.sourceforge.plantuml.real.Real addFixed(double)>($d0);

        return $r6;
    }
}
