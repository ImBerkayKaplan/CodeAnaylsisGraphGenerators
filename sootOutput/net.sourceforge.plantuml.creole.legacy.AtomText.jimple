public final class net.sourceforge.plantuml.creole.legacy.AtomText extends net.sourceforge.plantuml.creole.atom.AbstractAtom implements net.sourceforge.plantuml.creole.atom.Atom
{
    private final net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration;
    private final java.lang.String text;
    private final net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble marginLeft;
    private final net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble marginRight;
    private final net.sourceforge.plantuml.Url url;
    private final boolean manageSpecialChars;
    private net.sourceforge.plantuml.graphic.TextBlock visibility;

    protected void <init>(java.lang.String, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.Url, net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble, net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble, boolean)
    {
        net.sourceforge.plantuml.creole.legacy.AtomText r0;
        java.lang.String r1, $r5, r11, r12, r13, r14, r15;
        java.lang.StringBuilder $r2, $r3, $r4;
        char $c0;
        boolean $z0, z1;
        net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble r6, r7;
        net.sourceforge.plantuml.graphic.FontConfiguration r8;
        net.sourceforge.plantuml.Url r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        r9 := @parameter2: net.sourceforge.plantuml.Url;

        r6 := @parameter3: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble;

        r7 := @parameter4: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble;

        z1 := @parameter5: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.creole.atom.AbstractAtom: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c0 = staticinvoke <net.sourceforge.plantuml.BackSlash: char hiddenNewLine()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

        if $z0 == 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r10;

     label1:
        r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble marginLeft> = r6;

        r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble marginRight> = r7;

        r11 = staticinvoke <net.sourceforge.plantuml.utils.CharHidder: java.lang.String unhide(java.lang.String)>(r1);

        if z1 == 0 goto label2;

        r12 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String showComparatorCharacters(java.lang.String)>(r11);

        r13 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String manageAmpDiese(java.lang.String)>(r12);

        r14 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String manageUnicodeNotationUplus(java.lang.String)>(r13);

        r15 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String manageTildeArobaseStart(java.lang.String)>(r14);

        r11 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String manageEscapedTabs(java.lang.String)>(r15);

     label2:
        r0.<net.sourceforge.plantuml.creole.legacy.AtomText: boolean manageSpecialChars> = z1;

        r0.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text> = r11;

        r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r8;

        r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.Url url> = r9;

        return;
    }

    private net.sourceforge.plantuml.creole.legacy.AtomText withText(java.lang.String)
    {
        net.sourceforge.plantuml.creole.legacy.AtomText $r0, r2;
        java.lang.String r1;
        boolean $z0;
        net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble $r3, $r4;
        net.sourceforge.plantuml.Url $r5;
        net.sourceforge.plantuml.graphic.FontConfiguration $r6;

        r2 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        r1 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.creole.legacy.AtomText;

        $r6 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r5 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.Url url>;

        $r4 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble marginLeft>;

        $r3 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble marginRight>;

        $z0 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: boolean manageSpecialChars>;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.legacy.AtomText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,boolean)>(r1, $r6, $r5, $r4, $r3, $z0);

        return $r0;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.creole.legacy.AtomText r1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2;
        net.sourceforge.plantuml.ugraphic.UFont $r3;
        java.lang.String $r4, $r9, $r12, $r16, $r17, $r18;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5, $r24;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r15;
        byte $b0;
        int $i1;
        net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble $r19, $r20;
        double d0, d1, $d2, $d3, $d4, d5, $d6, d7;
        net.sourceforge.plantuml.graphic.TextBlock $r21, $r23;
        net.sourceforge.plantuml.Dimension2DDouble $r22;

        r1 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $r4 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        r5 = interfaceinvoke r0.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r3, $r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("g2d=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void debug(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size for ");

        $r12 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void debug(java.lang.String)>($r16);

        d5 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $b0 = d5 cmpg 10.0;

        if $b0 >= 0 goto label1;

        d5 = 10.0;

     label1:
        $r17 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $i1 = virtualinvoke $r17.<java.lang.String: int indexOf(java.lang.String)>("\t");

        if $i1 != -1 goto label2;

        $d6 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        goto label3;

     label2:
        $r18 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $d6 = specialinvoke r1.<net.sourceforge.plantuml.creole.legacy.AtomText: double getWidth(net.sourceforge.plantuml.graphic.StringBounder,java.lang.String)>(r0, $r18);

     label3:
        d7 = $d6;

        $r19 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble marginLeft>;

        d0 = interfaceinvoke $r19.<net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble: double getDouble(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r20 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble marginRight>;

        d1 = interfaceinvoke $r20.<net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble: double getDouble(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r21 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.TextBlock visibility>;

        if $r21 == null goto label4;

        $r23 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.TextBlock visibility>;

        $r24 = interfaceinvoke $r23.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $d4 = virtualinvoke $r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d7 = $d6 + $d4;

     label4:
        $r22 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d2 = d7 + d0;

        $d3 = $d2 + d1;

        specialinvoke $r22.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d3, d5);

        return $r22;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.creole.legacy.AtomText r0;
        net.sourceforge.plantuml.Url $r1, $r40, $r50;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r33, $r36;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3, $r7, $r15, $r26, $r32, r43;
        java.util.StringTokenizer $r4;
        java.lang.String $r5, $r9, r13;
        net.sourceforge.plantuml.graphic.StringBounder $r6, $r11, $r12, $r14, $r22, $r37;
        net.sourceforge.plantuml.ugraphic.UFont $r8, $r16;
        net.sourceforge.plantuml.awt.geom.Dimension2D r10, $r38, r49;
        double d0, $d1, d2, d3, $d4, $d5, $d6, d7, d8, d9;
        net.sourceforge.plantuml.ugraphic.UText $r17;
        net.sourceforge.plantuml.ugraphic.UTranslate $r19, $r23, $r34, $r39;
        net.sourceforge.plantuml.ugraphic.UGraphic $r20, $r35, r41;
        net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble $r21, $r46, $r47;
        net.sourceforge.plantuml.ugraphic.UParam $r24, $r27, $r29;
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic $r25;
        net.sourceforge.plantuml.ugraphic.color.HColor $r28, $r30, r42, r44, r45;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r31;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        r41 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.Url url>;

        if $r1 == null goto label01;

        $r40 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.Url url>;

        interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: void startUrl(net.sourceforge.plantuml.Url)>($r40);

     label01:
        $z0 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: boolean matchesProperty(java.lang.String)>("SPECIALTXT");

        if $z0 == 0 goto label02;

        interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r0);

        goto label11;

     label02:
        $r2 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.TextBlock visibility>;

        if $r2 == null goto label03;

        $r33 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.TextBlock visibility>;

        $r34 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(2.0);

        $r35 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r34);

        interfaceinvoke $r33.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r35);

        $r36 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.TextBlock visibility>;

        $r37 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r38 = interfaceinvoke $r36.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r37);

        d7 = virtualinvoke $r38.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r39 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d7);

        r41 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r39);

     label03:
        $r3 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        r42 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        r43 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $z1 = r42 instanceof net.sourceforge.plantuml.ugraphic.color.HColorAutomaticLegacy;

        if $z1 == 0 goto label04;

        $r27 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        if $r28 == null goto label04;

        $r29 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r30 = interfaceinvoke $r29.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $r31 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) $r30;

        r42 = virtualinvoke $r31.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColorSimple opposite()>();

        $r32 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        r43 = virtualinvoke $r32.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration changeColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r42);

     label04:
        $z5 = r42 instanceof net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        if $z5 == 0 goto label06;

        $r24 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        r44 = interfaceinvoke $r24.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        if r44 != null goto label05;

        r44 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.color.HColor getDefaultBackground()>();

     label05:
        $r25 = (net.sourceforge.plantuml.ugraphic.color.HColorAutomatic) r42;

        r45 = virtualinvoke $r25.<net.sourceforge.plantuml.ugraphic.color.HColorAutomatic: net.sourceforge.plantuml.ugraphic.color.HColor getAppropriateColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r44);

        $r26 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        r43 = virtualinvoke $r26.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration changeColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r45);

     label06:
        $r46 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble marginLeft>;

        $r47 = <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO>;

        if $r46 == $r47 goto label07;

        $r21 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble marginLeft>;

        $r22 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d6 = interfaceinvoke $r21.<net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble: double getDouble(net.sourceforge.plantuml.graphic.StringBounder)>($r22);

        $r23 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d6);

        r41 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r23);

     label07:
        $r4 = new java.util.StringTokenizer;

        $r5 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r5, "\t", 1);

        $r6 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r7 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $r9 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        r10 = interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r8, $r9);

        $r11 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d0 = specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.AtomText: double getDescent(net.sourceforge.plantuml.graphic.StringBounder)>($r11);

        $d1 = virtualinvoke r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d2 = $d1 - d0;

        d8 = 0.0;

        $z2 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 == 0 goto label11;

        $r12 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d3 = specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.AtomText: double getTabSize(net.sourceforge.plantuml.graphic.StringBounder)>($r12);

     label08:
        $z3 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z3 == 0 goto label11;

        r13 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z4 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("\t");

        if $z4 == 0 goto label09;

        d9 = d8 % d3;

        $d5 = d3 - d9;

        d8 = d8 + $d5;

        goto label10;

     label09:
        $r14 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r15 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        r49 = interfaceinvoke $r14.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r16, r13);

        $r17 = new net.sourceforge.plantuml.ugraphic.UText;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.UText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration)>(r13, r43);

        $r19 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r19.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d8, d2);

        $r20 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke $r20.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r17);

        $d4 = virtualinvoke r49.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d8 = d8 + $d4;

     label10:
        goto label08;

     label11:
        $r50 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.Url url>;

        if $r50 == null goto label12;

        interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: void closeUrl()>();

     label12:
        return;
    }

    private double getWidth(net.sourceforge.plantuml.graphic.StringBounder, java.lang.String)
    {
        java.util.StringTokenizer $r0;
        java.lang.String r1, r5;
        net.sourceforge.plantuml.creole.legacy.AtomText r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        double d0, $d1, $d2, d3, d4;
        boolean $z0, $z1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r6;
        net.sourceforge.plantuml.ugraphic.UFont $r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D r8;

        r3 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r1, "\t", 1);

        d0 = specialinvoke r3.<net.sourceforge.plantuml.creole.legacy.AtomText: double getTabSize(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        d3 = 0.0;

     label1:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label4;

        r5 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("\t");

        if $z1 == 0 goto label2;

        d4 = d3 % d0;

        $d2 = d0 - d4;

        d3 = d3 + $d2;

        goto label3;

     label2:
        $r6 = r3.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        r8 = interfaceinvoke r4.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r7, r5);

        $d1 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d3 = d3 + $d1;

     label3:
        goto label1;

     label4:
        return d3;
    }

    private java.lang.String tabString()
    {
        net.sourceforge.plantuml.creole.legacy.AtomText r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1;
        int i0;
        java.lang.String $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        i0 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: int getTabSize()>();

        if i0 < 1 goto label1;

        if i0 >= 7 goto label1;

        $r2 = "        ";

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r3;

     label1:
        return "        ";
    }

    private double getDescent(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.creole.legacy.AtomText r1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2;
        net.sourceforge.plantuml.ugraphic.UFont $r3;
        java.lang.String $r4;
        double $d0;

        r1 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $r4 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $d0 = interfaceinvoke r0.<net.sourceforge.plantuml.graphic.StringBounder: double getDescent(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r3, $r4);

        return $d0;
    }

    private double getTabSize(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.creole.legacy.AtomText r1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2;
        net.sourceforge.plantuml.ugraphic.UFont $r3;
        java.lang.String $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r5;
        double $d0;

        r1 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $r4 = specialinvoke r1.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String tabString()>();

        $r5 = interfaceinvoke r0.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r3, $r4);

        $d0 = virtualinvoke $r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        return $d0;
    }

    private final java.util.Collection splitted()
    {
        java.util.ArrayList $r0;
        java.lang.StringBuilder $r2, $r11, $r12, $r13;
        net.sourceforge.plantuml.creole.legacy.AtomText r4;
        java.lang.String $r5, $r6, $r7, $r10, $r14, $r15;
        int $i0, $i1, $i3, i4;
        char c2;
        boolean $z1, $z2;

        r4 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i4 = 0;

     label1:
        $r5 = r4.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i4 >= $i0 goto label6;

        $r7 = r4.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        c2 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i4);

        $z1 = specialinvoke r4.<net.sourceforge.plantuml.creole.legacy.AtomText: boolean isSeparator(char)>(c2);

        if $z1 == 0 goto label3;

        $i3 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label2;

        $r15 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r15);

     label2:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label5;

     label3:
        $z2 = specialinvoke r4.<net.sourceforge.plantuml.creole.legacy.AtomText: boolean isChineseSentenceBoundary(char)>(c2);

        if $z2 == 0 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label5;

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label7;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label7:
        return $r0;
    }

    private final java.util.Collection splittedOld()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.creole.legacy.AtomText r2;
        java.lang.String $r3, $r4, $r8, $r9, $r10, $r11, $r15, $r17;
        int $i0, $i2, $i3, $i4, i8;
        char c1, $c5, $c6, $c7;
        boolean $z0, $z2;
        java.lang.StringBuilder $r5, $r13, $r14, $r16;

        r2 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i8 = 0;

     label1:
        $r3 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i8 >= $i0 goto label6;

        $r4 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        c1 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(i8);

        $z0 = specialinvoke r2.<net.sourceforge.plantuml.creole.legacy.AtomText: boolean isSeparator(char)>(c1);

        if $z0 == 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r15 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $c7 = virtualinvoke $r15.<java.lang.String: char charAt(int)>(i8);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label5;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label3:
        $i2 = i8 + 1;

        $r8 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $i3 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label4;

        $r10 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $i4 = i8 + 1;

        $c5 = virtualinvoke $r10.<java.lang.String: char charAt(int)>($i4);

        $z2 = specialinvoke r2.<net.sourceforge.plantuml.creole.legacy.AtomText: boolean isSeparator(char)>($c5);

        if $z2 != 0 goto label4;

        i8 = i8 + 1;

        $r11 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $c6 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(i8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        goto label3;

     label4:
        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

     label5:
        i8 = i8 + 1;

        goto label1;

     label6:
        return $r0;
    }

    public java.util.List getSplitted(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.LineBreakStrategy)
    {
        net.sourceforge.plantuml.LineBreakStrategy r0;
        double d0, d1;
        byte $b0, $b1;
        java.util.ArrayList $r1;
        java.util.StringTokenizer $r3;
        net.sourceforge.plantuml.creole.legacy.AtomText r4, $r10, $r25;
        java.lang.String $r5, $r9, r12, r17, $r22, $r24;
        java.lang.StringBuilder $r7, $r19, $r20, $r21;
        boolean $z0, $z2, $z4;
        java.util.List $r11, $r14;
        java.lang.String[] $r13;
        java.util.Iterator r15;
        java.lang.Object $r16;
        net.sourceforge.plantuml.graphic.StringBounder r18;
        java.lang.IllegalStateException $r27;

        r4 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        r18 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r0 := @parameter1: net.sourceforge.plantuml.LineBreakStrategy;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.LineBreakStrategy: double getMaxWidth()>();

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r27 = new java.lang.IllegalStateException;

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>()>();

        throw $r27;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = new java.util.StringTokenizer;

        $r5 = r4.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r5, " ", 1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

     label2:
        $z0 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label7;

        r12 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r13 = newarray (java.lang.String)[1];

        $r13[0] = r12;

        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13);

        r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r16 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r16;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        d1 = specialinvoke r4.<net.sourceforge.plantuml.creole.legacy.AtomText: double getWidth(net.sourceforge.plantuml.graphic.StringBounder,java.lang.String)>(r18, $r22);

        $b1 = d1 cmpl d0;

        if $b1 <= 0 goto label4;

        $r24 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = specialinvoke r4.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText withText(java.lang.String)>($r24);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r25);

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>(0);

        $z4 = virtualinvoke r17.<java.lang.String: boolean startsWith(java.lang.String)>(" ");

        if $z4 != 0 goto label5;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        goto label5;

     label4:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

     label5:
        goto label3;

     label6:
        goto label2;

     label7:
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = specialinvoke r4.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText withText(java.lang.String)>($r9);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r11;
    }

    public java.util.List splitInTwo(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        java.lang.StringBuilder $r0, $r10, $r12, $r13;
        net.sourceforge.plantuml.creole.legacy.AtomText r2, r16, r18;
        java.util.Collection $r3;
        java.util.Iterator r4;
        boolean $z0, $z1;
        java.util.List $r5, $r20;
        java.lang.Object $r6;
        java.lang.String r7, $r11, $r14, $r15, $r17, r21;
        int $i0, $i2;
        net.sourceforge.plantuml.graphic.StringBounder r9;
        double $d0, d1;
        byte $b1;
        net.sourceforge.plantuml.creole.atom.Atom[] $r19;

        r2 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        r9 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 := @parameter1: double;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r2.<net.sourceforge.plantuml.creole.legacy.AtomText: java.util.Collection splitted()>();

        r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $d0 = specialinvoke r2.<net.sourceforge.plantuml.creole.legacy.AtomText: double getWidth(net.sourceforge.plantuml.graphic.StringBounder,java.lang.String)>(r9, $r14);

        $b1 = $d0 cmpl d1;

        if $b1 <= 0 goto label4;

        $r15 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        r16 = specialinvoke r2.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText withText(java.lang.String)>($r15);

        $r17 = r2.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $i2 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        r21 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int)>($i2);

     label2:
        $z1 = virtualinvoke r21.<java.lang.String: boolean startsWith(java.lang.String)>(" ");

        if $z1 == 0 goto label3;

        r21 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int)>(1);

        goto label2;

     label3:
        r18 = specialinvoke r2.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.creole.legacy.AtomText withText(java.lang.String)>(r21);

        $r19 = newarray (net.sourceforge.plantuml.creole.atom.Atom)[2];

        $r19[0] = r16;

        $r19[1] = r18;

        $r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19);

        return $r20;

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        goto label1;

     label5:
        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r2);

        return $r5;
    }

    private boolean isSeparator(char)
    {
        char c0;
        boolean $z0;
        net.sourceforge.plantuml.creole.legacy.AtomText r0;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        c0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c0);

        return $z0;
    }

    private boolean isChineseSentenceBoundary(char)
    {
        char c0;
        net.sourceforge.plantuml.creole.legacy.AtomText r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        c0 := @parameter0: char;

        if c0 == 65281 goto label1;

        if c0 == 65292 goto label1;

        if c0 == 65306 goto label1;

        if c0 == 65307 goto label1;

        if c0 == 65311 goto label1;

        if c0 != 12290 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final java.lang.String getText()
    {
        net.sourceforge.plantuml.creole.legacy.AtomText r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        return $r1;
    }

    public double getStartingAltitude(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.creole.legacy.AtomText r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1;
        int $i0;
        double $d0;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: int getSpace()>();

        $d0 = (double) $i0;

        return $d0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        net.sourceforge.plantuml.creole.legacy.AtomText r1;
        java.lang.String $r2, $r7;
        net.sourceforge.plantuml.graphic.FontConfiguration $r5;

        r1 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: java.lang.String text>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()
    {
        net.sourceforge.plantuml.creole.legacy.AtomText r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.AtomText;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.AtomText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        return $r1;
    }
}
