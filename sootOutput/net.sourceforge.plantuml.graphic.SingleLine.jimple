class net.sourceforge.plantuml.graphic.SingleLine extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.Line
{
    private final java.util.List blocs;
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment;

    public static net.sourceforge.plantuml.graphic.SingleLine withSomeHtmlTag(java.lang.String, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.SpriteContainer)
    {
        net.sourceforge.plantuml.graphic.SingleLine $r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.FontConfiguration r2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r3;
        net.sourceforge.plantuml.SpriteContainer r4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r4 := @parameter3: net.sourceforge.plantuml.SpriteContainer;

        $r0 = new net.sourceforge.plantuml.graphic.SingleLine;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SingleLine: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.SpriteContainer)>(r1, r2, r3, r4);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.SingleLine rawText(java.lang.String, net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.graphic.SingleLine $r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.FontConfiguration r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        $r0 = new net.sourceforge.plantuml.graphic.SingleLine;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SingleLine: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration)>(r1, r2);

        return $r0;
    }

    private void <init>(java.lang.String, net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.graphic.SingleLine r0;
        java.util.ArrayList $r1;
        int $i0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r2;
        net.sourceforge.plantuml.graphic.TileText $r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4;
        java.util.List $r5;
        java.lang.String r6;

        r0 := @this: net.sourceforge.plantuml.graphic.SingleLine;

        r6 := @parameter0: java.lang.String;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.SingleLine: java.util.List blocs> = $r1;

        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        r6 = " ";

     label1:
        $r2 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        r0.<net.sourceforge.plantuml.graphic.SingleLine: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment> = $r2;

        $r5 = r0.<net.sourceforge.plantuml.graphic.SingleLine: java.util.List blocs>;

        $r3 = new net.sourceforge.plantuml.graphic.TileText;

        specialinvoke $r3.<net.sourceforge.plantuml.graphic.TileText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url)>(r6, r4, null);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    private void <init>(java.lang.String, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.SpriteContainer)
    {
        net.sourceforge.plantuml.graphic.SingleLine r0;
        java.util.ArrayList $r1;
        int $i0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r2;
        net.sourceforge.plantuml.graphic.Splitter $r3;
        net.sourceforge.plantuml.SpriteContainer r5;
        net.sourceforge.plantuml.api.ThemeStyle $r6;
        java.util.List $r7, $r14, $r18, $r24, $r27;
        java.util.Iterator r8;
        java.lang.Object $r9;
        net.sourceforge.plantuml.graphic.HtmlCommand r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z9;
        net.sourceforge.plantuml.graphic.FontChange $r11;
        net.sourceforge.plantuml.graphic.SpriteCommand $r12;
        java.lang.String $r13, r28, r30, r31;
        net.sourceforge.plantuml.ugraphic.color.HColor $r15;
        net.sourceforge.plantuml.graphic.TextBlock $r16, $r19;
        net.sourceforge.plantuml.graphic.Img $r17;
        net.sourceforge.plantuml.graphic.TextLink $r20, $r21;
        net.sourceforge.plantuml.Url r22;
        net.sourceforge.plantuml.graphic.TileText $r23, $r26;
        net.sourceforge.plantuml.graphic.Text $r25;
        net.sourceforge.plantuml.graphic.FontConfiguration r29;
        net.sourceforge.plantuml.sprite.Sprite r32;

        r0 := @this: net.sourceforge.plantuml.graphic.SingleLine;

        r28 := @parameter0: java.lang.String;

        r29 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r5 := @parameter3: net.sourceforge.plantuml.SpriteContainer;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.SingleLine: java.util.List blocs> = $r1;

        $i0 = virtualinvoke r28.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        r28 = " ";

     label1:
        r0.<net.sourceforge.plantuml.graphic.SingleLine: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment> = r2;

        $r3 = new net.sourceforge.plantuml.graphic.Splitter;

        specialinvoke $r3.<net.sourceforge.plantuml.graphic.Splitter: void <init>(java.lang.String)>(r28);

        $r6 = interfaceinvoke r5.<net.sourceforge.plantuml.SpriteContainer: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r7 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.Splitter: java.util.List getHtmlCommands(net.sourceforge.plantuml.api.ThemeStyle,boolean)>($r6, 0);

        r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z9 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label9;

        $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.graphic.HtmlCommand) $r9;

        $z0 = r10 instanceof net.sourceforge.plantuml.graphic.Text;

        if $z0 == 0 goto label3;

        $r25 = (net.sourceforge.plantuml.graphic.Text) r10;

        r30 = virtualinvoke $r25.<net.sourceforge.plantuml.graphic.Text: java.lang.String getText()>();

        $r27 = r0.<net.sourceforge.plantuml.graphic.SingleLine: java.util.List blocs>;

        $r26 = new net.sourceforge.plantuml.graphic.TileText;

        specialinvoke $r26.<net.sourceforge.plantuml.graphic.TileText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url)>(r30, r29, null);

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label8;

     label3:
        $z1 = r10 instanceof net.sourceforge.plantuml.graphic.TextLink;

        if $z1 == 0 goto label4;

        $r20 = (net.sourceforge.plantuml.graphic.TextLink) r10;

        r31 = virtualinvoke $r20.<net.sourceforge.plantuml.graphic.TextLink: java.lang.String getText()>();

        $r21 = (net.sourceforge.plantuml.graphic.TextLink) r10;

        r22 = virtualinvoke $r21.<net.sourceforge.plantuml.graphic.TextLink: net.sourceforge.plantuml.Url getUrl()>();

        $r24 = r0.<net.sourceforge.plantuml.graphic.SingleLine: java.util.List blocs>;

        $r23 = new net.sourceforge.plantuml.graphic.TileText;

        specialinvoke $r23.<net.sourceforge.plantuml.graphic.TileText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url)>(r31, r29, r22);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r23);

        goto label8;

     label4:
        $z2 = r10 instanceof net.sourceforge.plantuml.graphic.Img;

        if $z2 == 0 goto label5;

        $r18 = r0.<net.sourceforge.plantuml.graphic.SingleLine: java.util.List blocs>;

        $r17 = (net.sourceforge.plantuml.graphic.Img) r10;

        $r19 = virtualinvoke $r17.<net.sourceforge.plantuml.graphic.Img: net.sourceforge.plantuml.graphic.TextBlock createMonoImage()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        goto label8;

     label5:
        $z3 = r10 instanceof net.sourceforge.plantuml.graphic.SpriteCommand;

        if $z3 == 0 goto label7;

        $r12 = (net.sourceforge.plantuml.graphic.SpriteCommand) r10;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.graphic.SpriteCommand: java.lang.String getSprite()>();

        r32 = interfaceinvoke r5.<net.sourceforge.plantuml.SpriteContainer: net.sourceforge.plantuml.sprite.Sprite getSprite(java.lang.String)>($r13);

        if r32 == null goto label6;

        $r14 = r0.<net.sourceforge.plantuml.graphic.SingleLine: java.util.List blocs>;

        $r15 = virtualinvoke r29.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r16 = interfaceinvoke r32.<net.sourceforge.plantuml.sprite.Sprite: net.sourceforge.plantuml.graphic.TextBlock asTextBlock(net.sourceforge.plantuml.ugraphic.color.HColor,double)>($r15, 1.0);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r16);

     label6:
        goto label8;

     label7:
        $z4 = r10 instanceof net.sourceforge.plantuml.graphic.FontChange;

        if $z4 == 0 goto label8;

        $r11 = (net.sourceforge.plantuml.graphic.FontChange) r10;

        r29 = interfaceinvoke $r11.<net.sourceforge.plantuml.graphic.FontChange: net.sourceforge.plantuml.graphic.FontConfiguration apply(net.sourceforge.plantuml.graphic.FontConfiguration)>(r29);

     label8:
        goto label2;

     label9:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.SingleLine r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        net.sourceforge.plantuml.Dimension2DDouble $r3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.graphic.TextBlock r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D r7;
        double $d0, $d1, d2, d3;

        r0 := @this: net.sourceforge.plantuml.graphic.SingleLine;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d2 = 0.0;

        d3 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.graphic.SingleLine: java.util.List blocs>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.graphic.TextBlock) $r4;

        r7 = interfaceinvoke r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = d2 + $d0;

        $d1 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d3 = staticinvoke <java.lang.Math: double max(double,double)>(d3, $d1);

        goto label1;

     label2:
        $r3 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r3.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d2, d3);

        return $r3;
    }

    private double maxDeltaY(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.SingleLine r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2, $r8;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r9;
        java.util.List $r4;
        java.util.Iterator r5;
        java.lang.Object $r6;
        net.sourceforge.plantuml.graphic.TextBlock r7;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3, d4, d5;
        net.sourceforge.plantuml.graphic.TileText $r10;

        r0 := @this: net.sourceforge.plantuml.graphic.SingleLine;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d5 = 0.0;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.SingleLine: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r4 = r0.<net.sourceforge.plantuml.graphic.SingleLine: java.util.List blocs>;

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.graphic.TextBlock) $r6;

        $z0 = r7 instanceof net.sourceforge.plantuml.graphic.TileText;

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $r8 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r9 = interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r8);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = $d0 - $d1;

        $r10 = (net.sourceforge.plantuml.graphic.TileText) r7;

        $d3 = virtualinvoke $r10.<net.sourceforge.plantuml.graphic.TileText: double getFontSize2D()>();

        d4 = $d2 + $d3;

        d5 = staticinvoke <java.lang.Math: double max(double,double)>(d5, d4);

        goto label1;

     label3:
        return d5;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.SingleLine r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r10, $r13;
        double d0, $d1, $d2, d3, $d4, d5;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, $r8, $r11;
        java.util.List $r4;
        java.util.Iterator r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        net.sourceforge.plantuml.graphic.TextBlock r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9, $r12;

        r0 := @this: net.sourceforge.plantuml.graphic.SingleLine;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 = specialinvoke r0.<net.sourceforge.plantuml.graphic.SingleLine: double maxDeltaY(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.SingleLine: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        d5 = 0.0;

        $r4 = r0.<net.sourceforge.plantuml.graphic.SingleLine: java.util.List blocs>;

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.graphic.TextBlock) $r6;

        $z1 = r7 instanceof net.sourceforge.plantuml.graphic.TileText;

        if $z1 == 0 goto label2;

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d5, d0);

        $r13 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r13);

        goto label3;

     label2:
        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r8 = interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d2 = virtualinvoke $r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d3 = $d1 - $d2;

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d5, d3);

        $r10 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r10);

     label3:
        $r11 = interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d4 = virtualinvoke $r11.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d5 = d5 + $d4;

        goto label1;

     label4:
        return;
    }

    public net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()
    {
        net.sourceforge.plantuml.graphic.SingleLine r0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.SingleLine;

        $r1 = r0.<net.sourceforge.plantuml.graphic.SingleLine: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        return $r1;
    }
}
