public class net.sourceforge.plantuml.statediagram.command.CommandLinkState extends net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon
{

    public void <init>()
    {
        net.sourceforge.plantuml.statediagram.command.CommandLinkState r0;
        net.sourceforge.plantuml.command.regex.RegexConcat $r1;

        r0 := @this: net.sourceforge.plantuml.statediagram.command.CommandLinkState;

        $r1 = staticinvoke <net.sourceforge.plantuml.statediagram.command.CommandLinkState: net.sourceforge.plantuml.command.regex.RegexConcat getRegex()>();

        specialinvoke r0.<net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.RegexConcat getRegex()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r7, $r21;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r22, $r23, $r24, $r25;
        net.sourceforge.plantuml.command.regex.RegexConcat $r6, $r20, $r26;
        net.sourceforge.plantuml.command.regex.RegexOptional $r19;

        $r0 = class "Lnet/sourceforge/plantuml/statediagram/command/CommandLinkState;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[9];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.statediagram.command.CommandLinkState: net.sourceforge.plantuml.command.regex.RegexLeaf getStatePattern(java.lang.String)>("ENT1");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r7 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[8];

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_CROSS_START", "(x)?");

        $r7[0] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODY1", "(-+)");

        $r7[1] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE1", "(?:\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)\\])?");

        $r7[2] = $r10;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_DIRECTION", "(left|right|up|down|le?|ri?|up?|do?)?");

        $r7[3] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE2", "(?:\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)\\])?");

        $r7[4] = $r12;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODY2", "(-*)");

        $r7[5] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\>");

        $r7[6] = $r14;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_CIRCLE_END", "(o[%s]+)?");

        $r7[7] = $r15;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r7);

        $r2[3] = $r6;

        $r16 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r16;

        $r17 = staticinvoke <net.sourceforge.plantuml.statediagram.command.CommandLinkState: net.sourceforge.plantuml.command.regex.RegexLeaf getStatePattern(java.lang.String)>("ENT2");

        $r2[5] = $r17;

        $r18 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r18;

        $r19 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r21 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r22 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r22.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(":");

        $r21[0] = $r22;

        $r23 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r21[1] = $r23;

        $r24 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r24.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LABEL", "(.+)");

        $r21[2] = $r24;

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r21);

        specialinvoke $r19.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r20);

        $r2[7] = $r19;

        $r25 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[8] = $r25;

        $r26 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r26;
    }
}
