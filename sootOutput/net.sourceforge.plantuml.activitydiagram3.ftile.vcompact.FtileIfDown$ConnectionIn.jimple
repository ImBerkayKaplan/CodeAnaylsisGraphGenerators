class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection implements net.sourceforge.plantuml.activitydiagram3.ftile.ConnectionTranslatable
{
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$400(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r4;

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r5;
        java.awt.geom.Point2D $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r1);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r7 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r6);

        return $r7;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r5;
        java.awt.geom.Point2D $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate access$500(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r1);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        $r7 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r6);

        return $r7;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r3;
        net.sourceforge.plantuml.ISkinParam $r4;
        net.sourceforge.plantuml.graphic.Rainbow $r5;
        net.sourceforge.plantuml.ugraphic.UPolygon $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r7;
        java.awt.geom.Point2D $r8, $r9;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r4, $r5, $r6);

        $r8 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r8);

        $r9 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r9);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r7);

        return;
    }

    public void drawTranslate(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn r2;
        java.awt.geom.Point2D r3, r4, r11, r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.graphic.Rainbow $r7;
        net.sourceforge.plantuml.ugraphic.UPolygon $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r9;
        net.sourceforge.plantuml.ugraphic.UTranslate r10, r12;
        double $d0, $d1, $d2, d3, $d4, $d5;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r10 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        r12 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r4 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r6, $r7, $r8);

        r11 = virtualinvoke r10.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r3);

        r13 = virtualinvoke r12.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r4);

        $d0 = virtualinvoke r11.<java.awt.geom.Point2D: double getY()>();

        $d1 = virtualinvoke r13.<java.awt.geom.Point2D: double getY()>();

        $d2 = $d0 + $d1;

        d3 = $d2 / 2.0;

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r11);

        $d4 = virtualinvoke r11.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d4, d3);

        $d5 = virtualinvoke r13.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d5, d3);

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r13);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r9);

        return;
    }
}
