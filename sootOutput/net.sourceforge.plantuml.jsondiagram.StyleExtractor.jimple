public class net.sourceforge.plantuml.jsondiagram.StyleExtractor extends java.lang.Object
{
    private final java.util.List list;
    private final java.util.List style;
    private java.lang.String title;

    public void <init>(java.util.Iterator)
    {
        net.sourceforge.plantuml.jsondiagram.StyleExtractor r0;
        java.util.ArrayList $r1, $r2;
        java.util.Iterator r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z13;
        java.lang.Object $r4, $r21, $r28;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r26;
        java.util.List $r15, $r27;
        int $i0;
        net.sourceforge.plantuml.StringLocated r29;

        r0 := @this: net.sourceforge.plantuml.jsondiagram.StyleExtractor;

        r3 := @parameter0: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: java.util.List list> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: java.util.List style> = $r2;

        r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: java.lang.String title> = null;

     label01:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r29 = (net.sourceforge.plantuml.StringLocated) $r4;

        $z1 = specialinvoke r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: boolean startStyle(net.sourceforge.plantuml.StringLocated)>(r29);

        if $z1 == 0 goto label04;

     label02:
        $z11 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label12;

        $r27 = r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: java.util.List style>;

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>(r29);

        $z13 = specialinvoke r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: boolean endStyle(net.sourceforge.plantuml.StringLocated)>(r29);

        if $z13 == 0 goto label03;

        goto label12;

     label03:
        $r28 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r29 = (net.sourceforge.plantuml.StringLocated) $r28;

        goto label02;

     label04:
        $r5 = virtualinvoke r29.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("!assume ");

        if $z2 == 0 goto label05;

        goto label12;

     label05:
        $r7 = virtualinvoke r29.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("!pragma ");

        if $z3 == 0 goto label06;

        goto label12;

     label06:
        $r9 = virtualinvoke r29.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $z4 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("hide ");

        if $z4 == 0 goto label07;

        goto label12;

     label07:
        $r11 = virtualinvoke r29.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        $z5 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("title ");

        if $z5 == 0 goto label08;

        $r22 = virtualinvoke r29.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r23 = virtualinvoke $r22.<java.lang.String: java.lang.String trim()>();

        $r24 = "title ";

        $i0 = virtualinvoke $r24.<java.lang.String: int length()>();

        $r25 = virtualinvoke $r23.<java.lang.String: java.lang.String substring(int)>($i0);

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String trim()>();

        r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: java.lang.String title> = $r26;

        goto label12;

     label08:
        $r13 = virtualinvoke r29.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        $z6 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("skinparam ");

        if $z6 == 0 goto label11;

        $r17 = virtualinvoke r29.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();

        $z8 = virtualinvoke $r18.<java.lang.String: boolean contains(java.lang.CharSequence)>("{");

        if $z8 == 0 goto label12;

     label09:
        $z9 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label12;

        $r19 = virtualinvoke r29.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        $z10 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("}");

        if $z10 == 0 goto label10;

        goto label12;

     label10:
        $r21 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r29 = (net.sourceforge.plantuml.StringLocated) $r21;

        goto label09;

     label11:
        $r15 = r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: java.util.List list>;

        $r16 = virtualinvoke r29.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

     label12:
        goto label01;

     label13:
        return;
    }

    private boolean startStyle(net.sourceforge.plantuml.StringLocated)
    {
        net.sourceforge.plantuml.StringLocated r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        net.sourceforge.plantuml.jsondiagram.StyleExtractor r3;

        r3 := @this: net.sourceforge.plantuml.jsondiagram.StyleExtractor;

        r0 := @parameter0: net.sourceforge.plantuml.StringLocated;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("<style>");

        return $z0;
    }

    private boolean endStyle(net.sourceforge.plantuml.StringLocated)
    {
        net.sourceforge.plantuml.StringLocated r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        net.sourceforge.plantuml.jsondiagram.StyleExtractor r3;

        r3 := @this: net.sourceforge.plantuml.jsondiagram.StyleExtractor;

        r0 := @parameter0: net.sourceforge.plantuml.StringLocated;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("</style>");

        return $z0;
    }

    public void applyStyles(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.jsondiagram.StyleExtractor r0;
        java.util.List $r1, $r4;
        int $i0;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.style.StyleBuilder r3;
        net.sourceforge.plantuml.command.BlocLines r5, $r6;
        java.util.Collection $r7;
        java.util.Iterator r8;
        boolean $z0;
        java.lang.Object $r9;
        net.sourceforge.plantuml.style.Style r10;

        r0 := @this: net.sourceforge.plantuml.jsondiagram.StyleExtractor;

        r2 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        $r1 = r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: java.util.List style>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        r3 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r4 = r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: java.util.List style>;

        r5 = staticinvoke <net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines 'from'(java.util.List)>($r4);

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines subExtract(int,int)>(1, 1);

        $r7 = staticinvoke <net.sourceforge.plantuml.style.StyleLoader: java.util.Collection getDeclaredStyles(net.sourceforge.plantuml.command.BlocLines,net.sourceforge.plantuml.style.AutomaticCounter)>($r6, r3);

        r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.style.Style) $r9;

        interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: void muteStyle(net.sourceforge.plantuml.style.Style)>(r10);

        goto label1;

     label2:
        return;
    }

    public java.util.Iterator getIterator()
    {
        net.sourceforge.plantuml.jsondiagram.StyleExtractor r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: net.sourceforge.plantuml.jsondiagram.StyleExtractor;

        $r1 = r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: java.util.List list>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.lang.String getTitle()
    {
        net.sourceforge.plantuml.jsondiagram.StyleExtractor r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.jsondiagram.StyleExtractor;

        $r1 = r0.<net.sourceforge.plantuml.jsondiagram.StyleExtractor: java.lang.String title>;

        return $r1;
    }
}
