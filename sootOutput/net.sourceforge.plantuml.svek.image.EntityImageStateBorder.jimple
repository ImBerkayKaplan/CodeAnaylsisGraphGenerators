public class net.sourceforge.plantuml.svek.image.EntityImageStateBorder extends net.sourceforge.plantuml.svek.image.AbstractEntityImageBorder
{
    private final net.sourceforge.plantuml.style.SName sname;

    public void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.svek.Cluster, net.sourceforge.plantuml.svek.Bibliotekon, net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.svek.image.EntityImageStateBorder r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.svek.Cluster r3;
        net.sourceforge.plantuml.svek.Bibliotekon r4;
        net.sourceforge.plantuml.FontParam $r5;
        net.sourceforge.plantuml.style.SName r6;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageStateBorder;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.svek.Cluster;

        r4 := @parameter3: net.sourceforge.plantuml.svek.Bibliotekon;

        r6 := @parameter4: net.sourceforge.plantuml.style.SName;

        $r5 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam STATE>;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.AbstractEntityImageBorder: void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.svek.Cluster,net.sourceforge.plantuml.svek.Bibliotekon,net.sourceforge.plantuml.FontParam)>(r1, r2, r3, r4, $r5);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.style.SName sname> = r6;

        return;
    }

    private net.sourceforge.plantuml.style.StyleSignature getSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r4;
        net.sourceforge.plantuml.svek.image.EntityImageStateBorder r3;
        net.sourceforge.plantuml.style.StyleSignature $r5;

        r3 := @this: net.sourceforge.plantuml.svek.image.EntityImageStateBorder;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r4 = r3.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.style.SName sname>;

        $r0[2] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    private boolean upPosition()
    {
        net.sourceforge.plantuml.svek.image.EntityImageStateBorder r0;
        net.sourceforge.plantuml.svek.Cluster $r1, $r2;
        net.sourceforge.plantuml.svek.ClusterPosition $r3;
        java.awt.geom.Point2D r4;
        net.sourceforge.plantuml.svek.Bibliotekon $r5;
        net.sourceforge.plantuml.cucadiagram.IEntity $r6;
        net.sourceforge.plantuml.svek.SvekNode r7;
        double $d0, $d1;
        byte $b0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageStateBorder;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.svek.Cluster parent>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.svek.Cluster parent>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.svek.Cluster: net.sourceforge.plantuml.svek.ClusterPosition getClusterPosition()>();

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.svek.ClusterPosition: java.awt.geom.Point2D getPointCenter()>();

        $r5 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.svek.Bibliotekon bibliotekon>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        r7 = virtualinvoke $r5.<net.sourceforge.plantuml.svek.Bibliotekon: net.sourceforge.plantuml.svek.SvekNode getNode(net.sourceforge.plantuml.cucadiagram.IEntity)>($r6);

        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.svek.SvekNode: double getMinY()>();

        $d1 = virtualinvoke r4.<java.awt.geom.Point2D: double getY()>();

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.image.EntityImageStateBorder r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r5;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0, $d1, $d2, d3, $d4, $d5, d7;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, r34, $r38, r39, r41;
        net.sourceforge.plantuml.cucadiagram.IEntity $r7;
        net.sourceforge.plantuml.graphic.color.Colors $r8;
        net.sourceforge.plantuml.graphic.color.ColorType $r9;
        net.sourceforge.plantuml.ISkinParam $r10, $r14, $r19, $r24, $r26, $r30, $r32;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r11, $r15;
        net.sourceforge.plantuml.ColorParam[] $r12, $r16;
        net.sourceforge.plantuml.ColorParam $r13, $r17;
        net.sourceforge.plantuml.style.StyleSignature $r18;
        net.sourceforge.plantuml.style.StyleBuilder $r20;
        net.sourceforge.plantuml.style.Style r21;
        net.sourceforge.plantuml.style.PName $r22, $r28;
        net.sourceforge.plantuml.style.Value $r23, $r29;
        net.sourceforge.plantuml.api.ThemeStyle $r25, $r31;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r27, $r33;
        net.sourceforge.plantuml.ugraphic.color.HColor r35, r36;
        net.sourceforge.plantuml.ugraphic.UStroke $r37;
        net.sourceforge.plantuml.ugraphic.UBackground $r40;
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r42;
        net.sourceforge.plantuml.cucadiagram.Rankdir $r43;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageStateBorder;

        r34 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.graphic.TextBlock desc>;

        $r2 = interfaceinvoke r34.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 - 12.0;

        $d2 = $d1 / 2.0;

        d3 = 0.0 - $d2;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: boolean upPosition()>();

        if $z0 == 0 goto label1;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = 12.0 + $d4;

        d7 = 0.0 - $d5;

        goto label2;

     label1:
        d7 = 0.0 + 12.0;

     label2:
        $r5 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.graphic.TextBlock desc>;

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d7);

        $r6 = interfaceinvoke r34.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r6);

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r9 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        r35 = virtualinvoke $r8.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r9);

        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label4;

        $r18 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.style.StyleSignature getSignature()>();

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r21 = virtualinvoke $r18.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r20);

        $r22 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r23 = virtualinvoke r21.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r22);

        $r24 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r26 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r27 = interfaceinvoke $r26.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r36 = interfaceinvoke $r23.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r25, $r27);

        if r35 != null goto label3;

        $r28 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r29 = virtualinvoke r21.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r28);

        $r30 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r31 = interfaceinvoke $r30.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r32 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r33 = interfaceinvoke $r32.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r35 = interfaceinvoke $r29.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r31, $r33);

     label3:
        goto label5;

     label4:
        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r12 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r13 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam stateBorder>;

        $r12[0] = $r13;

        r36 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r10, $r11, $r12);

        if r35 != null goto label5;

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r16 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r17 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam stateBackground>;

        $r16[0] = $r17;

        r35 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r14, $r15, $r16);

     label5:
        $r37 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.ugraphic.UStroke getUStroke()>();

        $r38 = interfaceinvoke r34.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r37);

        r39 = interfaceinvoke $r38.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r36);

        $r40 = interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r41 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r40);

        $r42 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.cucadiagram.EntityPosition entityPosition>;

        $r43 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateBorder: net.sourceforge.plantuml.cucadiagram.Rankdir rankdir>;

        virtualinvoke $r42.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void drawSymbol(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.cucadiagram.Rankdir)>(r41, $r43);

        return;
    }

    private net.sourceforge.plantuml.ugraphic.UStroke getUStroke()
    {
        net.sourceforge.plantuml.ugraphic.UStroke $r0;
        net.sourceforge.plantuml.svek.image.EntityImageStateBorder r1;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageStateBorder;

        $r0 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        return $r0;
    }
}
