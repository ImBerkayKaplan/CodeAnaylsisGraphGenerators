public class net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject;

        $r1 = staticinvoke <net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    private static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r13, $r16;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r17, $r18, $r19;
        java.lang.StringBuilder $r11, $r12, $r14, $r15;
        net.sourceforge.plantuml.command.regex.RegexConcat $r20;

        $r0 = class "Lnet/sourceforge/plantuml/objectdiagram/command/CommandCreateEntityObject;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[11];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TYPE", "object");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("NAME", "(?:[%g]([^%g]+)[%g][%s]+as[%s]+)?([%pLN_.]+)");

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREO", "(\\<\\<.+\\>\\>)?");

        $r2[5] = $r8;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r13 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r16);

        $r2[7] = $r10;

        $r17 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[8] = $r17;

        $r18 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf exp1()>();

        $r2[9] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[10] = $r19;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r20;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r5, r6, r10, $r20, $r34, r40;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r2;
        net.sourceforge.plantuml.cucadiagram.Ident r3;
        boolean $z0, $z1, $z3;
        net.sourceforge.plantuml.cucadiagram.Code r4, $r38;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.cucadiagram.LeafType $r8;
        net.sourceforge.plantuml.cucadiagram.ILeaf r9;
        net.sourceforge.plantuml.graphic.color.ColorType $r11;
        net.sourceforge.plantuml.ISkinParam $r12, $r14, $r19, $r23, $r24, $r28;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r13, $r29;
        net.sourceforge.plantuml.api.ThemeStyle $r15;
        net.sourceforge.plantuml.command.CommandExecutionResult $r16, $r35;
        net.sourceforge.plantuml.UrlBuilder $r18;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r21;
        net.sourceforge.plantuml.Url r22;
        int $i0;
        double $d0;
        net.sourceforge.plantuml.FontParam[] $r25;
        net.sourceforge.plantuml.FontParam $r26;
        net.sourceforge.plantuml.ugraphic.UFont $r27;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r30;
        java.lang.StringBuilder $r31, $r32, $r33;
        net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject r36;
        net.sourceforge.plantuml.LineLocation r37;
        net.sourceforge.plantuml.ugraphic.color.HColor $r41;

        r36 := @this: net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject;

        r2 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r37 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("NAME", 1);

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r1);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r38 = r3;

        goto label2;

     label1:
        $r38 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r1);

     label2:
        r4 = $r38;

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("NAME", 0);

        r6 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREO", 0);

        $z1 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z1 == 0 goto label3;

        $z3 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r3);

        goto label4;

     label3:
        $z3 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>($r38);

     label4:
        if $z3 == 0 goto label5;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object already exists : ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r34);

        return $r35;

     label5:
        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r5);

        $r8 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType OBJECT>;

        r9 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r3, r4, $r7, $r8, null);

        if r6 == null goto label6;

        $r23 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $i0 = interfaceinvoke $r23.<net.sourceforge.plantuml.ISkinParam: int getCircledCharacterRadius()>();

        $d0 = (double) $i0;

        $r24 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r25 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r26 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam CIRCLED_CHARACTER>;

        $r25[0] = $r26;

        $r27 = interfaceinvoke $r24.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UFont getFont(net.sourceforge.plantuml.cucadiagram.Stereotype,boolean,net.sourceforge.plantuml.FontParam[])>(null, 0, $r25);

        $r28 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r29 = interfaceinvoke $r28.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r30 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String,double,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColorSet)>(r6, $d0, $r27, $r29);

        interfaceinvoke r9.<net.sourceforge.plantuml.cucadiagram.IEntity: void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r30);

     label6:
        r10 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        if r10 == null goto label7;

        $r18 = new net.sourceforge.plantuml.UrlBuilder;

        $r19 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: java.lang.String getValue(java.lang.String)>("topurl");

        $r21 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl STRICT>;

        specialinvoke $r18.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>($r20, $r21);

        r22 = virtualinvoke $r18.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>(r10);

        interfaceinvoke r9.<net.sourceforge.plantuml.cucadiagram.IEntity: void addUrl(net.sourceforge.plantuml.Url)>(r22);

     label7:
        r40 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COLOR", 0);

        $r11 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        if r40 != null goto label8;

        $r41 = null;

        goto label9;

     label8:
        $r12 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r14 = virtualinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r41 = virtualinvoke $r13.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r15, r40);

     label9:
        interfaceinvoke r9.<net.sourceforge.plantuml.cucadiagram.IEntity: void setSpecificColorTOBEREMOVED(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>($r11, $r41);

        $r16 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r16;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
