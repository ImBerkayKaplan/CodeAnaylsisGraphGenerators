public class net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.URectangle, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.tikz.TikzGraphics)
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double d0, d1, $d2, $d3, $d4, $d5, d6, $d7, d8, d9;
        net.sourceforge.plantuml.ugraphic.UParam r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, $r6, $r12, $r14;
        boolean $z0;
        net.sourceforge.plantuml.tikz.TikzGraphics r3;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r4;
        java.awt.Color $r5, $r7, r13, r15;
        net.sourceforge.plantuml.ugraphic.UStroke $r8, $r9;
        java.lang.String $r10;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r11;
        char $c1;
        net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz r16;

        r16 := @this: net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.URectangle;

        d8 := @parameter1: double;

        d9 := @parameter2: double;

        r4 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r1 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r3 := @parameter5: net.sourceforge.plantuml.tikz.TikzGraphics;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getRx()>();

        $d3 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getRy()>();

        $d5 = d0 / 2.0;

        $d4 = d1 / 2.0;

        d6 = staticinvoke <net.sourceforge.plantuml.utils.MathUtils: double min(double,double,double,double)>($d2, $d3, $d5, $d4);

        r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $z0 = r2 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z0 == 0 goto label1;

        r11 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r2;

        $r12 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor1()>();

        r13 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r12);

        $r14 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor2()>();

        r15 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r14);

        $c1 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: char getPolicy()>();

        virtualinvoke r3.<net.sourceforge.plantuml.tikz.TikzGraphics: void setGradientColor(java.awt.Color,java.awt.Color,char)>(r13, r15, $c1);

        goto label2;

     label1:
        $r5 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r2);

        virtualinvoke r3.<net.sourceforge.plantuml.tikz.TikzGraphics: void setFillColor(java.awt.Color)>($r5);

     label2:
        $r6 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r7 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r6);

        virtualinvoke r3.<net.sourceforge.plantuml.tikz.TikzGraphics: void setStrokeColor(java.awt.Color)>($r7);

        $r8 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d7 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $r9 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UStroke: java.lang.String getDashTikz()>();

        virtualinvoke r3.<net.sourceforge.plantuml.tikz.TikzGraphics: void setStrokeWidth(double,java.lang.String)>($d7, $r10);

        $b0 = d6 cmpl 0.0;

        if $b0 != 0 goto label3;

        virtualinvoke r3.<net.sourceforge.plantuml.tikz.TikzGraphics: void rectangle(double,double,double,double)>(d8, d9, d0, d1);

        goto label4;

     label3:
        virtualinvoke r3.<net.sourceforge.plantuml.tikz.TikzGraphics: void rectangleRound(double,double,double,double,double)>(d8, d9, d0, d1, d6);

     label4:
        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.tikz.TikzGraphics $r5;
        net.sourceforge.plantuml.ugraphic.URectangle $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.URectangle) r1;

        $r5 = (net.sourceforge.plantuml.tikz.TikzGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz: void draw(net.sourceforge.plantuml.ugraphic.URectangle,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.tikz.TikzGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
