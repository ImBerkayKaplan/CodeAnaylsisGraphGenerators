public class net.sourceforge.plantuml.nwdiag.next.NStage extends java.lang.Object implements java.lang.Comparable
{
    private final int number;

    public void <init>(int)
    {
        net.sourceforge.plantuml.nwdiag.next.NStage r0;
        int i0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NStage;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.next.NStage: int number> = i0;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        net.sourceforge.plantuml.nwdiag.next.NStage r2;
        int $i0;
        java.lang.String $r4;

        r2 := @this: net.sourceforge.plantuml.nwdiag.next.NStage;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S");

        $i0 = r2.<net.sourceforge.plantuml.nwdiag.next.NStage: int number>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public int compareTo(net.sourceforge.plantuml.nwdiag.next.NStage)
    {
        net.sourceforge.plantuml.nwdiag.next.NStage r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NStage;

        r1 := @parameter0: net.sourceforge.plantuml.nwdiag.next.NStage;

        $i1 = r0.<net.sourceforge.plantuml.nwdiag.next.NStage: int number>;

        $i0 = r1.<net.sourceforge.plantuml.nwdiag.next.NStage: int number>;

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i0);

        return $i2;
    }

    public int getNumber()
    {
        net.sourceforge.plantuml.nwdiag.next.NStage r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NStage;

        $i0 = r0.<net.sourceforge.plantuml.nwdiag.next.NStage: int number>;

        return $i0;
    }

    public static net.sourceforge.plantuml.nwdiag.next.NStage getMin(net.sourceforge.plantuml.nwdiag.next.NStage, net.sourceforge.plantuml.nwdiag.next.NStage)
    {
        net.sourceforge.plantuml.nwdiag.next.NStage r0, r1;
        int $i0, $i1;

        r0 := @parameter0: net.sourceforge.plantuml.nwdiag.next.NStage;

        r1 := @parameter1: net.sourceforge.plantuml.nwdiag.next.NStage;

        $i1 = r0.<net.sourceforge.plantuml.nwdiag.next.NStage: int number>;

        $i0 = r1.<net.sourceforge.plantuml.nwdiag.next.NStage: int number>;

        if $i1 >= $i0 goto label1;

        return r0;

     label1:
        return r1;
    }

    public static net.sourceforge.plantuml.nwdiag.next.NStage getMax(net.sourceforge.plantuml.nwdiag.next.NStage, net.sourceforge.plantuml.nwdiag.next.NStage)
    {
        net.sourceforge.plantuml.nwdiag.next.NStage r0, r1;
        int $i0, $i1;

        r0 := @parameter0: net.sourceforge.plantuml.nwdiag.next.NStage;

        r1 := @parameter1: net.sourceforge.plantuml.nwdiag.next.NStage;

        $i1 = r0.<net.sourceforge.plantuml.nwdiag.next.NStage: int number>;

        $i0 = r1.<net.sourceforge.plantuml.nwdiag.next.NStage: int number>;

        if $i1 <= $i0 goto label1;

        return r0;

     label1:
        return r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        net.sourceforge.plantuml.nwdiag.next.NStage r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NStage;

        r1 := @parameter0: java.lang.Object;

        $r2 = (net.sourceforge.plantuml.nwdiag.next.NStage) r1;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NStage: int compareTo(net.sourceforge.plantuml.nwdiag.next.NStage)>($r2);

        return $i0;
    }
}
