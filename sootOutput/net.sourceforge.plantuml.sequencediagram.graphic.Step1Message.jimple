class net.sourceforge.plantuml.sequencediagram.graphic.Step1Message extends net.sourceforge.plantuml.sequencediagram.graphic.Step1Abstract
{
    private final net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow messageArrow;
    static final boolean $assertionsDisabled;

    void <init>(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.sequencediagram.Message, net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet, net.sourceforge.plantuml.sequencediagram.graphic.Frontier)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.sequencediagram.Message r3;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet r4;
        net.sourceforge.plantuml.sequencediagram.graphic.Frontier r5;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox $r6, $r7;
        double d0, d1, $d2;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.skin.rose.Rose $r8, $r13, $r23, $r31;
        net.sourceforge.plantuml.style.Style[] $r9, $r14, $r32;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r10, $r38;
        net.sourceforge.plantuml.ISkinParam $r11, $r17, $r21, $r29, r30;
        net.sourceforge.plantuml.cucadiagram.Display $r12, $r35;
        net.sourceforge.plantuml.skin.ComponentType $r15, $r20, $r34;
        net.sourceforge.plantuml.style.StyleSignature $r16;
        net.sourceforge.plantuml.style.StyleBuilder $r18;
        net.sourceforge.plantuml.style.Style $r19;
        net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow $r22;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r24, $r25;
        net.sourceforge.plantuml.Url $r26;
        java.lang.Object $r27;
        net.sourceforge.plantuml.sequencediagram.Note r28;
        net.sourceforge.plantuml.sequencediagram.NoteStyle $r33;
        net.sourceforge.plantuml.skin.Component $r36, r40;
        net.sourceforge.plantuml.skin.ArrowComponent r39;
        java.util.List r41;
        java.util.Iterator r42;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: net.sourceforge.plantuml.sequencediagram.Message;

        r4 := @parameter3: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet;

        r5 := @parameter4: net.sourceforge.plantuml.sequencediagram.graphic.Frontier;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Abstract: void <init>(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.AbstractMessage,net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet,net.sourceforge.plantuml.sequencediagram.graphic.Frontier)>(r1, r2, r3, r4, r5);

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox1()>();

        d0 = virtualinvoke $r6.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox: double getCenterX(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox2()>();

        d1 = virtualinvoke $r7.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox: double getCenterX(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: boolean isSelfMessage()>();

        if $z0 == 0 goto label1;

        $r38 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.skin.ArrowConfiguration getSelfArrowType(net.sourceforge.plantuml.sequencediagram.Message)>(r3);

        goto label2;

     label1:
        $r38 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowType(net.sourceforge.plantuml.sequencediagram.Message,double,double)>(r3, d0, d1);

     label2:
        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: void setConfig(net.sourceforge.plantuml.skin.ArrowConfiguration)>($r38);

        $z1 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: boolean isSelfMessage()>();

        if $z1 == 0 goto label3;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow messageArrow> = null;

        goto label4;

     label3:
        $r8 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r9 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.style.Style[] getUsedStyles()>();

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.skin.ArrowConfiguration getConfig()>();

        $r11 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r12 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.cucadiagram.Display getLabelNumbered()>();

        r39 = virtualinvoke $r8.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.ArrowComponent createComponentArrow(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>($r9, $r10, $r11, $r12);

        $r13 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r14 = newarray (net.sourceforge.plantuml.style.Style)[1];

        $r15 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_OPEN>;

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r17 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r18 = interfaceinvoke $r17.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r19 = virtualinvoke $r16.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r18);

        $r14[0] = $r19;

        $r20 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_OPEN>;

        $r21 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r40 = virtualinvoke $r13.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.Component createComponent(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>($r14, $r20, null, $r21, null);

        $r22 = new net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow;

        $d2 = interfaceinvoke r5.<net.sourceforge.plantuml.sequencediagram.graphic.Frontier: double getFreeY(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange)>(r1);

        $r23 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r24 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox1()>();

        $r25 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox2()>();

        $r26 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.Url getUrl()>();

        specialinvoke $r22.<net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow: void <init>(double,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.skin.ArrowComponent,net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox,net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.skin.Component)>($d2, $r23, r39, $r24, $r25, $r26, r40);

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow messageArrow> = $r22;

     label4:
        r41 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.Message: java.util.List getNoteOnMessages()>();

        r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r27 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r28 = (net.sourceforge.plantuml.sequencediagram.Note) $r27;

        $r29 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r30 = virtualinvoke r28.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.ISkinParam getSkinParamBackcolored(net.sourceforge.plantuml.ISkinParam)>($r29);

        $r31 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r32 = virtualinvoke r28.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.Style[] getUsedStyles()>();

        $r33 = virtualinvoke r28.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NoteStyle getNoteStyle()>();

        $r34 = virtualinvoke $r33.<net.sourceforge.plantuml.sequencediagram.NoteStyle: net.sourceforge.plantuml.skin.ComponentType getNoteComponentType()>();

        $r35 = virtualinvoke r28.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.cucadiagram.Display getStrings()>();

        $r36 = virtualinvoke $r31.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.Component createComponentNote(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>($r32, $r34, r30, $r35);

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: void addNote(net.sourceforge.plantuml.skin.Component)>($r36);

        goto label5;

     label6:
        return;
    }

    net.sourceforge.plantuml.sequencediagram.graphic.Frontier prepareMessage(net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet, net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.graphic.Arrow r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2, $r3, $r5, $r12, $r29, $r31;
        double d0, d1, $d3, $d4, $d5, $d6, $d7, $d8, d9, $d10, $d11, d12, d13, $d14;
        net.sourceforge.plantuml.sequencediagram.AbstractMessage $r4, $r13, $r15, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        net.sourceforge.plantuml.sequencediagram.NotePosition $r6, $r9;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r7, $r10, $r21, $r22, $r30;
        net.sourceforge.plantuml.sequencediagram.graphic.LifeLine $r8, $r11;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r14;
        net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet r16;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox $r17, $r18, $r25, $r27;
        net.sourceforge.plantuml.sequencediagram.graphic.Constraint $r19, $r26, $r28;
        net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack r20;
        java.lang.AssertionError $r23;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r24;
        net.sourceforge.plantuml.sequencediagram.graphic.SegmentColored $r32;
        net.sourceforge.plantuml.sequencediagram.graphic.Segment $r33;
        net.sourceforge.plantuml.sequencediagram.graphic.Frontier $r35;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        r16 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet;

        r20 := @parameter1: net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.Arrow createArrow()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d0 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: double getArrowYStartLevel(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d1 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: double getArrowYEndLevel(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $d3 = d0 + 0.0;

        virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: void setPosYstartLevel(double)>($d3);

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: boolean isSelfMessage()>();

        if $z0 == 0 goto label1;

        $r29 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d10 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: double getArrowOnlyWidth(net.sourceforge.plantuml.graphic.StringBounder)>($r29);

        $r30 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox1()>();

        $r31 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r32 = virtualinvoke $r30.<net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox: net.sourceforge.plantuml.sequencediagram.graphic.SegmentColored getLiveThicknessAt(net.sourceforge.plantuml.graphic.StringBounder,double)>($r31, d0);

        $r33 = virtualinvoke $r32.<net.sourceforge.plantuml.sequencediagram.graphic.SegmentColored: net.sourceforge.plantuml.sequencediagram.graphic.Segment getSegment()>();

        $d11 = virtualinvoke $r33.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getLength()>();

        d12 = $d10 + $d11;

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: double getArrowOnlyWidth(net.sourceforge.plantuml.graphic.StringBounder)>($r5);

        $r6 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition LEFT>;

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox(net.sourceforge.plantuml.sequencediagram.NotePosition)>($r6);

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox: net.sourceforge.plantuml.sequencediagram.graphic.LifeLine getLifeLine()>();

        $d5 = virtualinvoke $r8.<net.sourceforge.plantuml.sequencediagram.graphic.LifeLine: double getRightShift(double)>(d0);

        $d6 = $d4 + $d5;

        $r9 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition RIGHT>;

        $r10 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox(net.sourceforge.plantuml.sequencediagram.NotePosition)>($r9);

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox: net.sourceforge.plantuml.sequencediagram.graphic.LifeLine getLifeLine()>();

        $d7 = virtualinvoke $r11.<net.sourceforge.plantuml.sequencediagram.graphic.LifeLine: double getLeftShift(double)>(d0);

        d12 = $d6 + $d7;

     label2:
        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d8 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)>($r12);

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: void incFreeY(double)>($d8);

        d13 = 0.0;

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $z1 = virtualinvoke $r13.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: boolean isActivateAndDeactive()>();

        if $z1 == 0 goto label3;

        d13 = 30.0;

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: void incFreeY(double)>(30.0);

     label3:
        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        virtualinvoke $r14.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: void addEvent(net.sourceforge.plantuml.sequencediagram.Event,net.sourceforge.plantuml.sequencediagram.graphic.GraphicalElement)>($r15, r1);

        $z2 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: boolean isSelfMessage()>();

        if $z2 == 0 goto label5;

        $r24 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.skin.ArrowConfiguration getConfig()>();

        $z6 = virtualinvoke $r24.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isReverseDefine()>();

        if $z6 == 0 goto label4;

        $r27 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox1()>();

        $r28 = virtualinvoke r16.<net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet: net.sourceforge.plantuml.sequencediagram.graphic.Constraint getConstraintBefore(net.sourceforge.plantuml.sequencediagram.graphic.Pushable)>($r27);

        virtualinvoke $r28.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: void ensureValue(double)>(d12);

        goto label6;

     label4:
        $r25 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox1()>();

        $r26 = virtualinvoke r16.<net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet: net.sourceforge.plantuml.sequencediagram.graphic.Constraint getConstraintAfter(net.sourceforge.plantuml.sequencediagram.graphic.Pushable)>($r25);

        virtualinvoke $r26.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: void ensureValue(double)>(d12);

        goto label6;

     label5:
        $r17 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox1()>();

        $r18 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox2()>();

        $r19 = virtualinvoke r16.<net.sourceforge.plantuml.sequencediagram.graphic.ConstraintSet: net.sourceforge.plantuml.sequencediagram.graphic.Constraint getConstraint(net.sourceforge.plantuml.sequencediagram.graphic.Pushable,net.sourceforge.plantuml.sequencediagram.graphic.Pushable)>($r17, $r18);

        virtualinvoke $r19.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: void ensureValue(double)>(d12);

     label6:
        $d14 = d1 + d13;

        d9 = $d14 - 0.0;

        $r34 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        virtualinvoke $r34.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: void setPosYendLevel(double)>(d9);

        $z7 = <net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: boolean $assertionsDisabled>;

        if $z7 != 0 goto label7;

        $z5 = r1 instanceof net.sourceforge.plantuml.sequencediagram.InGroupable;

        if $z5 != 0 goto label7;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label7:
        $z3 = r1 instanceof net.sourceforge.plantuml.sequencediagram.InGroupable;

        if $z3 == 0 goto label8;

        virtualinvoke r20.<net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack: void addElement(net.sourceforge.plantuml.sequencediagram.InGroupable)>(r1);

        $r21 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox1()>();

        virtualinvoke r20.<net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack: void addElement(net.sourceforge.plantuml.sequencediagram.InGroupable)>($r21);

        $z4 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: boolean isSelfMessage()>();

        if $z4 != 0 goto label8;

        $r22 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox2()>();

        virtualinvoke r20.<net.sourceforge.plantuml.sequencediagram.graphic.InGroupablesStack: void addElement(net.sourceforge.plantuml.sequencediagram.InGroupable)>($r22);

     label8:
        $r35 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.Frontier getFreeY()>();

        return $r35;
    }

    private boolean isSelfMessage()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox $r1, $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox1()>();

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox2()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox1()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r1;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox $r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox1()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox()>();

        return $r2;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox2()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r1;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox $r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox2()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox()>();

        return $r2;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox1()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r1;
        net.sourceforge.plantuml.sequencediagram.AbstractMessage $r2;
        net.sourceforge.plantuml.sequencediagram.Message $r3;
        net.sourceforge.plantuml.sequencediagram.Participant $r4;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r3 = (net.sourceforge.plantuml.sequencediagram.Message) $r2;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant getParticipant1()>();

        $r5 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox(net.sourceforge.plantuml.sequencediagram.Participant)>($r4);

        return $r5;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox2()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r1;
        net.sourceforge.plantuml.sequencediagram.AbstractMessage $r2;
        net.sourceforge.plantuml.sequencediagram.Message $r3;
        net.sourceforge.plantuml.sequencediagram.Participant $r4;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r3 = (net.sourceforge.plantuml.sequencediagram.Message) $r2;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant getParticipant2()>();

        $r5 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox(net.sourceforge.plantuml.sequencediagram.Participant)>($r4);

        return $r5;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox(net.sourceforge.plantuml.sequencediagram.NotePosition)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        boolean $z0;
        net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow $r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.sequencediagram.NotePosition r3;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        r3 := @parameter0: net.sourceforge.plantuml.sequencediagram.NotePosition;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: boolean isSelfMessage()>();

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow messageArrow>;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getParticipantAt(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.NotePosition)>($r2, r3);

        return $r4;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.Arrow createArrow()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.AbstractMessage $r1, $r2, $r4, $r15, $r27;
        boolean $z0, $z1, $z3;
        java.util.List $r3, $r5, $r9, $r13, $r16, $r22, $r25, $r28;
        int $i0, $i1, $i2, $i3, i4, i5;
        net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow $r6, $r12, $r19;
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow $r7, r34;
        java.util.ArrayList $r8, $r21;
        net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox $r10, $r23;
        net.sourceforge.plantuml.graphic.StringBounder $r11, $r18, $r24, $r31;
        java.lang.Object $r14, $r17, $r26, $r29;
        net.sourceforge.plantuml.sequencediagram.graphic.NoteBox $r20, $r32;
        net.sourceforge.plantuml.sequencediagram.Note r30, r39;
        net.sourceforge.plantuml.sequencediagram.graphic.Arrow $r33;
        net.sourceforge.plantuml.skin.Component r36, r38;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: boolean isCreate()>();

        if $z0 == 0 goto label1;

        $r33 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.Arrow createArrowCreate()>();

        return $r33;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: java.util.List getNoteOnMessages()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label4;

        $z3 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: boolean isSelfMessage()>();

        if $z3 == 0 goto label4;

        r34 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow createMessageSelfArrow()>();

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        i4 = 0;

     label2:
        $r22 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: java.util.List getNotes()>();

        $i3 = interfaceinvoke $r22.<java.util.List: int size()>();

        if i4 >= $i3 goto label3;

        $r25 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: java.util.List getNotes()>();

        $r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i4);

        r36 = (net.sourceforge.plantuml.skin.Component) $r26;

        $r27 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r28 = virtualinvoke $r27.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: java.util.List getNoteOnMessages()>();

        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(i4);

        r30 = (net.sourceforge.plantuml.sequencediagram.Note) $r29;

        virtualinvoke r30.<net.sourceforge.plantuml.sequencediagram.Note: void temporaryProtectedUntilTeozIsStandard()>();

        $r31 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r32 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.NoteBox createNoteBox(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.graphic.Arrow,net.sourceforge.plantuml.skin.Component,net.sourceforge.plantuml.sequencediagram.Note)>($r31, r34, r36, r30);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r32);

        i4 = i4 + 1;

        goto label2;

     label3:
        $r23 = new net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox;

        $r24 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r23.<net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.graphic.Arrow,java.util.List)>($r24, r34, $r21);

        return $r23;

     label4:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: java.util.List getNoteOnMessages()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 <= 0 goto label7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        i5 = 0;

     label5:
        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: java.util.List getNotes()>();

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i5 >= $i2 goto label6;

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: java.util.List getNotes()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i5);

        r38 = (net.sourceforge.plantuml.skin.Component) $r14;

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: java.util.List getNoteOnMessages()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i5);

        r39 = (net.sourceforge.plantuml.sequencediagram.Note) $r17;

        virtualinvoke r39.<net.sourceforge.plantuml.sequencediagram.Note: void temporaryProtectedUntilTeozIsStandard()>();

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r19 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow messageArrow>;

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.NoteBox createNoteBox(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.graphic.Arrow,net.sourceforge.plantuml.skin.Component,net.sourceforge.plantuml.sequencediagram.Note)>($r18, $r19, r38, r39);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r20);

        i5 = i5 + 1;

        goto label5;

     label6:
        $r10 = new net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox;

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r12 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow messageArrow>;

        specialinvoke $r10.<net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.graphic.Arrow,java.util.List)>($r11, $r12, $r8);

        return $r10;

     label7:
        $z1 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: boolean isSelfMessage()>();

        if $z1 == 0 goto label8;

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow createMessageSelfArrow()>();

        return $r7;

     label8:
        $r6 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow messageArrow>;

        return $r6;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow createMessageSelfArrow()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.graphic.Frontier $r1;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange $r2;
        double d0, $d1, $d2, d3, d4;
        net.sourceforge.plantuml.sequencediagram.AbstractMessage $r3, $r4, $r5, $r12, $r19;
        boolean $z0, $z1;
        net.sourceforge.plantuml.style.Style[] r6;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r7, $r10, $r16;
        net.sourceforge.plantuml.skin.rose.Rose $r8, $r17;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r9;
        net.sourceforge.plantuml.ISkinParam $r11;
        net.sourceforge.plantuml.cucadiagram.Display $r13;
        net.sourceforge.plantuml.skin.ArrowComponent r14;
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow $r15;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r18;
        net.sourceforge.plantuml.Url $r20;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.Frontier getFreeY()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange getParticipantRange()>();

        d0 = interfaceinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.Frontier: double getFreeY(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange)>($r2);

        d3 = 0.0;

        d4 = 0.0;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $z0 = virtualinvoke $r3.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: boolean isActivate()>();

        if $z0 == 0 goto label1;

        $d2 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: double getHalfLifeWidth()>();

        d3 = 0.0 - $d2;

        d4 = 0.0 + 5.0;

     label1:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $z1 = virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: boolean isDeactivate()>();

        if $z1 == 0 goto label2;

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: double getHalfLifeWidth()>();

        d3 = d3 + $d1;

     label2:
        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: net.sourceforge.plantuml.style.Style[] getUsedStyles()>();

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.skin.ArrowConfiguration getConfig()>();

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: net.sourceforge.plantuml.cucadiagram.Display getLabelNumbered()>();

        r14 = virtualinvoke $r8.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.ArrowComponent createComponentArrow(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>(r6, $r9, $r11, $r13);

        $r15 = new net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r18 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox1()>();

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r20 = virtualinvoke $r19.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: net.sourceforge.plantuml.Url getUrl()>();

        specialinvoke $r15.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: void <init>(double,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.skin.ArrowComponent,net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox,double,net.sourceforge.plantuml.Url,double)>(d0, $r17, r14, $r18, d3, $r20, d4);

        return $r15;
    }

    private double getHalfLifeWidth()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r1, $r6, $r11;
        net.sourceforge.plantuml.skin.rose.Rose $r2;
        net.sourceforge.plantuml.style.Style[] $r3;
        net.sourceforge.plantuml.skin.ComponentType $r4, $r10;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.ISkinParam $r7, $r12;
        net.sourceforge.plantuml.style.StyleBuilder $r8;
        net.sourceforge.plantuml.style.Style $r9;
        java.lang.CharSequence[] $r13;
        net.sourceforge.plantuml.cucadiagram.Display $r14;
        net.sourceforge.plantuml.skin.Component $r15;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r3 = newarray (net.sourceforge.plantuml.style.Style)[1];

        $r4 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_OPEN>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r9 = virtualinvoke $r5.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r8);

        $r3[0] = $r9;

        $r10 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_OPEN>;

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r13 = newarray (java.lang.CharSequence)[1];

        $r13[0] = "";

        $r14 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r13);

        $r15 = virtualinvoke $r2.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.Component createComponent(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>($r3, $r10, null, $r12, $r14);

        $d0 = interfaceinvoke $r15.<net.sourceforge.plantuml.skin.Component: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(null);

        $d1 = $d0 / 2.0;

        return $d1;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.Arrow createArrowCreate()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r0;
        net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow $r1, $r4;
        net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndParticipant $r2;
        net.sourceforge.plantuml.graphic.StringBounder $r3, $r14, $r19, $r27, $r32;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox $r5, $r31;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r6;
        net.sourceforge.plantuml.ISkinParam $r7;
        net.sourceforge.plantuml.PaddingParam $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        net.sourceforge.plantuml.sequencediagram.AbstractMessage $r9, $r23;
        java.util.List $r10, $r17, $r20, $r24;
        int $i0, $i1, i2;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r11;
        net.sourceforge.plantuml.sequencediagram.graphic.Frontier $r12;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange $r13;
        java.util.ArrayList $r15;
        net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox $r18;
        java.lang.Object $r21, $r25;
        net.sourceforge.plantuml.skin.Component r22;
        net.sourceforge.plantuml.sequencediagram.Note r26;
        net.sourceforge.plantuml.sequencediagram.graphic.NoteBox r28;
        net.sourceforge.plantuml.sequencediagram.NotePosition $r29, $r30;
        java.lang.IllegalStateException $r33;
        net.sourceforge.plantuml.sequencediagram.graphic.Arrow r34;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow messageArrow>;

        if $r1 != null goto label1;

        $r33 = new java.lang.IllegalStateException;

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>()>();

        throw $r33;

     label1:
        $r2 = new net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndParticipant;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r4 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.MessageArrow messageArrow>;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox2()>();

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet getDrawingSet()>();

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r8 = <net.sourceforge.plantuml.PaddingParam: net.sourceforge.plantuml.PaddingParam PARTICIPANT>;

        $d0 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: double getPadding(net.sourceforge.plantuml.PaddingParam)>($r8);

        specialinvoke $r2.<net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndParticipant: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.graphic.Arrow,net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox,double)>($r3, $r4, $r5, $d0);

        r34 = $r2;

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: java.util.List getNoteOnMessages()>();

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i0 <= 0 goto label5;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label2:
        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: java.util.List getNotes()>();

        $i1 = interfaceinvoke $r17.<java.util.List: int size()>();

        if i2 >= $i1 goto label4;

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: java.util.List getNotes()>();

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i2);

        r22 = (net.sourceforge.plantuml.skin.Component) $r21;

        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.AbstractMessage getMessage()>();

        $r24 = virtualinvoke $r23.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: java.util.List getNoteOnMessages()>();

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(i2);

        r26 = (net.sourceforge.plantuml.sequencediagram.Note) $r25;

        $r27 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r28 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.NoteBox createNoteBox(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.graphic.Arrow,net.sourceforge.plantuml.skin.Component,net.sourceforge.plantuml.sequencediagram.Note)>($r27, $r2, r22, r26);

        $r29 = virtualinvoke r26.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NotePosition getPosition()>();

        $r30 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition RIGHT>;

        if $r29 != $r30 goto label3;

        $r31 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox getParticipantBox2()>();

        $r32 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d5 = virtualinvoke $r31.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>($r32);

        $d6 = $d5 / 2.0;

        virtualinvoke r28.<net.sourceforge.plantuml.sequencediagram.graphic.NoteBox: void pushToRight(double)>($d6);

     label3:
        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r28);

        i2 = i2 + 1;

        goto label2;

     label4:
        $r18 = new net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox;

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r18.<net.sourceforge.plantuml.sequencediagram.graphic.ArrowAndNoteBox: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.graphic.Arrow,java.util.List)>($r19, $r2, $r15);

        r34 = $r18;

     label5:
        $r11 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getLivingParticipantBox2()>();

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.Frontier getFreeY()>();

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange getParticipantRange()>();

        $d1 = interfaceinvoke $r12.<net.sourceforge.plantuml.sequencediagram.graphic.Frontier: double getFreeY(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange)>($r13);

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d2 = virtualinvoke r34.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)>($r14);

        $d3 = $d2 / 2.0;

        $d4 = $d1 + $d3;

        virtualinvoke $r11.<net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox: void create(double)>($d4);

        return r34;
    }

    private net.sourceforge.plantuml.skin.ArrowConfiguration getSelfArrowType(net.sourceforge.plantuml.sequencediagram.Message)
    {
        net.sourceforge.plantuml.sequencediagram.Message r0;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r1, $r2, $r3, $r4, $r5, $r8, $r11, $r13, $r15, $r17, r23, r24, r25, r26, r27, r28, r29;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.skin.ArrowDressing $r6, $r9;
        net.sourceforge.plantuml.skin.ArrowHead $r7, $r10, $r19;
        net.sourceforge.plantuml.skin.ArrowPart $r12;
        net.sourceforge.plantuml.ugraphic.color.HColor $r14;
        net.sourceforge.plantuml.skin.ArrowDecoration $r16, $r18;
        net.sourceforge.plantuml.skin.ArrowBody $r20, $r21;
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r22;

        r22 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.Message;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isReverseDefine()>();

        r23 = staticinvoke <net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDirectionSelf(boolean)>($z0);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $z1 = virtualinvoke $r2.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isDotted()>();

        if $z1 == 0 goto label1;

        $r21 = <net.sourceforge.plantuml.skin.ArrowBody: net.sourceforge.plantuml.skin.ArrowBody DOTTED>;

        r23 = virtualinvoke r23.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withBody(net.sourceforge.plantuml.skin.ArrowBody)>($r21);

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $z2 = virtualinvoke $r3.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isHidden()>();

        if $z2 == 0 goto label2;

        $r20 = <net.sourceforge.plantuml.skin.ArrowBody: net.sourceforge.plantuml.skin.ArrowBody HIDDEN>;

        r23 = virtualinvoke r23.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withBody(net.sourceforge.plantuml.skin.ArrowBody)>($r20);

     label2:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $z3 = virtualinvoke $r4.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isAsync()>();

        if $z3 == 0 goto label3;

        $r19 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead ASYNC>;

        r23 = virtualinvoke r23.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withHead(net.sourceforge.plantuml.skin.ArrowHead)>($r19);

     label3:
        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDressing getDressing1()>();

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        r24 = virtualinvoke r23.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withHead1(net.sourceforge.plantuml.skin.ArrowHead)>($r7);

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDressing getDressing2()>();

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        r25 = virtualinvoke r24.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withHead2(net.sourceforge.plantuml.skin.ArrowHead)>($r10);

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowPart getPart()>();

        r26 = virtualinvoke r25.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withPart(net.sourceforge.plantuml.skin.ArrowPart)>($r12);

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        r27 = virtualinvoke r26.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r14);

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDecoration getDecoration1()>();

        r28 = virtualinvoke r27.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDecoration1(net.sourceforge.plantuml.skin.ArrowDecoration)>($r16);

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDecoration getDecoration2()>();

        r29 = virtualinvoke r28.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDecoration2(net.sourceforge.plantuml.skin.ArrowDecoration)>($r18);

        return r29;
    }

    private net.sourceforge.plantuml.skin.ArrowConfiguration getArrowType(net.sourceforge.plantuml.sequencediagram.Message, double, double)
    {
        double d0, d1;
        byte $b0;
        net.sourceforge.plantuml.sequencediagram.Message r0;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r1, $r2, $r3;
        net.sourceforge.plantuml.sequencediagram.graphic.Step1Message r4;

        r4 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Step1Message;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.Message;

        d1 := @parameter1: double;

        d0 := @parameter2: double;

        $b0 = d0 cmpl d1;

        if $b0 <= 0 goto label1;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration reverse()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/sequencediagram/graphic/Step1Message;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.sequencediagram.graphic.Step1Message: boolean $assertionsDisabled> = $z1;

        return;
    }
}
