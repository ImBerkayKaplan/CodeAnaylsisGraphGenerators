class net.sourceforge.plantuml.graphic.USymbolFrame extends net.sourceforge.plantuml.graphic.USymbol
{

    void <init>()
    {
        net.sourceforge.plantuml.graphic.USymbolFrame r0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolFrame;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.SkinParameter $r0;
        net.sourceforge.plantuml.graphic.USymbolFrame r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFrame;

        $r0 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter FRAME>;

        return $r0;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolFrame r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFrame;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName frame>;

        return $r0;
    }

    private void drawFrame(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, net.sourceforge.plantuml.awt.geom.Dimension2D, double, double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, $r1, $r2, r3;
        double d0, d1, d2, d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, d11;
        net.sourceforge.plantuml.ugraphic.UGraphic r4, $r11;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5;
        byte $b0, b1;
        net.sourceforge.plantuml.graphic.USymbolFrame r6;
        net.sourceforge.plantuml.ugraphic.UPath $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r9;
        net.sourceforge.plantuml.ugraphic.UBackground $r10;

        r6 := @this: net.sourceforge.plantuml.graphic.USymbolFrame;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r5 := @parameter3: net.sourceforge.plantuml.awt.geom.Dimension2D;

        d3 := @parameter4: double;

        d2 := @parameter5: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(d0, d1);

        $r1 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>(d2);

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle ignoreForCompressionOnX()>();

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle ignoreForCompressionOnY()>();

        interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.Shadowable: void setDeltaShadow(double)>(d3);

        interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r3);

        $d4 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b0 = $d4 cmpl 0.0;

        if $b0 != 0 goto label1;

        d11 = d0 / 3.0;

        b1 = 7;

        goto label2;

     label1:
        $d5 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d11 = $d5 + 10.0;

        b1 = 10;

     label2:
        d6 = specialinvoke r6.<net.sourceforge.plantuml.graphic.USymbolFrame: double getYpos(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r5);

        $r7 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void setIgnoreForCompressionOnX()>();

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(d11, 0.0);

        $d7 = (double) b1;

        $d8 = d6 - $d7;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d11, $d8);

        $d9 = (double) b1;

        $d10 = d11 - $d9;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d10, d6);

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, d6);

        $r9 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r11 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

        return;
    }

    private double getYpos(net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.awt.geom.Dimension2D r0;
        double $d0, $d1, $d2;
        byte $b0;
        net.sourceforge.plantuml.graphic.USymbolFrame r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFrame;

        r0 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        return 12.0;

     label1:
        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = $d1 + 3.0;

        return $d2;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolFrame r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFrame;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(15.0, 25.0, 20.0, 10.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolFrame$1 $r0;
        net.sourceforge.plantuml.graphic.USymbolFrame r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFrame;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolFrame$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolFrame$1: void <init>(net.sourceforge.plantuml.graphic.USymbolFrame,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, r2, r3, r4);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolFrame$2 $r0;
        net.sourceforge.plantuml.graphic.USymbolFrame r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4;
        double d0, d1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5, r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFrame;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r2 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolFrame$2;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolFrame$2: void <init>(net.sourceforge.plantuml.graphic.USymbolFrame,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,double,double)>(r1, r2, r3, r4, d0, d1);

        return $r0;
    }

    static void access$000(net.sourceforge.plantuml.graphic.USymbolFrame, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, net.sourceforge.plantuml.awt.geom.Dimension2D, double, double)
    {
        net.sourceforge.plantuml.graphic.USymbolFrame r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1, d2, d3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFrame;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r2 := @parameter4: net.sourceforge.plantuml.awt.geom.Dimension2D;

        d2 := @parameter5: double;

        d3 := @parameter6: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFrame: void drawFrame(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r1, d0, d1, r2, d2, d3);

        return;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolFrame)
    {
        net.sourceforge.plantuml.graphic.USymbolFrame r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFrame;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFrame: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }

    static double access$200(net.sourceforge.plantuml.graphic.USymbolFrame, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.graphic.USymbolFrame r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFrame;

        r1 := @parameter1: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFrame: double getYpos(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r1);

        return $d0;
    }
}
