public final class net.sourceforge.plantuml.sequencediagram.Message extends net.sourceforge.plantuml.sequencediagram.AbstractMessage
{
    private final net.sourceforge.plantuml.sequencediagram.Participant p1;
    private final net.sourceforge.plantuml.sequencediagram.Participant p2;
    private java.util.List multicast;

    public void <init>(net.sourceforge.plantuml.style.StyleBuilder, net.sourceforge.plantuml.sequencediagram.Participant, net.sourceforge.plantuml.sequencediagram.Participant, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.skin.ArrowConfiguration, java.lang.String)
    {
        net.sourceforge.plantuml.sequencediagram.Message r0;
        net.sourceforge.plantuml.style.StyleBuilder r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.skin.ArrowConfiguration r3;
        java.lang.String r4;
        java.util.List $r5;
        net.sourceforge.plantuml.sequencediagram.Participant r6, r7;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Message;

        r1 := @parameter0: net.sourceforge.plantuml.style.StyleBuilder;

        r6 := @parameter1: net.sourceforge.plantuml.sequencediagram.Participant;

        r7 := @parameter2: net.sourceforge.plantuml.sequencediagram.Participant;

        r2 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter4: net.sourceforge.plantuml.skin.ArrowConfiguration;

        r4 := @parameter5: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.AbstractMessage: void <init>(net.sourceforge.plantuml.style.StyleBuilder,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.skin.ArrowConfiguration,java.lang.String)>(r1, r2, r3, r4);

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<net.sourceforge.plantuml.sequencediagram.Message: java.util.List multicast> = $r5;

        r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p1> = r6;

        r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p2> = r7;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9, $r10, $r12;
        net.sourceforge.plantuml.sequencediagram.Message r1;
        java.lang.String $r2, $r13;
        net.sourceforge.plantuml.sequencediagram.Participant $r5, $r8;
        net.sourceforge.plantuml.cucadiagram.Display $r11;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.Message;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p1>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r8 = r1.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p2>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.cucadiagram.Display getLabel()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public net.sourceforge.plantuml.sequencediagram.Participant getParticipant1()
    {
        net.sourceforge.plantuml.sequencediagram.Message r0;
        net.sourceforge.plantuml.sequencediagram.Participant $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Message;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p1>;

        return $r1;
    }

    public net.sourceforge.plantuml.sequencediagram.Participant getParticipant2()
    {
        net.sourceforge.plantuml.sequencediagram.Message r0;
        net.sourceforge.plantuml.sequencediagram.Participant $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Message;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p2>;

        return $r1;
    }

    public boolean dealWith(net.sourceforge.plantuml.sequencediagram.Participant)
    {
        net.sourceforge.plantuml.sequencediagram.Participant r0, $r2, $r3;
        net.sourceforge.plantuml.sequencediagram.Message r1;
        boolean $z0;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.Message;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        $r2 = r1.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p1>;

        if r0 == $r2 goto label1;

        $r3 = r1.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p2>;

        if r0 != $r3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean compatibleForCreate(net.sourceforge.plantuml.sequencediagram.Participant)
    {
        net.sourceforge.plantuml.sequencediagram.Message r0;
        net.sourceforge.plantuml.sequencediagram.Participant r1, $r2, $r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Message;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p1>;

        if $r2 == r1 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p2>;

        if $r3 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSelfMessage()
    {
        net.sourceforge.plantuml.sequencediagram.Message r0;
        net.sourceforge.plantuml.sequencediagram.Participant $r1, $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Message;

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p1>;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant p2>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setMulticast(java.util.List)
    {
        net.sourceforge.plantuml.sequencediagram.Message r0;
        java.util.List r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Message;

        r1 := @parameter0: java.util.List;

        r0.<net.sourceforge.plantuml.sequencediagram.Message: java.util.List multicast> = r1;

        return;
    }

    public java.util.List getMulticast()
    {
        net.sourceforge.plantuml.sequencediagram.Message r0;
        java.util.List $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Message;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Message: java.util.List multicast>;

        return $r1;
    }
}
