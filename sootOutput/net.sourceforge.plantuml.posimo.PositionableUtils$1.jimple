class net.sourceforge.plantuml.posimo.PositionableUtils$1 extends java.lang.Object implements net.sourceforge.plantuml.posimo.Positionable
{
    final net.sourceforge.plantuml.posimo.Positionable val$pos;
    final double val$widthMargin;
    final double val$heightMargin;

    void <init>(net.sourceforge.plantuml.posimo.Positionable, double, double)
    {
        net.sourceforge.plantuml.posimo.PositionableUtils$1 r0;
        net.sourceforge.plantuml.posimo.Positionable r1;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.posimo.PositionableUtils$1;

        r1 := @parameter0: net.sourceforge.plantuml.posimo.Positionable;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r0.<net.sourceforge.plantuml.posimo.PositionableUtils$1: net.sourceforge.plantuml.posimo.Positionable val$pos> = r1;

        r0.<net.sourceforge.plantuml.posimo.PositionableUtils$1: double val$widthMargin> = d0;

        r0.<net.sourceforge.plantuml.posimo.PositionableUtils$1: double val$heightMargin> = d1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.awt.geom.Point2D getPosition()
    {
        net.sourceforge.plantuml.posimo.PositionableUtils$1 r0;
        net.sourceforge.plantuml.posimo.Positionable $r1;
        java.awt.geom.Point2D r2;
        java.awt.geom.Point2D$Double $r3;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: net.sourceforge.plantuml.posimo.PositionableUtils$1;

        $r1 = r0.<net.sourceforge.plantuml.posimo.PositionableUtils$1: net.sourceforge.plantuml.posimo.Positionable val$pos>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.posimo.Positionable: java.awt.geom.Point2D getPosition()>();

        $r3 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d1 = r0.<net.sourceforge.plantuml.posimo.PositionableUtils$1: double val$widthMargin>;

        $d2 = $d0 - $d1;

        $d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d4 = r0.<net.sourceforge.plantuml.posimo.PositionableUtils$1: double val$heightMargin>;

        $d5 = $d3 - $d4;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d2, $d5);

        return $r3;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getSize()
    {
        net.sourceforge.plantuml.posimo.PositionableUtils$1 r0;
        net.sourceforge.plantuml.posimo.Positionable $r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2, $r3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: net.sourceforge.plantuml.posimo.PositionableUtils$1;

        $r1 = r0.<net.sourceforge.plantuml.posimo.PositionableUtils$1: net.sourceforge.plantuml.posimo.Positionable val$pos>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.posimo.Positionable: net.sourceforge.plantuml.awt.geom.Dimension2D getSize()>();

        $d0 = r0.<net.sourceforge.plantuml.posimo.PositionableUtils$1: double val$widthMargin>;

        $d3 = 2.0 * $d0;

        $d1 = r0.<net.sourceforge.plantuml.posimo.PositionableUtils$1: double val$heightMargin>;

        $d2 = 2.0 * $d1;

        $r3 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>($r2, $d3, $d2);

        return $r3;
    }

    public void moveSvek(double, double)
    {
        net.sourceforge.plantuml.posimo.PositionableUtils$1 r0;
        double d0, d1;
        net.sourceforge.plantuml.posimo.Positionable $r1;

        r0 := @this: net.sourceforge.plantuml.posimo.PositionableUtils$1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.posimo.PositionableUtils$1: net.sourceforge.plantuml.posimo.Positionable val$pos>;

        interfaceinvoke $r1.<net.sourceforge.plantuml.posimo.Positionable: void moveSvek(double,double)>(d0, d1);

        return;
    }
}
