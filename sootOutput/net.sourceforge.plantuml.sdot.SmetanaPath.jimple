public class net.sourceforge.plantuml.sdot.SmetanaPath extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    private final net.sourceforge.plantuml.cucadiagram.Link link;
    private final h.ST_Agedge_s edge;
    private final net.sourceforge.plantuml.sdot.YMirror ymirror;
    private final net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram;
    private final net.sourceforge.plantuml.graphic.TextBlock label;
    private final net.sourceforge.plantuml.graphic.TextBlock headLabel;
    private final net.sourceforge.plantuml.graphic.TextBlock tailLabel;
    private final net.sourceforge.plantuml.skin.rose.Rose rose;

    public void <init>(net.sourceforge.plantuml.cucadiagram.Link, h.ST_Agedge_s, net.sourceforge.plantuml.sdot.YMirror, net.sourceforge.plantuml.cucadiagram.CucaDiagram, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.sdot.SmetanaPath r0;
        net.sourceforge.plantuml.skin.rose.Rose $r1;
        net.sourceforge.plantuml.cucadiagram.Link r2;
        h.ST_Agedge_s r3;
        net.sourceforge.plantuml.sdot.YMirror r4;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r5;
        net.sourceforge.plantuml.graphic.TextBlock r6, r7, r8;

        r0 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Link;

        r3 := @parameter1: h.ST_Agedge_s;

        r4 := @parameter2: net.sourceforge.plantuml.sdot.YMirror;

        r5 := @parameter3: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.TextBlock;

        r7 := @parameter5: net.sourceforge.plantuml.graphic.TextBlock;

        r8 := @parameter6: net.sourceforge.plantuml.graphic.TextBlock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r1.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.skin.rose.Rose rose> = $r1;

        r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link> = r2;

        r0.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_Agedge_s edge> = r3;

        r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror> = r4;

        r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram> = r5;

        r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.graphic.TextBlock label> = r6;

        r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.graphic.TextBlock tailLabel> = r7;

        r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.graphic.TextBlock headLabel> = r8;

        return;
    }

    private net.sourceforge.plantuml.ColorParam getArrowColorParam()
    {
        net.sourceforge.plantuml.sdot.SmetanaPath r0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r1, $r4, $r7, $r10, $r13;
        net.sourceforge.plantuml.UmlDiagramType $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15;
        java.lang.IllegalStateException $r16;
        net.sourceforge.plantuml.ColorParam $r17, $r18, $r19, $r20, $r21;

        r0 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        $r1 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()>();

        $r3 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType CLASS>;

        if $r2 != $r3 goto label1;

        $r21 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam arrow>;

        return $r21;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()>();

        $r6 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType OBJECT>;

        if $r5 != $r6 goto label2;

        $r20 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam arrow>;

        return $r20;

     label2:
        $r7 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()>();

        $r9 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType DESCRIPTION>;

        if $r8 != $r9 goto label3;

        $r19 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam arrow>;

        return $r19;

     label3:
        $r10 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()>();

        $r12 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType ACTIVITY>;

        if $r11 != $r12 goto label4;

        $r18 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam arrow>;

        return $r18;

     label4:
        $r13 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()>();

        $r15 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType STATE>;

        if $r14 != $r15 goto label5;

        $r17 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam arrow>;

        return $r17;

     label5:
        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>()>();

        throw $r16;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sdot.SmetanaPath r0;
        net.sourceforge.plantuml.cucadiagram.Link $r1, $r7, $r9, $r23, $r29, $r31, $r34, $r37, $r38;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r2, $r25, $r45, $r50, $r56, $r59;
        net.sourceforge.plantuml.skin.rose.Rose $r3;
        net.sourceforge.plantuml.ISkinParam $r4, $r26, $r51, $r57, $r60;
        net.sourceforge.plantuml.ColorParam[] $r5;
        net.sourceforge.plantuml.ColorParam $r6;
        net.sourceforge.plantuml.graphic.color.Colors $r8, $r30, $r32, $r35, $r39;
        net.sourceforge.plantuml.ugraphic.color.HColor $r10, r62, r63;
        net.sourceforge.plantuml.ugraphic.UTranslate $r11, $r12, $r15, $r18, $r21, $r72;
        net.sourceforge.plantuml.ugraphic.UGraphic r13, $r16, $r19, $r22, $r68, $r69, $r70, $r71;
        net.sourceforge.plantuml.graphic.TextBlock $r14, $r17, $r20;
        net.sourceforge.plantuml.cucadiagram.LinkType r24;
        net.sourceforge.plantuml.LineParam $r27;
        net.sourceforge.plantuml.ugraphic.UStroke $r28, $r33, r67;
        net.sourceforge.plantuml.sdot.YMirror $r36, $r66;
        net.sourceforge.plantuml.graphic.color.ColorType $r40, $r41;
        net.sourceforge.plantuml.style.SName[] $r42;
        net.sourceforge.plantuml.style.SName $r43, $r44, $r47, $r48;
        net.sourceforge.plantuml.UmlDiagramType $r46;
        net.sourceforge.plantuml.style.StyleSignature $r49;
        net.sourceforge.plantuml.style.StyleBuilder $r52;
        net.sourceforge.plantuml.style.Style $r53;
        net.sourceforge.plantuml.style.PName $r54;
        net.sourceforge.plantuml.style.Value $r55;
        net.sourceforge.plantuml.api.ThemeStyle $r58;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r61;
        h.ST_Agedge_s $r64;
        net.sourceforge.plantuml.posimo.DotPath r65;

        r0 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        r13 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Link: boolean isHidden()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label02;

        $r42 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r43 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r42[0] = $r43;

        $r44 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r42[1] = $r44;

        $r45 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r46 = virtualinvoke $r45.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()>();

        $r47 = virtualinvoke $r46.<net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.style.SName getStyleName()>();

        $r42[2] = $r47;

        $r48 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r42[3] = $r48;

        $r49 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r42);

        $r50 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r51 = virtualinvoke $r50.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r52 = interfaceinvoke $r51.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r53 = virtualinvoke $r49.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r52);

        $r54 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r55 = virtualinvoke $r53.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r54);

        $r56 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r57 = virtualinvoke $r56.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r58 = interfaceinvoke $r57.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r59 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r60 = virtualinvoke $r59.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r61 = interfaceinvoke $r60.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r62 = interfaceinvoke $r55.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r58, $r61);

        goto label03;

     label02:
        $r3 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r2 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r5 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ColorParam getArrowColorParam()>();

        $r5[0] = $r6;

        r62 = virtualinvoke $r3.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r4, null, $r5);

     label03:
        $r7 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        if $r8 == null goto label05;

        $r38 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        $r39 = virtualinvoke $r38.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r41 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType ARROW>;

        $r40 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        r63 = virtualinvoke $r39.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.graphic.color.ColorType)>($r41, $r40);

        if r63 == null goto label04;

        r62 = r63;

     label04:
        goto label06;

     label05:
        $r9 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.ugraphic.color.HColor getSpecificColor()>();

        if $r10 == null goto label06;

        $r37 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        r62 = virtualinvoke $r37.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.ugraphic.color.HColor getSpecificColor()>();

     label06:
        $r64 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_Agedge_s edge>;

        r65 = virtualinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.posimo.DotPath getDotPath(h.ST_Agedge_s)>($r64);

        $r66 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror>;

        if $r66 == null goto label07;

        if r65 == null goto label07;

        $r36 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror>;

        r65 = virtualinvoke $r36.<net.sourceforge.plantuml.sdot.YMirror: net.sourceforge.plantuml.posimo.DotPath getMirrored(net.sourceforge.plantuml.posimo.DotPath)>(r65);

     label07:
        if r65 == null goto label09;

        $r23 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        r24 = virtualinvoke $r23.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType getType()>();

        $r25 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r26 = virtualinvoke $r25.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r27 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam arrow>;

        $r28 = interfaceinvoke $r26.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.LineParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r27, null);

        r67 = virtualinvoke r24.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.ugraphic.UStroke getStroke3(net.sourceforge.plantuml.ugraphic.UStroke)>($r28);

        $r29 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        $r30 = virtualinvoke $r29.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        if $r30 == null goto label08;

        $r31 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        $r32 = virtualinvoke $r31.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r33 = virtualinvoke $r32.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.UStroke getSpecificLineStroke()>();

        if $r33 == null goto label08;

        $r34 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        $r35 = virtualinvoke $r34.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        r67 = virtualinvoke $r35.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.UStroke getSpecificLineStroke()>();

     label08:
        $r68 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r67);

        $r69 = interfaceinvoke $r68.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r62);

        interfaceinvoke $r69.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r65);

        $r70 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r62);

        specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: void printExtremityAtStart(net.sourceforge.plantuml.ugraphic.UGraphic)>($r70);

        $r71 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r62);

        specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: void printExtremityAtEnd(net.sourceforge.plantuml.ugraphic.UGraphic)>($r71);

     label09:
        $r72 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ugraphic.UTranslate getLabelRectangleTranslate(java.lang.String)>("label");

        if $r72 == null goto label10;

        $r20 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r21 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ugraphic.UTranslate getLabelRectangleTranslate(java.lang.String)>("label");

        $r22 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r21);

        interfaceinvoke $r20.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r22);

     label10:
        $r11 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ugraphic.UTranslate getLabelRectangleTranslate(java.lang.String)>("head_label");

        if $r11 == null goto label11;

        $r17 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.graphic.TextBlock headLabel>;

        $r18 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ugraphic.UTranslate getLabelRectangleTranslate(java.lang.String)>("head_label");

        $r19 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        interfaceinvoke $r17.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r19);

     label11:
        $r12 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ugraphic.UTranslate getLabelRectangleTranslate(java.lang.String)>("tail_label");

        if $r12 == null goto label12;

        $r14 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.graphic.TextBlock tailLabel>;

        $r15 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ugraphic.UTranslate getLabelRectangleTranslate(java.lang.String)>("tail_label");

        $r16 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        interfaceinvoke $r14.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r16);

     label12:
        return;
    }

    private void printExtremityAtStart(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sdot.SmetanaPath r0;
        net.sourceforge.plantuml.cucadiagram.Link $r1;
        net.sourceforge.plantuml.cucadiagram.LinkType $r2;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r3;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r4;
        net.sourceforge.plantuml.ISkinParam $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;
        net.sourceforge.plantuml.svek.extremity.ExtremityFactory r7;
        h.ST_Agedge_s $r8;
        h.ST_splines r9;
        net.sourceforge.plantuml.posimo.DotPath r10;
        net.sourceforge.plantuml.sdot.YMirror $r11, $r13;
        net.sourceforge.plantuml.ugraphic.UGraphic r12;
        double $d0, d1;
        java.lang.UnsupportedOperationException $r14;
        java.io.PrintStream $r15;
        java.awt.geom.Point2D r16;
        net.sourceforge.plantuml.graphic.UDrawable r17;

        r0 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType getType()>();

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkDecor getDecor2()>();

        $r4 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackgroundColor()>();

        r7 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.svek.extremity.ExtremityFactory getExtremityFactoryComplete(net.sourceforge.plantuml.ugraphic.color.HColor)>($r6);

        if r7 != null goto label1;

        return;

     label1:
        $r8 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_Agedge_s edge>;

        r9 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_splines getSplines(h.ST_Agedge_s)>($r8);

        r10 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.posimo.DotPath getDotPath(h.ST_splines)>(r9);

        r16 = virtualinvoke r10.<net.sourceforge.plantuml.posimo.DotPath: java.awt.geom.Point2D getStartPoint()>();

        d1 = virtualinvoke r10.<net.sourceforge.plantuml.posimo.DotPath: double getStartAngle()>();

        $r11 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror>;

        if $r11 == null goto label2;

        $r13 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror>;

        r16 = virtualinvoke $r13.<net.sourceforge.plantuml.sdot.YMirror: java.awt.geom.Point2D getMirrored(java.awt.geom.Point2D)>(r16);

        $d0 = neg d1;

        d1 = $d0 + 3.141592653589793;

     label2:
        r17 = interfaceinvoke r7.<net.sourceforge.plantuml.svek.extremity.ExtremityFactory: net.sourceforge.plantuml.graphic.UDrawable createUDrawable(java.awt.geom.Point2D,double,net.sourceforge.plantuml.svek.Side)>(r16, d1, null);

        if r17 == null goto label3;

        interfaceinvoke r17.<net.sourceforge.plantuml.graphic.UDrawable: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r12);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("CANNOT DRAW printExtremityAtStart");

     label5:
        return;

        catch java.lang.UnsupportedOperationException from label2 to label3 with label4;
    }

    private void printExtremityAtEnd(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sdot.SmetanaPath r0;
        net.sourceforge.plantuml.cucadiagram.Link $r1;
        net.sourceforge.plantuml.cucadiagram.LinkType $r2;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r3;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r4;
        net.sourceforge.plantuml.ISkinParam $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;
        net.sourceforge.plantuml.svek.extremity.ExtremityFactory r7;
        h.ST_Agedge_s $r8;
        h.ST_splines r9;
        net.sourceforge.plantuml.posimo.DotPath r10;
        net.sourceforge.plantuml.sdot.YMirror $r11, $r13;
        net.sourceforge.plantuml.ugraphic.UGraphic r12;
        java.lang.UnsupportedOperationException $r14;
        java.io.PrintStream $r15;
        java.awt.geom.Point2D r16;
        double d0;
        net.sourceforge.plantuml.graphic.UDrawable r17;

        r0 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.Link link>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType getType()>();

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkDecor getDecor1()>();

        $r4 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackgroundColor()>();

        r7 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.svek.extremity.ExtremityFactory getExtremityFactoryComplete(net.sourceforge.plantuml.ugraphic.color.HColor)>($r6);

        if r7 != null goto label1;

        return;

     label1:
        $r8 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_Agedge_s edge>;

        r9 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_splines getSplines(h.ST_Agedge_s)>($r8);

        r10 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.posimo.DotPath getDotPath(h.ST_splines)>(r9);

        r16 = virtualinvoke r10.<net.sourceforge.plantuml.posimo.DotPath: java.awt.geom.Point2D getEndPoint()>();

        d0 = virtualinvoke r10.<net.sourceforge.plantuml.posimo.DotPath: double getEndAngle()>();

        $r11 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror>;

        if $r11 == null goto label2;

        $r13 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror>;

        r16 = virtualinvoke $r13.<net.sourceforge.plantuml.sdot.YMirror: java.awt.geom.Point2D getMirrored(java.awt.geom.Point2D)>(r16);

        d0 = neg d0;

     label2:
        r17 = interfaceinvoke r7.<net.sourceforge.plantuml.svek.extremity.ExtremityFactory: net.sourceforge.plantuml.graphic.UDrawable createUDrawable(java.awt.geom.Point2D,double,net.sourceforge.plantuml.svek.Side)>(r16, d0, null);

        if r17 == null goto label3;

        interfaceinvoke r17.<net.sourceforge.plantuml.graphic.UDrawable: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r12);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("CANNOT DRAW printExtremityAtEnd");

     label5:
        return;

        catch java.lang.UnsupportedOperationException from label2 to label3 with label4;
    }

    private void printDebug(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor $r0, $r2, $r12;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1, $r13, $r17, $r23, r26, r27, r29;
        net.sourceforge.plantuml.ugraphic.UBackground $r3, $r15;
        net.sourceforge.plantuml.sdot.SmetanaPath r4;
        h.ST_Agedge_s $r5;
        h.ST_splines r6;
        smetana.core.CArray $r7;
        java.lang.Object $r8;
        h.ST_bezier r9;
        int $i0, i1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10, $r16, $r20, $r21, $r22;
        net.sourceforge.plantuml.ugraphic.URectangle $r11, $r18;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r14;
        net.sourceforge.plantuml.sdot.YMirror $r19, $r25;
        net.sourceforge.plantuml.ugraphic.UEllipse $r24;
        java.awt.geom.Point2D r28;

        r4 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        r26 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor BLUE>;

        $r1 = interfaceinvoke r26.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor BLUE>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r27 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = r4.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_Agedge_s edge>;

        r6 = specialinvoke r4.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_splines getSplines(h.ST_Agedge_s)>($r5);

        $r7 = r6.<h.ST_splines: smetana.core.CArray list>;

        $r8 = virtualinvoke $r7.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        r9 = (h.ST_bezier) $r8;

        i1 = 0;

     label1:
        $i0 = r9.<h.ST_bezier: int size>;

        if i1 >= $i0 goto label3;

        r28 = specialinvoke r4.<net.sourceforge.plantuml.sdot.SmetanaPath: java.awt.geom.Point2D getPoint(h.ST_splines,int)>(r6, i1);

        $r19 = r4.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror>;

        if $r19 == null goto label2;

        $r25 = r4.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror>;

        r28 = virtualinvoke $r25.<net.sourceforge.plantuml.sdot.YMirror: java.awt.geom.Point2D getMirrored(java.awt.geom.Point2D)>(r28);

     label2:
        $r20 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r20.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r28);

        $r21 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r21.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(-1.0, -1.0);

        $r22 = virtualinvoke $r20.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r21);

        $r23 = interfaceinvoke r27.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r22);

        $r24 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r24.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(3.0, 3.0);

        interfaceinvoke $r23.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r24);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r10 = specialinvoke r4.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ugraphic.UTranslate getLabelRectangleTranslate(java.lang.String)>("label");

        if $r10 == null goto label4;

        $r11 = specialinvoke r4.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ugraphic.URectangle getLabelURectangle()>();

        if $r11 == null goto label4;

        $r12 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor BLUE>;

        $r13 = interfaceinvoke r27.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r14 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r15 = virtualinvoke $r14.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r29 = interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r16 = specialinvoke r4.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ugraphic.UTranslate getLabelRectangleTranslate(java.lang.String)>("label");

        $r17 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        $r18 = specialinvoke r4.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.ugraphic.URectangle getLabelURectangle()>();

        interfaceinvoke $r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r18);

     label4:
        return;
    }

    private net.sourceforge.plantuml.ugraphic.URectangle getLabelURectangle()
    {
        net.sourceforge.plantuml.sdot.SmetanaPath r0;
        h.ST_Agedge_s $r1;
        h.ST_Agrec_s $r2;
        smetana.core.__ptr__ $r3;
        h.ST_Agedgeinfo_t r4;
        h.ST_textlabel_t r5;
        h.ST_pointf r6, r7, r8;
        double d0, d1, d2, d3;
        net.sourceforge.plantuml.ugraphic.URectangle $r9;

        r0 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        $r1 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_Agedge_s edge>;

        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agrec_s AGDATA(h.ST_Agobj_s)>($r1);

        $r3 = virtualinvoke $r2.<h.ST_Agrec_s: smetana.core.__ptr__ castTo(java.lang.Class)>(class "Lh/ST_Agedgeinfo_t;");

        r4 = (h.ST_Agedgeinfo_t) $r3;

        r5 = r4.<h.ST_Agedgeinfo_t: h.ST_textlabel_t label>;

        if r5 != null goto label1;

        return null;

     label1:
        r6 = r5.<h.ST_textlabel_t: h.ST_pointf dimen>;

        r7 = r5.<h.ST_textlabel_t: h.ST_pointf space>;

        r8 = r5.<h.ST_textlabel_t: h.ST_pointf pos>;

        d0 = r8.<h.ST_pointf: double x>;

        d1 = r8.<h.ST_pointf: double y>;

        d2 = r6.<h.ST_pointf: double x>;

        d3 = r6.<h.ST_pointf: double y>;

        $r9 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(d2, d3);

        return $r9;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getLabelRectangleTranslate(java.lang.String)
    {
        net.sourceforge.plantuml.sdot.SmetanaPath r0;
        h.ST_Agedge_s $r1;
        h.ST_Agrec_s $r2;
        h.ST_Agedgeinfo_t r3;
        java.lang.String r4;
        boolean $z0, $z1, $z2;
        h.ST_pointf r5, r6, r7;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        net.sourceforge.plantuml.sdot.YMirror $r8, $r10;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9, $r11, $r12;
        h.ST_textlabel_t r13;

        r0 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_Agedge_s edge>;

        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agrec_s AGDATA(h.ST_Agobj_s)>($r1);

        r3 = (h.ST_Agedgeinfo_t) $r2;

        r13 = null;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("label");

        if $z0 == 0 goto label1;

        r13 = r3.<h.ST_Agedgeinfo_t: h.ST_textlabel_t label>;

        goto label3;

     label1:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("head_label");

        if $z1 == 0 goto label2;

        r13 = r3.<h.ST_Agedgeinfo_t: h.ST_textlabel_t head_label>;

        goto label3;

     label2:
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("tail_label");

        if $z2 == 0 goto label3;

        r13 = r3.<h.ST_Agedgeinfo_t: h.ST_textlabel_t tail_label>;

     label3:
        if r13 != null goto label4;

        return null;

     label4:
        r5 = r13.<h.ST_textlabel_t: h.ST_pointf dimen>;

        r6 = r13.<h.ST_textlabel_t: h.ST_pointf space>;

        r7 = r13.<h.ST_textlabel_t: h.ST_pointf pos>;

        d0 = r7.<h.ST_pointf: double x>;

        d1 = r7.<h.ST_pointf: double y>;

        d2 = r5.<h.ST_pointf: double x>;

        d3 = r5.<h.ST_pointf: double y>;

        $r8 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror>;

        if $r8 != null goto label5;

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d8 = d2 / 2.0;

        $d11 = d0 - $d8;

        $d9 = d3 / 2.0;

        $d10 = d1 - $d9;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d11, $d10);

        return $r12;

     label5:
        $r10 = r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.sdot.YMirror ymirror>;

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d4 = d2 / 2.0;

        $d7 = d0 - $d4;

        $d5 = d3 / 2.0;

        $d6 = d1 + $d5;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d7, $d6);

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.sdot.YMirror: net.sourceforge.plantuml.ugraphic.UTranslate getMirrored(net.sourceforge.plantuml.ugraphic.UTranslate)>($r9);

        return $r11;
    }

    public net.sourceforge.plantuml.posimo.DotPath getDotPath(h.ST_Agedge_s)
    {
        net.sourceforge.plantuml.sdot.SmetanaPath r0;
        h.ST_Agedge_s r1;
        h.ST_splines r2;
        net.sourceforge.plantuml.posimo.DotPath $r3;

        r0 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        r1 := @parameter0: h.ST_Agedge_s;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: h.ST_splines getSplines(h.ST_Agedge_s)>(r1);

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.sdot.SmetanaPath: net.sourceforge.plantuml.posimo.DotPath getDotPath(h.ST_splines)>(r2);

        return $r3;
    }

    private h.ST_splines getSplines(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        h.ST_Agrec_s $r1;
        h.ST_Agedgeinfo_t r2;
        h.ST_splines r3;
        net.sourceforge.plantuml.sdot.SmetanaPath r4;

        r4 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        r0 := @parameter0: h.ST_Agedge_s;

        $r1 = staticinvoke <smetana.core.Macro: h.ST_Agrec_s AGDATA(h.ST_Agobj_s)>(r0);

        r2 = (h.ST_Agedgeinfo_t) $r1;

        r3 = r2.<h.ST_Agedgeinfo_t: h.ST_splines spl>;

        return r3;
    }

    private net.sourceforge.plantuml.posimo.DotPath getDotPath(h.ST_splines)
    {
        h.ST_splines r0;
        net.sourceforge.plantuml.posimo.DotPath $r1, r15;
        smetana.core.CArray $r2;
        java.lang.Object $r3;
        h.ST_bezier r4;
        net.sourceforge.plantuml.sdot.SmetanaPath r5;
        java.awt.geom.Point2D r6, r7, r8, r9, r10, r11, r12;
        int i0, $i1, $i2, i3;
        java.io.PrintStream $r13;

        r5 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        r0 := @parameter0: h.ST_splines;

        if r0 != null goto label1;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("ERROR, no splines for getDotPath");

        return null;

     label1:
        $r1 = new net.sourceforge.plantuml.posimo.DotPath;

        specialinvoke $r1.<net.sourceforge.plantuml.posimo.DotPath: void <init>()>();

        $r2 = r0.<h.ST_splines: smetana.core.CArray list>;

        $r3 = virtualinvoke $r2.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        r4 = (h.ST_bezier) $r3;

        r6 = specialinvoke r5.<net.sourceforge.plantuml.sdot.SmetanaPath: java.awt.geom.Point2D getPoint(h.ST_splines,int)>(r0, 0);

        r7 = specialinvoke r5.<net.sourceforge.plantuml.sdot.SmetanaPath: java.awt.geom.Point2D getPoint(h.ST_splines,int)>(r0, 1);

        r8 = specialinvoke r5.<net.sourceforge.plantuml.sdot.SmetanaPath: java.awt.geom.Point2D getPoint(h.ST_splines,int)>(r0, 2);

        r9 = specialinvoke r5.<net.sourceforge.plantuml.sdot.SmetanaPath: java.awt.geom.Point2D getPoint(h.ST_splines,int)>(r0, 3);

        r15 = virtualinvoke $r1.<net.sourceforge.plantuml.posimo.DotPath: net.sourceforge.plantuml.posimo.DotPath addCurve(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r6, r7, r8, r9);

        i0 = r4.<h.ST_bezier: int size>;

        i3 = 4;

     label2:
        if i3 >= i0 goto label3;

        r10 = specialinvoke r5.<net.sourceforge.plantuml.sdot.SmetanaPath: java.awt.geom.Point2D getPoint(h.ST_splines,int)>(r0, i3);

        $i1 = i3 + 1;

        r11 = specialinvoke r5.<net.sourceforge.plantuml.sdot.SmetanaPath: java.awt.geom.Point2D getPoint(h.ST_splines,int)>(r0, $i1);

        $i2 = i3 + 2;

        r12 = specialinvoke r5.<net.sourceforge.plantuml.sdot.SmetanaPath: java.awt.geom.Point2D getPoint(h.ST_splines,int)>(r0, $i2);

        r15 = virtualinvoke r15.<net.sourceforge.plantuml.posimo.DotPath: net.sourceforge.plantuml.posimo.DotPath addCurve(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r10, r11, r12);

        i3 = i3 + 3;

        goto label2;

     label3:
        return r15;
    }

    private java.awt.geom.Point2D getPoint(h.ST_splines, int)
    {
        h.ST_splines r0;
        smetana.core.CArray $r1, $r4;
        java.lang.Object $r2, $r5;
        h.ST_bezier r3;
        int i0;
        h.ST_pointf r6;
        java.awt.geom.Point2D$Double $r7;
        double $d0, $d1;
        net.sourceforge.plantuml.sdot.SmetanaPath r8;

        r8 := @this: net.sourceforge.plantuml.sdot.SmetanaPath;

        r0 := @parameter0: h.ST_splines;

        i0 := @parameter1: int;

        $r1 = r0.<h.ST_splines: smetana.core.CArray list>;

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        r3 = (h.ST_bezier) $r2;

        $r4 = r3.<h.ST_bezier: smetana.core.CArray list>;

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        r6 = (h.ST_pointf) $r5;

        $r7 = new java.awt.geom.Point2D$Double;

        $d1 = r6.<h.ST_pointf: double x>;

        $d0 = r6.<h.ST_pointf: double y>;

        specialinvoke $r7.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        return $r7;
    }
}
