public class net.sourceforge.plantuml.activitydiagram.ActivityDiagram extends net.sourceforge.plantuml.cucadiagram.CucaDiagram
{
    private net.sourceforge.plantuml.cucadiagram.IEntity lastEntityConsulted;
    private net.sourceforge.plantuml.cucadiagram.IEntity lastEntityBrancheConsulted;
    private net.sourceforge.plantuml.activitydiagram.ConditionalContext currentContext;

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.UmlDiagramType $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType ACTIVITY>;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, $r4, r3);

        virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void setNamespaceSeparator(java.lang.String)>(null);

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, $r6;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.Code r3;
        net.sourceforge.plantuml.cucadiagram.LeafType r4;
        net.sourceforge.plantuml.graphic.USymbol r5;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r4 := @parameter2: net.sourceforge.plantuml.cucadiagram.LeafType;

        r5 := @parameter3: net.sourceforge.plantuml.graphic.USymbol;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r6 = (net.sourceforge.plantuml.cucadiagram.Ident) $r2;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>($r6, r3, r4, r5);

        return $r7;
    }

    private java.lang.String getAutoBranch()
    {
        java.lang.StringBuilder $r0, $r1, $r2;
        int $i0;
        java.lang.String $r3;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r4;

        r4 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $i0 = staticinvoke <net.sourceforge.plantuml.utils.UniqueSequence: int getValue()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getOrCreate(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.LeafType)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        boolean $z0, $z2;
        net.sourceforge.plantuml.cucadiagram.Code r1;
        net.sourceforge.plantuml.cucadiagram.Ident r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.cucadiagram.LeafType r4, $r5;
        net.sourceforge.plantuml.cucadiagram.ILeaf r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter3: net.sourceforge.plantuml.cucadiagram.LeafType;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r2);

        goto label2;

     label1:
        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r1);

     label2:
        if $z2 == 0 goto label3;

        r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r2, r1, r4, null);

        $r5 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        if $r5 == r4 goto label4;

        return null;

     label3:
        r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r2, r1, r3, r4, null);

     label4:
        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void updateLasts(net.sourceforge.plantuml.cucadiagram.IEntity)>(r6);

        return r6;
    }

    public net.sourceforge.plantuml.cucadiagram.ILeaf getLeafVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1;
        net.sourceforge.plantuml.cucadiagram.ILeaf r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void updateLasts(net.sourceforge.plantuml.cucadiagram.IEntity)>(r2);

        return r2;
    }

    public void startIf(java.lang.String)
    {
        java.lang.String r0, $r12;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r2;
        net.sourceforge.plantuml.cucadiagram.Ident r3;
        boolean $z0;
        java.lang.CharSequence[] $r5;
        net.sourceforge.plantuml.cucadiagram.Display $r6;
        net.sourceforge.plantuml.cucadiagram.LeafType $r7;
        net.sourceforge.plantuml.cucadiagram.ILeaf r8;
        net.sourceforge.plantuml.activitydiagram.ConditionalContext $r9, $r11;
        net.sourceforge.plantuml.Direction $r10;
        net.sourceforge.plantuml.cucadiagram.Code $r13;

        r2 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r12 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: java.lang.String getAutoBranch()>();

        goto label2;

     label1:
        $r12 = r0;

     label2:
        r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>($r12);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z0 == 0 goto label3;

        $r13 = r3;

        goto label4;

     label3:
        $r13 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>($r12);

     label4:
        $r5 = newarray (java.lang.CharSequence)[1];

        $r5[0] = "";

        $r6 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r5);

        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType BRANCH>;

        r8 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r3, $r13, $r6, $r7, null);

        $r9 = new net.sourceforge.plantuml.activitydiagram.ConditionalContext;

        $r11 = r2.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.activitydiagram.ConditionalContext currentContext>;

        $r10 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction DOWN>;

        specialinvoke $r9.<net.sourceforge.plantuml.activitydiagram.ConditionalContext: void <init>(net.sourceforge.plantuml.activitydiagram.ConditionalContext,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.Direction)>($r11, r8, $r10);

        r2.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.activitydiagram.ConditionalContext currentContext> = $r9;

        return;
    }

    public void endif()
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.activitydiagram.ConditionalContext $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.activitydiagram.ConditionalContext currentContext>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram.ConditionalContext: net.sourceforge.plantuml.activitydiagram.ConditionalContext getParent()>();

        r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.activitydiagram.ConditionalContext currentContext> = $r2;

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.ILeaf getStart()
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Display $r3;
        net.sourceforge.plantuml.cucadiagram.LeafType $r4;
        net.sourceforge.plantuml.cucadiagram.IEntity $r5;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r6;
        net.sourceforge.plantuml.cucadiagram.Code $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>("start");

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r7 = r1;

        goto label2;

     label1:
        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>("start");

     label2:
        $r3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>("start");

        $r4 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CIRCLE_START>;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreate(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType)>(r1, $r7, $r3, $r4);

        $r6 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r5;

        return $r6;
    }

    public net.sourceforge.plantuml.cucadiagram.ILeaf getEnd(java.lang.String)
    {
        java.lang.String r0, $r12;
        java.lang.StringBuilder $r1, $r2, $r3;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r5;
        net.sourceforge.plantuml.cucadiagram.Ident r6;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Display $r8;
        net.sourceforge.plantuml.cucadiagram.LeafType $r9;
        net.sourceforge.plantuml.cucadiagram.IEntity $r10;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r11;
        net.sourceforge.plantuml.cucadiagram.Code $r13;

        r5 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r12 = "end";

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("end$");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        r6 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>($r12);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z0 == 0 goto label3;

        $r13 = r6;

        goto label4;

     label3:
        $r13 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>($r12);

     label4:
        $r8 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>("end");

        $r9 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CIRCLE_END>;

        $r10 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreate(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType)>(r6, $r13, $r8, $r9);

        $r11 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r10;

        return $r11;
    }

    private void updateLasts(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.IEntity r0;
        net.sourceforge.plantuml.cucadiagram.LeafType $r1, $r2, $r4, $r5;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r3;

        r3 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r2 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType NOTE>;

        if $r1 != $r2 goto label2;

     label1:
        return;

     label2:
        r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity lastEntityConsulted> = r0;

        $r4 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r5 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType BRANCH>;

        if $r4 != $r5 goto label3;

        r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity lastEntityBrancheConsulted> = r0;

     label3:
        return;
    }

    public net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, $r7;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.Code r3;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        net.sourceforge.plantuml.cucadiagram.LeafType r5;
        net.sourceforge.plantuml.graphic.USymbol r6;
        net.sourceforge.plantuml.cucadiagram.ILeaf r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r4 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r5 := @parameter3: net.sourceforge.plantuml.cucadiagram.LeafType;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.USymbol;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r7 = (net.sourceforge.plantuml.cucadiagram.Ident) $r2;

        r8 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>($r7, r3, r4, r5, r6);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void updateLasts(net.sourceforge.plantuml.cucadiagram.IEntity)>(r8);

        return r8;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity createNote(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, $r6;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.Code r3;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        net.sourceforge.plantuml.cucadiagram.LeafType $r5;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r4 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r6 = (net.sourceforge.plantuml.cucadiagram.Ident) $r2;

        $r5 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType NOTE>;

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>($r6, r3, r4, $r5, null);

        return $r7;
    }

    protected final java.util.List getDotStrings()
    {
        java.lang.String[] $r0;
        java.util.List $r1;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r2;

        r2 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "nodesep=.20;";

        $r0[1] = "ranksep=0.4;";

        $r0[2] = "edge [fontsize=11,labelfontsize=11];";

        $r0[3] = "node [fontsize=11];";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r1;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r3;
        int $i0;
        java.lang.String $r6;

        r3 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: int getLeafssize()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" activities)");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>($r6);

        return $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getLastEntityConsulted()
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity lastEntityConsulted>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getLastEntityBrancheConsulted()
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity lastEntityBrancheConsulted>;

        return $r1;
    }

    public final net.sourceforge.plantuml.activitydiagram.ConditionalContext getCurrentContext()
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.activitydiagram.ConditionalContext $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.activitydiagram.ConditionalContext currentContext>;

        return $r1;
    }

    public final void setLastEntityConsulted(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IEntity r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity lastEntityConsulted> = r1;

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity createInnerActivity()
    {
        java.lang.StringBuilder $r0, $r1, $r2;
        int $i0;
        java.lang.String r3;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r4;
        net.sourceforge.plantuml.cucadiagram.Ident r5;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.cucadiagram.GroupType $r8;
        net.sourceforge.plantuml.cucadiagram.IGroup $r9, r11;
        net.sourceforge.plantuml.cucadiagram.NamespaceStrategy $r10;
        net.sourceforge.plantuml.cucadiagram.Code $r12;

        r4 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("##");

        $i0 = staticinvoke <net.sourceforge.plantuml.utils.UniqueSequence: int getValue()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r3);

        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r12 = r5;

        goto label2;

     label1:
        $r12 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r3);

     label2:
        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(net.sourceforge.plantuml.cucadiagram.Code)>($r12);

        $r8 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType INNER_ACTIVITY>;

        $r9 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r10 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r5, $r12, $r7, $r8, $r9, $r10);

        r11 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        r4.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity lastEntityConsulted> = null;

        r4.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity lastEntityBrancheConsulted> = null;

        return r11;
    }

    public void concurrentActivity(java.lang.String)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IGroup $r1, $r9, $r15, $r20;
        net.sourceforge.plantuml.cucadiagram.GroupType $r2, $r3, $r10, $r11, $r14, $r21;
        java.lang.StringBuilder $r4, $r5, $r6, $r18, $r19, $r22;
        int $i0;
        java.lang.String r7, $r23, r24;
        net.sourceforge.plantuml.cucadiagram.Code r8;
        net.sourceforge.plantuml.cucadiagram.Ident r12;
        net.sourceforge.plantuml.cucadiagram.Display $r13;
        net.sourceforge.plantuml.cucadiagram.NamespaceStrategy $r16;
        java.lang.IllegalStateException $r17;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r24 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r3 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_ACTIVITY>;

        if $r2 != $r3 goto label1;

        virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void endGroup()>();

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("##");

        $i0 = staticinvoke <net.sourceforge.plantuml.utils.UniqueSequence: int getValue()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r7);

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r11 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType INNER_ACTIVITY>;

        if $r10 == $r11 goto label2;

        $r17 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type=");

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r21 = interfaceinvoke $r20.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label2:
        r12 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r7);

        $r13 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>("code");

        $r14 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_ACTIVITY>;

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r16 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r12, r8, $r13, $r14, $r15, $r16);

        r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity lastEntityConsulted> = null;

        r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity lastEntityBrancheConsulted> = null;

        return;
    }

    public volatile net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1;
        net.sourceforge.plantuml.cucadiagram.Code r2;
        net.sourceforge.plantuml.cucadiagram.LeafType r3;
        net.sourceforge.plantuml.graphic.USymbol r4;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.LeafType;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.USymbol;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r1, r2, r3, r4);

        return $r5;
    }
}
