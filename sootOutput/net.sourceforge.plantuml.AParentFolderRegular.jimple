public class net.sourceforge.plantuml.AParentFolderRegular extends java.lang.Object implements net.sourceforge.plantuml.AParentFolder
{
    private final net.sourceforge.plantuml.security.SFile dir;

    public void <init>(net.sourceforge.plantuml.security.SFile)
    {
        net.sourceforge.plantuml.AParentFolderRegular r0;
        net.sourceforge.plantuml.security.SFile r1;

        r0 := @this: net.sourceforge.plantuml.AParentFolderRegular;

        r1 := @parameter0: net.sourceforge.plantuml.security.SFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.AParentFolderRegular: net.sourceforge.plantuml.security.SFile dir> = r1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r5;
        net.sourceforge.plantuml.AParentFolderRegular r2;
        net.sourceforge.plantuml.security.SFile $r3, $r4;
        java.lang.String $r6, $r7;

        r2 := @this: net.sourceforge.plantuml.AParentFolderRegular;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AParentFolderRegular::");

        $r3 = r2.<net.sourceforge.plantuml.AParentFolderRegular: net.sourceforge.plantuml.security.SFile dir>;

        if $r3 != null goto label1;

        $r7 = "NULL";

        goto label2;

     label1:
        $r4 = r2.<net.sourceforge.plantuml.AParentFolderRegular: net.sourceforge.plantuml.security.SFile dir>;

        $r7 = virtualinvoke $r4.<net.sourceforge.plantuml.security.SFile: java.lang.String getPrintablePath()>();

     label2:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public net.sourceforge.plantuml.AFile getAFile(java.lang.String) throws java.io.IOException
    {
        net.sourceforge.plantuml.AParentFolderRegular r0;
        net.sourceforge.plantuml.security.SFile $r1, $r2, $r3, $r6, $r7, r8;
        java.lang.String r4;
        boolean $z0;
        net.sourceforge.plantuml.AFileRegular $r5;

        r0 := @this: net.sourceforge.plantuml.AParentFolderRegular;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.AParentFolderRegular: net.sourceforge.plantuml.security.SFile dir>;

        if $r1 != null goto label1;

        $r7 = new net.sourceforge.plantuml.security.SFile;

        specialinvoke $r7.<net.sourceforge.plantuml.security.SFile: void <init>(java.lang.String)>(r4);

        r8 = $r7;

        goto label2;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.AParentFolderRegular: net.sourceforge.plantuml.security.SFile dir>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getAbsoluteFile()>();

        r8 = virtualinvoke $r3.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile file(java.lang.String)>(r4);

     label2:
        $z0 = virtualinvoke r8.<net.sourceforge.plantuml.security.SFile: boolean exists()>();

        if $z0 == 0 goto label3;

        $r5 = new net.sourceforge.plantuml.AFileRegular;

        $r6 = virtualinvoke r8.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getCanonicalFile()>();

        specialinvoke $r5.<net.sourceforge.plantuml.AFileRegular: void <init>(net.sourceforge.plantuml.security.SFile)>($r6);

        return $r5;

     label3:
        return null;
    }
}
