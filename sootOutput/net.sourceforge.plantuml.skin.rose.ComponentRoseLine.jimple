public class net.sourceforge.plantuml.skin.rose.ComponentRoseLine extends net.sourceforge.plantuml.skin.AbstractComponent
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor color;
    private final boolean continueLine;
    private final net.sourceforge.plantuml.ugraphic.UStroke stroke;

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.ugraphic.color.HColor, boolean, net.sourceforge.plantuml.ugraphic.UStroke, net.sourceforge.plantuml.ugraphic.color.HColorSet)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseLine r0;
        net.sourceforge.plantuml.style.Style r1;
        boolean $z0, z1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, $r8;
        net.sourceforge.plantuml.ugraphic.UStroke r3, $r9;
        net.sourceforge.plantuml.style.PName $r4;
        net.sourceforge.plantuml.style.Value $r5;
        net.sourceforge.plantuml.api.ThemeStyle r6;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r7;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseLine;

        r6 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r1 := @parameter1: net.sourceforge.plantuml.style.Style;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        z1 := @parameter3: boolean;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UStroke;

        r7 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractComponent: void <init>(net.sourceforge.plantuml.style.Style)>(r1);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r4 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r4);

        $r8 = interfaceinvoke $r5.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>(r6, r7);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: net.sourceforge.plantuml.ugraphic.color.HColor color> = $r8;

        $r9 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: net.sourceforge.plantuml.ugraphic.UStroke stroke> = $r9;

        goto label2;

     label1:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: net.sourceforge.plantuml.ugraphic.color.HColor color> = r2;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: net.sourceforge.plantuml.ugraphic.UStroke stroke> = r3;

     label2:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: boolean continueLine> = z1;

        return;
    }

    protected void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.skin.rose.ComponentRoseLine r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.UStroke $r4, $r5, $r6;
        double $d0, $d1, $d2, $d3, $d4;
        int i0;
        net.sourceforge.plantuml.ugraphic.UGraphic r7, r8, r9, $r11;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10;
        net.sourceforge.plantuml.ugraphic.ULine $r12;

        r2 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseLine;

        r7 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r3 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        r8 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r6 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        r9 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        goto label3;

     label1:
        $z1 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: boolean continueLine>;

        if $z1 == 0 goto label2;

        $r5 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r9 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        goto label3;

     label2:
        $r4 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        r9 = staticinvoke <net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.ugraphic.UGraphic stroke(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r8, 5.0, 5.0, $d0);

     label3:
        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d1 / 2.0;

        i0 = (int) $d2;

        $d3 = (double) i0;

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d3);

        $r11 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>($d4);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseLine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseLine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 20.0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseLine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseLine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 1.0;
    }
}
