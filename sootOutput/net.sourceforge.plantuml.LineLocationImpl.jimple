public class net.sourceforge.plantuml.LineLocationImpl extends java.lang.Object implements net.sourceforge.plantuml.LineLocation
{
    private final java.lang.String desc;
    private final int position;
    private final net.sourceforge.plantuml.LineLocation parent;

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r5;
        net.sourceforge.plantuml.LineLocationImpl r1;
        java.lang.String $r2, $r6;
        int $i0;

        r1 := @this: net.sourceforge.plantuml.LineLocationImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.LineLocationImpl: java.lang.String desc>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $i0 = r1.<net.sourceforge.plantuml.LineLocationImpl: int position>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void <init>(java.lang.String, net.sourceforge.plantuml.LineLocation)
    {
        net.sourceforge.plantuml.LineLocationImpl r0;
        java.lang.String r1;
        net.sourceforge.plantuml.LineLocation r2;

        r0 := @this: net.sourceforge.plantuml.LineLocationImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        specialinvoke r0.<net.sourceforge.plantuml.LineLocationImpl: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,int)>(r1, r2, -1);

        return;
    }

    private void <init>(java.lang.String, net.sourceforge.plantuml.LineLocation, int)
    {
        net.sourceforge.plantuml.LineLocationImpl r0;
        net.sourceforge.plantuml.LineLocation r1;
        java.lang.String r2, $r4;
        java.lang.Object $r3;
        int i0;

        r0 := @this: net.sourceforge.plantuml.LineLocationImpl;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.LineLocation;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.LineLocationImpl: net.sourceforge.plantuml.LineLocation parent> = r1;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        r0.<net.sourceforge.plantuml.LineLocationImpl: java.lang.String desc> = $r4;

        r0.<net.sourceforge.plantuml.LineLocationImpl: int position> = i0;

        return;
    }

    public net.sourceforge.plantuml.LineLocationImpl oneLineRead()
    {
        net.sourceforge.plantuml.LineLocationImpl $r0, r1;
        int $i0, $i1;
        net.sourceforge.plantuml.LineLocation $r2;
        java.lang.String $r3;

        r1 := @this: net.sourceforge.plantuml.LineLocationImpl;

        $r0 = new net.sourceforge.plantuml.LineLocationImpl;

        $r3 = r1.<net.sourceforge.plantuml.LineLocationImpl: java.lang.String desc>;

        $r2 = r1.<net.sourceforge.plantuml.LineLocationImpl: net.sourceforge.plantuml.LineLocation parent>;

        $i0 = r1.<net.sourceforge.plantuml.LineLocationImpl: int position>;

        $i1 = $i0 + 1;

        specialinvoke $r0.<net.sourceforge.plantuml.LineLocationImpl: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,int)>($r3, $r2, $i1);

        return $r0;
    }

    public int getPosition()
    {
        net.sourceforge.plantuml.LineLocationImpl r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.LineLocationImpl;

        $i0 = r0.<net.sourceforge.plantuml.LineLocationImpl: int position>;

        return $i0;
    }

    public java.lang.String getDescription()
    {
        net.sourceforge.plantuml.LineLocationImpl r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.LineLocationImpl;

        $r1 = r0.<net.sourceforge.plantuml.LineLocationImpl: java.lang.String desc>;

        return $r1;
    }

    public net.sourceforge.plantuml.LineLocation getParent()
    {
        net.sourceforge.plantuml.LineLocationImpl r0;
        net.sourceforge.plantuml.LineLocation $r1;

        r0 := @this: net.sourceforge.plantuml.LineLocationImpl;

        $r1 = r0.<net.sourceforge.plantuml.LineLocationImpl: net.sourceforge.plantuml.LineLocation parent>;

        return $r1;
    }

    private boolean isStandardLibrary()
    {
        net.sourceforge.plantuml.LineLocationImpl r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.LineLocationImpl;

        $r1 = r0.<net.sourceforge.plantuml.LineLocationImpl: java.lang.String desc>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("<");

        return $z0;
    }

    public int compareTo(net.sourceforge.plantuml.LineLocation)
    {
        net.sourceforge.plantuml.LineLocation r0;
        net.sourceforge.plantuml.LineLocationImpl r1, r2;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2;

        r2 := @this: net.sourceforge.plantuml.LineLocationImpl;

        r0 := @parameter0: net.sourceforge.plantuml.LineLocation;

        r1 = (net.sourceforge.plantuml.LineLocationImpl) r0;

        $z0 = specialinvoke r2.<net.sourceforge.plantuml.LineLocationImpl: boolean isStandardLibrary()>();

        if $z0 == 0 goto label1;

        $z3 = specialinvoke r1.<net.sourceforge.plantuml.LineLocationImpl: boolean isStandardLibrary()>();

        if $z3 != 0 goto label1;

        return -1;

     label1:
        $z1 = specialinvoke r2.<net.sourceforge.plantuml.LineLocationImpl: boolean isStandardLibrary()>();

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r1.<net.sourceforge.plantuml.LineLocationImpl: boolean isStandardLibrary()>();

        if $z2 == 0 goto label2;

        return 1;

     label2:
        $i1 = r2.<net.sourceforge.plantuml.LineLocationImpl: int position>;

        $i0 = r1.<net.sourceforge.plantuml.LineLocationImpl: int position>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        net.sourceforge.plantuml.LineLocationImpl r0;
        java.lang.Object r1;
        net.sourceforge.plantuml.LineLocation $r2;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.LineLocationImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (net.sourceforge.plantuml.LineLocation) r1;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.LineLocationImpl: int compareTo(net.sourceforge.plantuml.LineLocation)>($r2);

        return $i0;
    }
}
