public class net.sourceforge.plantuml.skin.Padder extends java.lang.Object
{
    private final double margin;
    private final double padding;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor borderColor;
    private final double roundCorner;
    public static final net.sourceforge.plantuml.skin.Padder NONE;

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r8, $r9, $r11;
        net.sourceforge.plantuml.skin.Padder r2;
        double $d0, $d1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r7, $r10;
        java.lang.String $r12;

        r2 := @this: net.sourceforge.plantuml.skin.Padder;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $d0 = r2.<net.sourceforge.plantuml.skin.Padder: double margin>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $d1 = r2.<net.sourceforge.plantuml.skin.Padder: double padding>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = r2.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r10 = r2.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private void <init>(double, double, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, double)
    {
        net.sourceforge.plantuml.skin.Padder r0;
        double d0, d1, d2;
        net.sourceforge.plantuml.ugraphic.color.HColor r1, r2;

        r0 := @this: net.sourceforge.plantuml.skin.Padder;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r1 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        d2 := @parameter4: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.skin.Padder: double margin> = d0;

        r0.<net.sourceforge.plantuml.skin.Padder: double padding> = d1;

        r0.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = r1;

        r0.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor> = r2;

        r0.<net.sourceforge.plantuml.skin.Padder: double roundCorner> = d2;

        return;
    }

    public net.sourceforge.plantuml.skin.Padder withMargin(double)
    {
        net.sourceforge.plantuml.skin.Padder $r0, r1;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, $r3;

        r1 := @this: net.sourceforge.plantuml.skin.Padder;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.skin.Padder;

        $d2 = r1.<net.sourceforge.plantuml.skin.Padder: double padding>;

        $r3 = r1.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $r2 = r1.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $d1 = r1.<net.sourceforge.plantuml.skin.Padder: double roundCorner>;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.Padder: void <init>(double,double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double)>(d0, $d2, $r3, $r2, $d1);

        return $r0;
    }

    public net.sourceforge.plantuml.skin.Padder withPadding(double)
    {
        net.sourceforge.plantuml.skin.Padder $r0, r1;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, $r3;

        r1 := @this: net.sourceforge.plantuml.skin.Padder;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.skin.Padder;

        $d2 = r1.<net.sourceforge.plantuml.skin.Padder: double margin>;

        $r3 = r1.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $r2 = r1.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $d1 = r1.<net.sourceforge.plantuml.skin.Padder: double roundCorner>;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.Padder: void <init>(double,double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double)>($d2, d0, $r3, $r2, $d1);

        return $r0;
    }

    public net.sourceforge.plantuml.skin.Padder withBackgroundColor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.skin.Padder $r0, r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, $r3;
        double $d0, $d1, $d2;

        r1 := @this: net.sourceforge.plantuml.skin.Padder;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.skin.Padder;

        $d2 = r1.<net.sourceforge.plantuml.skin.Padder: double margin>;

        $d1 = r1.<net.sourceforge.plantuml.skin.Padder: double padding>;

        $r3 = r1.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $d0 = r1.<net.sourceforge.plantuml.skin.Padder: double roundCorner>;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.Padder: void <init>(double,double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double)>($d2, $d1, r2, $r3, $d0);

        return $r0;
    }

    public net.sourceforge.plantuml.skin.Padder withBorderColor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.skin.Padder $r0, r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, $r3;
        double $d0, $d1, $d2;

        r1 := @this: net.sourceforge.plantuml.skin.Padder;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.skin.Padder;

        $d2 = r1.<net.sourceforge.plantuml.skin.Padder: double margin>;

        $d1 = r1.<net.sourceforge.plantuml.skin.Padder: double padding>;

        $r3 = r1.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $d0 = r1.<net.sourceforge.plantuml.skin.Padder: double roundCorner>;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.Padder: void <init>(double,double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double)>($d2, $d1, $r3, r2, $d0);

        return $r0;
    }

    public net.sourceforge.plantuml.skin.Padder withRoundCorner(double)
    {
        net.sourceforge.plantuml.skin.Padder $r0, r1;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, $r3;

        r1 := @this: net.sourceforge.plantuml.skin.Padder;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.skin.Padder;

        $d2 = r1.<net.sourceforge.plantuml.skin.Padder: double margin>;

        $d1 = r1.<net.sourceforge.plantuml.skin.Padder: double padding>;

        $r3 = r1.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $r2 = r1.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.Padder: void <init>(double,double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double)>($d2, $d1, $r3, $r2, d0);

        return $r0;
    }

    public final double getMargin()
    {
        net.sourceforge.plantuml.skin.Padder r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.Padder;

        $d0 = r0.<net.sourceforge.plantuml.skin.Padder: double margin>;

        return $d0;
    }

    public final double getPadding()
    {
        net.sourceforge.plantuml.skin.Padder r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.Padder;

        $d0 = r0.<net.sourceforge.plantuml.skin.Padder: double padding>;

        return $d0;
    }

    public final net.sourceforge.plantuml.ugraphic.color.HColor getBackgroundColor()
    {
        net.sourceforge.plantuml.skin.Padder r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.skin.Padder;

        $r1 = r0.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        return $r1;
    }

    public final net.sourceforge.plantuml.ugraphic.color.HColor getBorderColor()
    {
        net.sourceforge.plantuml.skin.Padder r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.skin.Padder;

        $r1 = r0.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        return $r1;
    }

    public net.sourceforge.plantuml.graphic.TextBlock apply(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.skin.Padder r0, $r1;
        net.sourceforge.plantuml.skin.Padder$1 $r2;
        net.sourceforge.plantuml.graphic.TextBlock r3;

        r0 := @this: net.sourceforge.plantuml.skin.Padder;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r1 = <net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.skin.Padder NONE>;

        if r0 != $r1 goto label1;

        return r3;

     label1:
        $r2 = new net.sourceforge.plantuml.skin.Padder$1;

        specialinvoke $r2.<net.sourceforge.plantuml.skin.Padder$1: void <init>(net.sourceforge.plantuml.skin.Padder,net.sourceforge.plantuml.graphic.TextBlock)>(r0, r3);

        return $r2;
    }

    static double access$000(net.sourceforge.plantuml.skin.Padder)
    {
        net.sourceforge.plantuml.skin.Padder r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.skin.Padder;

        $d0 = r0.<net.sourceforge.plantuml.skin.Padder: double margin>;

        return $d0;
    }

    static double access$100(net.sourceforge.plantuml.skin.Padder)
    {
        net.sourceforge.plantuml.skin.Padder r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.skin.Padder;

        $d0 = r0.<net.sourceforge.plantuml.skin.Padder: double padding>;

        return $d0;
    }

    static net.sourceforge.plantuml.ugraphic.color.HColor access$200(net.sourceforge.plantuml.skin.Padder)
    {
        net.sourceforge.plantuml.skin.Padder r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @parameter0: net.sourceforge.plantuml.skin.Padder;

        $r1 = r0.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.color.HColor access$300(net.sourceforge.plantuml.skin.Padder)
    {
        net.sourceforge.plantuml.skin.Padder r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @parameter0: net.sourceforge.plantuml.skin.Padder;

        $r1 = r0.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        return $r1;
    }

    static double access$400(net.sourceforge.plantuml.skin.Padder)
    {
        net.sourceforge.plantuml.skin.Padder r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.skin.Padder;

        $d0 = r0.<net.sourceforge.plantuml.skin.Padder: double roundCorner>;

        return $d0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.skin.Padder $r0;

        $r0 = new net.sourceforge.plantuml.skin.Padder;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.Padder: void <init>(double,double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double)>(0.0, 0.0, null, null, 0.0);

        <net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.skin.Padder NONE> = $r0;

        return;
    }
}
