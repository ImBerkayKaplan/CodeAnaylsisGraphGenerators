public class net.sourceforge.plantuml.activitydiagram3.ftile.Arrows extends java.lang.Object
{
    private static final double delta1;
    private static final double delta2;

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Arrows r0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Arrows;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.ugraphic.UPolygon asToUp()
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>(java.lang.String)>("asToUp");

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-4.0, 10.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(4.0, 10.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 6.0);

        return $r0;
    }

    public static net.sourceforge.plantuml.ugraphic.UPolygon asToDown()
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>(java.lang.String)>("asToDown");

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-4.0, -10.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(4.0, -10.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, -6.0);

        return $r0;
    }

    public static net.sourceforge.plantuml.ugraphic.UPolygon asToRight()
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>(java.lang.String)>("asToRight");

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-10.0, -4.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-10.0, 4.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-6.0, 0.0);

        return $r0;
    }

    public static net.sourceforge.plantuml.ugraphic.UPolygon asToLeft()
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>(java.lang.String)>("asToLeft");

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(10.0, -4.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(10.0, 4.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(6.0, 0.0);

        return $r0;
    }

    public static net.sourceforge.plantuml.ugraphic.UPolygon asTo(net.sourceforge.plantuml.Direction)
    {
        net.sourceforge.plantuml.Direction r0, $r1, $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;
        net.sourceforge.plantuml.ugraphic.UPolygon $r6, $r7, $r8, $r9;

        r0 := @parameter0: net.sourceforge.plantuml.Direction;

        $r1 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction UP>;

        if r0 != $r1 goto label1;

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToUp()>();

        return $r9;

     label1:
        $r2 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction DOWN>;

        if r0 != $r2 goto label2;

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        return $r8;

     label2:
        $r3 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r0 != $r3 goto label3;

        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToLeft()>();

        return $r7;

     label3:
        $r4 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if r0 != $r4 goto label4;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToRight()>();

        return $r6;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: double delta2> = 4.0;

        <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: double delta1> = 10.0;

        return;
    }
}
