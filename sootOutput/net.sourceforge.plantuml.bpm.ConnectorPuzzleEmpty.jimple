public class net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty extends net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle implements net.sourceforge.plantuml.bpm.Placeable, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.bpm.ConnectorPuzzle
{

    public void <init>()
    {
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r0;

        r0 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        specialinvoke r0.<net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty get(java.lang.String)
    {
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty $r0;
        net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where[] r2;
        int i0, i1;
        net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where r3;
        java.lang.String r4, $r5;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        specialinvoke $r0.<net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: void <init>()>();

        r2 = staticinvoke <net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where[] values()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: java.lang.String toShortString()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: void append(net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public boolean checkDirections(java.lang.String)
    {
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r0, $r3;
        java.util.Set $r1, $r4;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: java.util.Set connections()>();

        $r3 = staticinvoke <net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty get(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: java.util.Set connections()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r0;
        java.util.Set $r1, $r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: java.util.Set connections()>();

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 != 0 goto label1;

        return "NONE";

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: java.util.Set connections()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getDimension(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.ISkinParam r3;

        r1 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(20.0, 20.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock toTextBlock(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r0;
        net.sourceforge.plantuml.ISkinParam r1;

        r0 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        return r0;
    }

    public java.lang.String getId()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r1;

        r1 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor $r0;
        net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where[] r1;
        int i0, i1;
        net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where r2;
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r3;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UGraphic r4, r5;

        r3 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor BLUE>;

        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        r1 = staticinvoke <net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where[] values()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: boolean have(net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where)>(r2);

        if $z0 == 0 goto label2;

        specialinvoke r3.<net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where)>(r5, r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where)
    {
        net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where r0, $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5, $r7, $r10, $r13, $r16;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r9, $r12, $r15;
        net.sourceforge.plantuml.ugraphic.ULine $r8, $r11, $r14, $r17;
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r18;

        r18 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where;

        $r1 = <net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where WEST>;

        if r0 != $r1 goto label1;

        $r15 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(10.0);

        $r16 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r17 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(10.0);

        interfaceinvoke $r16.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r17);

     label1:
        $r2 = <net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where EAST>;

        if r0 != $r2 goto label2;

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(10.0, 10.0);

        $r13 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r14 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(10.0);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r14);

     label2:
        $r3 = <net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where NORTH>;

        if r0 != $r3 goto label3;

        $r9 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(10.0);

        $r10 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $r11 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(10.0);

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r11);

     label3:
        $r4 = <net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where SOUTH>;

        if r0 != $r4 goto label4;

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(10.0, 10.0);

        $r7 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(10.0);

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

     label4:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(20.0, 20.0);

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.InnerStrategy r3;

        r0 := @this: net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        return null;
    }
}
