class net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2 extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    final net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0;

    void <init>(net.sourceforge.plantuml.timingdiagram.PlayerAnalog)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerAnalog r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerAnalog;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerAnalog $r1, $r3, $r5, $r7, $r9, $r14, $r16, $r21, $r22, $r25, $r34;
        java.lang.Integer $r2;
        net.sourceforge.plantuml.graphic.SymbolContext $r4;
        java.lang.Double $r6, $r8, $r24, $r33;
        java.util.SortedMap $r10;
        java.util.Set $r11;
        java.util.Iterator r12;
        net.sourceforge.plantuml.ugraphic.UTranslate $r13, $r29;
        double $d0, $d1, $d2, d3, $d4, d5, d6, $d7, $d8, d9, $d10, d11;
        net.sourceforge.plantuml.ugraphic.UGraphic $r15, $r30, r35, r36;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r17, $r26;
        net.sourceforge.plantuml.ugraphic.ULine $r18, $r31;
        java.lang.Object $r19, $r23, $r27, $r32;
        java.util.Map$Entry r20;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r28;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2;

        r35 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerAnalog: java.lang.Integer access$200(net.sourceforge.plantuml.timingdiagram.PlayerAnalog)>($r1);

        if $r2 == null goto label1;

        $r34 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerAnalog: void access$300(net.sourceforge.plantuml.timingdiagram.PlayerAnalog,net.sourceforge.plantuml.ugraphic.UGraphic)>($r34, r35);

     label1:
        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog: net.sourceforge.plantuml.graphic.SymbolContext getContext()>();

        r36 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r35);

        d9 = 0.0;

        $r5 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerAnalog: java.lang.Double access$400(net.sourceforge.plantuml.timingdiagram.PlayerAnalog)>($r5);

        if $r6 != null goto label2;

        $d10 = 0.0;

        goto label3;

     label2:
        $r7 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        $r8 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerAnalog: java.lang.Double access$400(net.sourceforge.plantuml.timingdiagram.PlayerAnalog)>($r7);

        $d10 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

     label3:
        d11 = $d10;

        $r9 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        $r10 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerAnalog: java.util.SortedMap access$500(net.sourceforge.plantuml.timingdiagram.PlayerAnalog)>($r9);

        $r11 = interfaceinvoke $r10.<java.util.SortedMap: java.util.Set entrySet()>();

        r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r19 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r19;

        $r21 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        d3 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerAnalog: double access$600(net.sourceforge.plantuml.timingdiagram.PlayerAnalog,double)>($r21, d11);

        $r22 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        $r23 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (java.lang.Double) $r23;

        $d4 = virtualinvoke $r24.<java.lang.Double: double doubleValue()>();

        d5 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerAnalog: double access$600(net.sourceforge.plantuml.timingdiagram.PlayerAnalog,double)>($r22, $d4);

        $r25 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        $r26 = $r25.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $r27 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = (net.sourceforge.plantuml.timingdiagram.TimeTick) $r27;

        d6 = virtualinvoke $r26.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r28);

        $r29 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r29.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d9, d3);

        $r30 = interfaceinvoke r36.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r29);

        $r31 = new net.sourceforge.plantuml.ugraphic.ULine;

        $d8 = d6 - d9;

        $d7 = d5 - d3;

        specialinvoke $r31.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d8, $d7);

        interfaceinvoke $r30.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r31);

        d9 = d6;

        $r32 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (java.lang.Double) $r32;

        d11 = virtualinvoke $r33.<java.lang.Double: double doubleValue()>();

        goto label4;

     label5:
        $r13 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r14 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        $d0 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerAnalog: double access$600(net.sourceforge.plantuml.timingdiagram.PlayerAnalog,double)>($r14, d11);

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d9, $d0);

        $r15 = interfaceinvoke r36.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        $r16 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog$2: net.sourceforge.plantuml.timingdiagram.PlayerAnalog this$0>;

        $r17 = $r16.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $d1 = virtualinvoke $r17.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getWidth()>();

        $d2 = $d1 - d9;

        $r18 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d2);

        interfaceinvoke $r15.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r18);

        return;
    }
}
