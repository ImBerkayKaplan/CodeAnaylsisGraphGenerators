class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.TextBlock outLabel;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, $r3;
        net.sourceforge.plantuml.graphic.TextBlock r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0> = r1;

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.graphic.TextBlock outLabel> = r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4, r8;
        boolean $z0;
        java.awt.geom.Point2D r5, $r11, r12, $r15, r16, $r19, r20, r22;
        double d0, d1, $d2, $d3, d4, d5, $d6, $d7, $d8, $d9, $d10;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks $r6, $r9, $r13, $r17, $r25, $r27;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10, $r14, $r18;
        byte $b0, $b1, $b2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r21, $r29;
        net.sourceforge.plantuml.ugraphic.UPolygon r23;
        net.sourceforge.plantuml.Direction r24, $r32;
        net.sourceforge.plantuml.ISkinParam $r26;
        net.sourceforge.plantuml.graphic.Rainbow $r28;
        net.sourceforge.plantuml.graphic.TextBlock $r30;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r31;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r5 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>();

        d1 = virtualinvoke r5.<java.awt.geom.Point2D: double getY()>();

        $r6 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r7 = $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r9 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r11 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointA()>();

        r12 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r11);

        $r13 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r15 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointB()>();

        r16 = virtualinvoke $r14.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r15);

        $r17 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r19 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointD()>();

        r20 = virtualinvoke $r18.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r19);

        $d2 = virtualinvoke r20.<java.awt.geom.Point2D: double getX()>();

        $b0 = d0 cmpg $d2;

        if $b0 >= 0 goto label2;

        r22 = r20;

        r23 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToRight()>();

        r24 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        goto label4;

     label2:
        $d3 = virtualinvoke r16.<java.awt.geom.Point2D: double getX()>();

        $b1 = d0 cmpl $d3;

        if $b1 <= 0 goto label3;

        r22 = r16;

        r23 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToLeft()>();

        r24 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        goto label4;

     label3:
        r22 = r12;

        r23 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        r24 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction DOWN>;

     label4:
        d4 = virtualinvoke r22.<java.awt.geom.Point2D: double getX()>();

        d5 = virtualinvoke r22.<java.awt.geom.Point2D: double getY()>();

        $r25 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r26 = virtualinvoke $r25.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r27 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r28 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.graphic.Rainbow access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks)>($r27);

        $r29 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r26, $r28, r23);

        $r30 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.graphic.TextBlock outLabel>;

        $r31 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment CENTER>;

        r21 = virtualinvoke $r29.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.VerticalAlignment)>($r30, $r31);

        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d1);

        $r32 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r24 != $r32 goto label5;

        $d6 = d0 - 10.0;

        $b2 = d4 cmpl $d6;

        if $b2 <= 0 goto label5;

        $d7 = d5 - 8.0;

        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, $d7);

        $d9 = d0 + 12.0;

        $d8 = d5 - 8.0;

        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d9, $d8);

        $d10 = d0 + 12.0;

        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d10, d5);

        goto label6;

     label5:
        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d5);

     label6:
        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d4, d5);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r21);

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r5;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        java.awt.geom.Point2D $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateOf(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r8 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        return $r8;
    }
}
