public class net.sourceforge.plantuml.timingdiagram.TimeConstraint extends java.lang.Object
{
    private final net.sourceforge.plantuml.timingdiagram.TimeTick tick1;
    private final net.sourceforge.plantuml.timingdiagram.TimeTick tick2;
    private final net.sourceforge.plantuml.cucadiagram.Display label;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.style.StyleBuilder styleBuilder;

    public void <init>(net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.timingdiagram.TimeTick, java.lang.String, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick r1, $r3, r4, $r6;
        java.lang.Object $r2, $r5;
        java.lang.String r7;
        net.sourceforge.plantuml.cucadiagram.Display $r8;
        net.sourceforge.plantuml.ISkinParam r9;
        net.sourceforge.plantuml.style.StyleBuilder $r10;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r4 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r7 := @parameter2: java.lang.String;

        r9 := @parameter3: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.timingdiagram.TimeTick) $r2;

        r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.timingdiagram.TimeTick tick1> = $r3;

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        $r6 = (net.sourceforge.plantuml.timingdiagram.TimeTick) $r5;

        r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.timingdiagram.TimeTick tick2> = $r6;

        $r8 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r7);

        r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.cucadiagram.Display label> = $r8;

        r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.ISkinParam skinParam> = r9;

        $r10 = interfaceinvoke r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.style.StyleBuilder styleBuilder> = $r10;

        return;
    }

    public final boolean containsStrict(net.sourceforge.plantuml.timingdiagram.TimeTick)
    {
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick r1, $r2, $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.timingdiagram.TimeTick tick1>;

        $i0 = virtualinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimeTick: int compareTo(net.sourceforge.plantuml.timingdiagram.TimeTick)>(r1);

        if $i0 >= 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.timingdiagram.TimeTick tick2>;

        $i1 = virtualinvoke $r3.<net.sourceforge.plantuml.timingdiagram.TimeTick: int compareTo(net.sourceforge.plantuml.timingdiagram.TimeTick)>(r1);

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final net.sourceforge.plantuml.timingdiagram.TimeTick getTick1()
    {
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.timingdiagram.TimeTick tick1>;

        return $r1;
    }

    public final net.sourceforge.plantuml.timingdiagram.TimeTick getTick2()
    {
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.timingdiagram.TimeTick tick2>;

        return $r1;
    }

    public final net.sourceforge.plantuml.cucadiagram.Display getLabel()
    {
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.cucadiagram.Display label>;

        return $r1;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r4;
        net.sourceforge.plantuml.graphic.TextBlock $r5;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = specialinvoke r1.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r4 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r3 = r1.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r2, $r4, $r3);

        return $r5;
    }

    private net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()
    {
        boolean $z0;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.style.Style $r1;
        net.sourceforge.plantuml.ISkinParam $r2, $r4;
        net.sourceforge.plantuml.api.ThemeStyle $r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r5;
        net.sourceforge.plantuml.graphic.FontConfiguration $r6, $r8;
        net.sourceforge.plantuml.ugraphic.UFont r7;
        net.sourceforge.plantuml.ugraphic.color.HColor $r9;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r10;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont serif(int)>(14);

        $r8 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r10 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r9 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor BLUE>;

        specialinvoke $r8.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>(r7, $r10, $r9, 0);

        return $r8;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.style.Style getStyle()>();

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r4 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r6 = virtualinvoke $r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r3, $r5);

        return $r6;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.timingdiagram.TimingRuler)
    {
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2, $r9, $r21, r22, r23, r24;
        net.sourceforge.plantuml.ugraphic.UBackground $r3;
        net.sourceforge.plantuml.timingdiagram.TimingRuler r4;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r5, $r6;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r19;
        net.sourceforge.plantuml.ugraphic.UStroke $r8;
        net.sourceforge.plantuml.ugraphic.ULine $r10;
        java.awt.geom.Point2D$Double $r11, $r13;
        net.sourceforge.plantuml.ugraphic.UPolygon $r12, $r14;
        net.sourceforge.plantuml.cucadiagram.Display $r15;
        net.sourceforge.plantuml.graphic.TextBlock r16;
        net.sourceforge.plantuml.graphic.StringBounder $r17, $r20;
        net.sourceforge.plantuml.awt.geom.Dimension2D r18;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        r22 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r4 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimingRuler;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.ugraphic.color.HColor getArrowColor()>();

        $r2 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r1);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r23 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.timingdiagram.TimeTick tick1>;

        d0 = virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r5);

        $r6 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.timingdiagram.TimeTick tick2>;

        d1 = virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r6);

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d0);

        r24 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.ugraphic.UStroke getUStroke()>();

        $r9 = interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $d2 = d1 - d0;

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d2);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

        $r11 = new java.awt.geom.Point2D$Double;

        specialinvoke $r11.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.ugraphic.UPolygon getPolygon(double,java.awt.geom.Point2D)>(-1.5707963267948966, $r11);

        interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

        $r13 = new java.awt.geom.Point2D$Double;

        $d3 = d1 - d0;

        specialinvoke $r13.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d3, 0.0);

        $r14 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.ugraphic.UPolygon getPolygon(double,java.awt.geom.Point2D)>(1.5707963267948966, $r13);

        interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r14);

        $r15 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.cucadiagram.Display label>;

        r16 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)>($r15);

        $r17 = interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r18 = interfaceinvoke r16.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r17);

        $d4 = d1 - d0;

        $d5 = virtualinvoke r18.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = $d4 - $d5;

        d7 = $d6 / 2.0;

        $r19 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r20 = interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d8 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: double getConstraintHeight(net.sourceforge.plantuml.graphic.StringBounder)>($r20);

        $d9 = neg $d8;

        specialinvoke $r19.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d7, $d9);

        $r21 = interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke r16.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r21);

        return;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getArrowColor()
    {
        boolean $z0;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.style.Style $r1;
        net.sourceforge.plantuml.style.PName $r2;
        net.sourceforge.plantuml.style.Value $r3;
        net.sourceforge.plantuml.ISkinParam $r4, $r6;
        net.sourceforge.plantuml.api.ThemeStyle $r5;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r7;
        net.sourceforge.plantuml.ugraphic.color.HColor $r8, $r9;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r9 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor MY_RED>;

        return $r9;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.style.Style getStyle()>();

        $r2 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r3 = virtualinvoke $r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r2);

        $r4 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r6 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r8 = interfaceinvoke $r3.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r5, $r7);

        return $r8;
    }

    private net.sourceforge.plantuml.style.Style getStyle()
    {
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.style.StyleBuilder $r2;
        net.sourceforge.plantuml.style.Style $r3;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        $r3 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r2);

        return $r3;
    }

    private net.sourceforge.plantuml.ugraphic.UStroke getUStroke()
    {
        boolean $z0;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.style.Style $r1;
        net.sourceforge.plantuml.ugraphic.UStroke $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        return $r3;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.style.Style getStyle()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        return $r2;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r6;

        r6 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName timingDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName constraintArrow>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public double getConstraintHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        net.sourceforge.plantuml.graphic.TextBlock r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.cucadiagram.Display label>;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        r4 = interfaceinvoke r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = staticinvoke <net.sourceforge.plantuml.timingdiagram.TimeConstraint: double getTopMargin()>();

        $d2 = $d0 + $d1;

        return $d2;
    }

    public static double getTopMargin()
    {
        return 5.0;
    }

    private net.sourceforge.plantuml.ugraphic.UPolygon getPolygon(double, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0, r1, r2;
        double d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.UPolygon $r3;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r5;

        r5 := @this: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        d1 := @parameter0: double;

        r0 := @parameter1: java.awt.geom.Point2D;

        $d2 = d1 + 0.3490658503988659;

        r1 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D onCircle(java.awt.geom.Point2D,double)>(r0, $d2);

        $d3 = d1 - 0.3490658503988659;

        r2 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D onCircle(java.awt.geom.Point2D,double)>(r0, $d3);

        $r3 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        $d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d5 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d4, $d5);

        $d6 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d7 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d6, $d7);

        $d8 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d9 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d8, $d9);

        return $r3;
    }

    public static double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder, java.util.List)
    {
        java.util.List r0;
        int $i0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        double $d0, d1;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return 0.0;

     label1:
        d1 = 0.0;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.timingdiagram.TimeConstraint) $r2;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: double getConstraintHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label2;

     label3:
        return d1;
    }
}
