class net.sourceforge.plantuml.zopfli.Katajainen extends java.lang.Object
{

    void <init>()
    {
        net.sourceforge.plantuml.zopfli.Katajainen r0;

        r0 := @this: net.sourceforge.plantuml.zopfli.Katajainen;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void lengthLimitedCodeLengths(net.sourceforge.plantuml.zopfli.Cookie, int[], int, int[])
    {
        net.sourceforge.plantuml.zopfli.Cookie r0;
        int[] r1, r9;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20;
        net.sourceforge.plantuml.zopfli.Cookie$Node[] r2, r3, r6, r13;
        net.sourceforge.plantuml.zopfli.Cookie$Node $r4, r5, $r7, r8, $r10, $r11, $r12, r14;
        boolean $z0;

        r0 := @parameter0: net.sourceforge.plantuml.zopfli.Cookie;

        r1 := @parameter1: int[];

        i3 := @parameter2: int;

        r9 := @parameter3: int[];

        virtualinvoke r0.<net.sourceforge.plantuml.zopfli.Cookie: void resetPool()>();

        i0 = lengthof r1;

        i15 = 0;

        r2 = r0.<net.sourceforge.plantuml.zopfli.Cookie: net.sourceforge.plantuml.zopfli.Cookie$Node[] leaves1>;

        i16 = 0;

     label01:
        if i16 >= i0 goto label03;

        $i13 = r1[i16];

        if $i13 == 0 goto label02;

        $i14 = r1[i16];

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.zopfli.Cookie: net.sourceforge.plantuml.zopfli.Cookie$Node node(int,int,net.sourceforge.plantuml.zopfli.Cookie$Node)>($i14, i16, null);

        r2[i15] = $r12;

        i15 = i15 + 1;

     label02:
        i16 = i16 + 1;

        goto label01;

     label03:
        if i15 != 0 goto label04;

        return;

     label04:
        if i15 != 1 goto label05;

        $r11 = r2[0];

        $i12 = $r11.<net.sourceforge.plantuml.zopfli.Cookie$Node: int count>;

        r9[$i12] = 1;

        return;

     label05:
        r13 = r0.<net.sourceforge.plantuml.zopfli.Cookie: net.sourceforge.plantuml.zopfli.Cookie$Node[] leaves2>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r13, 0, i15);

        staticinvoke <net.sourceforge.plantuml.zopfli.Katajainen: void sort(net.sourceforge.plantuml.zopfli.Cookie$Node[],net.sourceforge.plantuml.zopfli.Cookie$Node[],int,int)>(r13, r2, 0, i15);

        r3 = r0.<net.sourceforge.plantuml.zopfli.Cookie: net.sourceforge.plantuml.zopfli.Cookie$Node[] list0>;

        $r4 = r2[0];

        $i1 = $r4.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.zopfli.Cookie: net.sourceforge.plantuml.zopfli.Cookie$Node node(int,int,net.sourceforge.plantuml.zopfli.Cookie$Node)>($i1, 1, null);

        r6 = r0.<net.sourceforge.plantuml.zopfli.Cookie: net.sourceforge.plantuml.zopfli.Cookie$Node[] list1>;

        $r7 = r2[1];

        $i2 = $r7.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        r8 = virtualinvoke r0.<net.sourceforge.plantuml.zopfli.Cookie: net.sourceforge.plantuml.zopfli.Cookie$Node node(int,int,net.sourceforge.plantuml.zopfli.Cookie$Node)>($i2, 2, null);

        i17 = 0;

     label06:
        if i17 >= i3 goto label07;

        r3[i17] = r5;

        r6[i17] = r8;

        i17 = i17 + 1;

        goto label06;

     label07:
        $i4 = 2 * i15;

        i18 = $i4 - 4;

        i19 = 0;

     label08:
        if i19 >= i18 goto label11;

        $i10 = i18 - 1;

        if i19 != $i10 goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        $i11 = i3 - 1;

        staticinvoke <net.sourceforge.plantuml.zopfli.Katajainen: void boundaryPm(net.sourceforge.plantuml.zopfli.Cookie,net.sourceforge.plantuml.zopfli.Cookie$Node[],net.sourceforge.plantuml.zopfli.Cookie$Node[],net.sourceforge.plantuml.zopfli.Cookie$Node[],int,int,boolean)>(r0, r2, r3, r6, i15, $i11, $z0);

        i19 = i19 + 1;

        goto label08;

     label11:
        $i5 = i3 - 1;

        r14 = r6[$i5];

     label12:
        if r14 == null goto label15;

        $i6 = r14.<net.sourceforge.plantuml.zopfli.Cookie$Node: int count>;

        i20 = $i6 - 1;

     label13:
        if i20 < 0 goto label14;

        $r10 = r2[i20];

        $i7 = $r10.<net.sourceforge.plantuml.zopfli.Cookie$Node: int count>;

        $i8 = r9[$i7];

        $i9 = $i8 + 1;

        r9[$i7] = $i9;

        i20 = i20 + -1;

        goto label13;

     label14:
        r14 = r14.<net.sourceforge.plantuml.zopfli.Cookie$Node: net.sourceforge.plantuml.zopfli.Cookie$Node tail>;

        goto label12;

     label15:
        return;
    }

    private static void boundaryPm(net.sourceforge.plantuml.zopfli.Cookie, net.sourceforge.plantuml.zopfli.Cookie$Node[], net.sourceforge.plantuml.zopfli.Cookie$Node[], net.sourceforge.plantuml.zopfli.Cookie$Node[], int, int, boolean)
    {
        net.sourceforge.plantuml.zopfli.Cookie$Node[] r0, r2, r9;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        net.sourceforge.plantuml.zopfli.Cookie$Node $r1, $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        net.sourceforge.plantuml.zopfli.Cookie r6;
        boolean z0;

        r6 := @parameter0: net.sourceforge.plantuml.zopfli.Cookie;

        r9 := @parameter1: net.sourceforge.plantuml.zopfli.Cookie$Node[];

        r2 := @parameter2: net.sourceforge.plantuml.zopfli.Cookie$Node[];

        r0 := @parameter3: net.sourceforge.plantuml.zopfli.Cookie$Node[];

        i7 := @parameter4: int;

        i0 := @parameter5: int;

        z0 := @parameter6: boolean;

        $r1 = r0[i0];

        i1 = $r1.<net.sourceforge.plantuml.zopfli.Cookie$Node: int count>;

        if i0 != 0 goto label1;

        if i1 < i7 goto label1;

        return;

     label1:
        $r3 = r0[i0];

        r2[i0] = $r3;

        if i0 != 0 goto label2;

        $r15 = r9[i1];

        $i15 = $r15.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        $i14 = i1 + 1;

        $r16 = virtualinvoke r6.<net.sourceforge.plantuml.zopfli.Cookie: net.sourceforge.plantuml.zopfli.Cookie$Node node(int,int,net.sourceforge.plantuml.zopfli.Cookie$Node)>($i15, $i14, null);

        r0[i0] = $r16;

        goto label4;

     label2:
        $i2 = i0 - 1;

        $r4 = r2[$i2];

        $i5 = $r4.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        $i3 = i0 - 1;

        $r5 = r0[$i3];

        $i4 = $r5.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        i6 = $i5 + $i4;

        if i1 >= i7 goto label3;

        $r10 = r9[i1];

        $i11 = $r10.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        if i6 <= $i11 goto label3;

        $r11 = r9[i1];

        $i13 = $r11.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        $i12 = i1 + 1;

        $r12 = r0[i0];

        $r13 = $r12.<net.sourceforge.plantuml.zopfli.Cookie$Node: net.sourceforge.plantuml.zopfli.Cookie$Node tail>;

        $r14 = virtualinvoke r6.<net.sourceforge.plantuml.zopfli.Cookie: net.sourceforge.plantuml.zopfli.Cookie$Node node(int,int,net.sourceforge.plantuml.zopfli.Cookie$Node)>($i13, $i12, $r13);

        r0[i0] = $r14;

        goto label4;

     label3:
        $i8 = i0 - 1;

        $r7 = r0[$i8];

        $r8 = virtualinvoke r6.<net.sourceforge.plantuml.zopfli.Cookie: net.sourceforge.plantuml.zopfli.Cookie$Node node(int,int,net.sourceforge.plantuml.zopfli.Cookie$Node)>(i6, i1, $r7);

        r0[i0] = $r8;

        if z0 != 0 goto label4;

        $i9 = i0 - 1;

        staticinvoke <net.sourceforge.plantuml.zopfli.Katajainen: void boundaryPm(net.sourceforge.plantuml.zopfli.Cookie,net.sourceforge.plantuml.zopfli.Cookie$Node[],net.sourceforge.plantuml.zopfli.Cookie$Node[],net.sourceforge.plantuml.zopfli.Cookie$Node[],int,int,boolean)>(r6, r9, r2, r0, i7, $i9, 0);

        $i10 = i0 - 1;

        staticinvoke <net.sourceforge.plantuml.zopfli.Katajainen: void boundaryPm(net.sourceforge.plantuml.zopfli.Cookie,net.sourceforge.plantuml.zopfli.Cookie$Node[],net.sourceforge.plantuml.zopfli.Cookie$Node[],net.sourceforge.plantuml.zopfli.Cookie$Node[],int,int,boolean)>(r6, r9, r2, r0, i7, $i10, 0);

     label4:
        return;
    }

    private static void sort(net.sourceforge.plantuml.zopfli.Cookie$Node[], net.sourceforge.plantuml.zopfli.Cookie$Node[], int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16;
        net.sourceforge.plantuml.zopfli.Cookie$Node[] r0, r1;
        net.sourceforge.plantuml.zopfli.Cookie$Node $r2, $r3, $r4, $r5, $r6, $r7, $r8, r9;

        r1 := @parameter0: net.sourceforge.plantuml.zopfli.Cookie$Node[];

        r0 := @parameter1: net.sourceforge.plantuml.zopfli.Cookie$Node[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        i2 = i0 - i1;

        if i2 >= 7 goto label05;

        i10 = i1 + 1;

     label01:
        if i10 >= i0 goto label04;

        i11 = i10;

        i12 = i10 - 1;

     label02:
        if i11 <= i1 goto label03;

        $r6 = r0[i12];

        $i9 = $r6.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        $r7 = r0[i11];

        $i8 = $r7.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        if $i9 <= $i8 goto label03;

        r9 = r0[i11];

        $r8 = r0[i12];

        r0[i11] = $r8;

        r0[i12] = r9;

        i11 = i11 + -1;

        i12 = i12 + -1;

        goto label02;

     label03:
        i10 = i10 + 1;

        goto label01;

     label04:
        return;

     label05:
        $i3 = i1 + i0;

        i13 = $i3 >>> 1;

        staticinvoke <net.sourceforge.plantuml.zopfli.Katajainen: void sort(net.sourceforge.plantuml.zopfli.Cookie$Node[],net.sourceforge.plantuml.zopfli.Cookie$Node[],int,int)>(r0, r1, i1, i13);

        staticinvoke <net.sourceforge.plantuml.zopfli.Katajainen: void sort(net.sourceforge.plantuml.zopfli.Cookie$Node[],net.sourceforge.plantuml.zopfli.Cookie$Node[],int,int)>(r0, r1, i13, i0);

        i14 = i1;

        i15 = i1;

        i16 = i13;

     label06:
        if i14 >= i0 goto label10;

        if i16 >= i0 goto label07;

        if i15 >= i13 goto label08;

        $r4 = r1[i15];

        $i7 = $r4.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        $r5 = r1[i16];

        $i6 = $r5.<net.sourceforge.plantuml.zopfli.Cookie$Node: int weight>;

        if $i7 > $i6 goto label08;

     label07:
        $i4 = i15;

        i15 = i15 + 1;

        $r2 = r1[$i4];

        r0[i14] = $r2;

        goto label09;

     label08:
        $i5 = i16;

        i16 = i16 + 1;

        $r3 = r1[$i5];

        r0[i14] = $r3;

     label09:
        i14 = i14 + 1;

        goto label06;

     label10:
        return;
    }
}
