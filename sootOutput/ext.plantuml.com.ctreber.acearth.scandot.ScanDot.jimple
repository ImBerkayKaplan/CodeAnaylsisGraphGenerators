public class ext.plantuml.com.ctreber.acearth.scandot.ScanDot extends java.lang.Object implements java.lang.Comparable
{
    public static final int DotTypeStar;
    public static final int DotTypeGrid;
    private int fX;
    private int fY;
    private int fType;

    public void <init>(int, int, int)
    {
        ext.plantuml.com.ctreber.acearth.scandot.ScanDot r0;
        int i0, i1, i2;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scandot.ScanDot;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fType> = i0;

        r0.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fX> = i1;

        r0.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fY> = i2;

        return;
    }

    public void <init>(int, ext.plantuml.com.ctreber.acearth.util.Point2D)
    {
        ext.plantuml.com.ctreber.acearth.scandot.ScanDot r0;
        int i0, $i1, $i2;
        ext.plantuml.com.ctreber.acearth.util.Point2D r1;
        double $d0, $d1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scandot.ScanDot;

        i0 := @parameter0: int;

        r1 := @parameter1: ext.plantuml.com.ctreber.acearth.util.Point2D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fType> = i0;

        $d0 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.util.Point2D: double getX()>();

        $i1 = (int) $d0;

        r0.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fX> = $i1;

        $d1 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.util.Point2D: double getY()>();

        $i2 = (int) $d1;

        r0.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fY> = $i2;

        return;
    }

    public int compareTo(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.Class $r4;
        java.lang.String $r6;
        ext.plantuml.com.ctreber.acearth.scandot.ScanDot r7, r8;
        int $i0, $i1, $i2, $i3;
        byte $b4;

        r8 := @this: ext.plantuml.com.ctreber.acearth.scandot.ScanDot;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ext.plantuml.com.ctreber.acearth.scandot.ScanDot;

        if $z0 == 0 goto label4;

        r7 = (ext.plantuml.com.ctreber.acearth.scandot.ScanDot) r0;

        $i1 = r8.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fY>;

        $i0 = r7.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fY>;

        if $i1 <= $i0 goto label1;

        $b4 = 1;

        goto label3;

     label1:
        $i3 = r8.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fY>;

        $i2 = r7.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fY>;

        if $i3 >= $i2 goto label2;

        $b4 = -1;

        goto label3;

     label2:
        $b4 = 0;

     label3:
        return $b4;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t compare to ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public int getType()
    {
        ext.plantuml.com.ctreber.acearth.scandot.ScanDot r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scandot.ScanDot;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fType>;

        return $i0;
    }

    public int getX()
    {
        ext.plantuml.com.ctreber.acearth.scandot.ScanDot r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scandot.ScanDot;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fX>;

        return $i0;
    }

    public int getY()
    {
        ext.plantuml.com.ctreber.acearth.scandot.ScanDot r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scandot.ScanDot;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fY>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5, $r6;
        ext.plantuml.com.ctreber.acearth.scandot.ScanDot r1;
        int $i0, $i1, $i2;
        java.lang.String $r7;

        r1 := @this: ext.plantuml.com.ctreber.acearth.scandot.ScanDot;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = r1.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fX>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i1 = r1.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fY>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i2 = r1.<ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int fType>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int DotTypeGrid> = 1;

        <ext.plantuml.com.ctreber.acearth.scandot.ScanDot: int DotTypeStar> = 0;

        return;
    }
}
