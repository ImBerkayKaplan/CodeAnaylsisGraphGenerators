public class net.sourceforge.plantuml.command.regex.RegexResult extends java.lang.Object
{
    private final java.util.Map data;

    public void <init>(java.util.Map)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.util.Map r1, $r2;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);

        r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.util.Map data> = $r2;

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.util.Map $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexResult;

        $r1 = r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.util.Map data>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public net.sourceforge.plantuml.command.regex.RegexPartialMatch get(java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.command.regex.RegexPartialMatch $r4;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.util.Map data>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (net.sourceforge.plantuml.command.regex.RegexPartialMatch) $r3;

        return $r4;
    }

    public java.lang.String get(java.lang.String, int)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, $r5;
        java.util.Map $r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.command.regex.RegexPartialMatch r4;
        int i0;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.util.Map data>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (net.sourceforge.plantuml.command.regex.RegexPartialMatch) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: java.lang.String get(int)>(i0);

        return $r5;
    }

    public java.lang.String getLazzy(java.lang.String, int)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator r3;
        java.lang.Object $r4, $r6, $r9, $r12;
        java.util.Map$Entry r5;
        java.lang.String r7, $r8, $r11, $r14;
        boolean $z0, $z1;
        net.sourceforge.plantuml.command.regex.RegexPartialMatch r10, $r13;
        int i0, $i1;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexResult;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.util.Map data>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r6;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>(r7);

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (net.sourceforge.plantuml.command.regex.RegexPartialMatch) $r9;

        $i1 = virtualinvoke r10.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: int size()>();

        if i0 < $i1 goto label3;

        goto label1;

     label3:
        $r11 = virtualinvoke r10.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: java.lang.String get(int)>(i0);

        if $r11 == null goto label4;

        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (net.sourceforge.plantuml.command.regex.RegexPartialMatch) $r12;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: java.lang.String get(int)>(i0);

        return $r14;

     label4:
        goto label1;

     label5:
        return null;
    }

    public int size()
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexResult;

        $r1 = r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.util.Map data>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }
}
